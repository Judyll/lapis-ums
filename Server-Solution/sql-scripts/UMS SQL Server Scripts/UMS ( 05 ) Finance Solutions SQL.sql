--******************************************************--
-- This SQL Statements is used for the St. Paul			--
-- 		University UMS									--
--Programmed by: Judyll Mark T. Agan					--
--Date created: April 01, 2007							--
--FINANCE SOLUTIONS OBJECTS [ 5 ]						--
--******************************************************--

USE db_umsdev_03_30_2007
GO


-- ###########################################DROP TABLE CONSTRAINTS ##############################################################

--verifies if the School_Fee_Particular_Fee_Category_ID_FK constraint exists
IF OBJECT_ID('ums.school_fee_particular', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_particular
	DROP CONSTRAINT School_Fee_Particular_Fee_Category_ID_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Particular_Created_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_particular', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_particular
	DROP CONSTRAINT School_Fee_Particular_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Particular_Edited_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_particular', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_particular
	DROP CONSTRAINT School_Fee_Particular_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Information_Year_ID_FK constraint exists
IF OBJECT_ID('ums.school_fee_information', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_information
	DROP CONSTRAINT School_Fee_Information_Year_ID_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Information_Created_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_information', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_information
	DROP CONSTRAINT School_Fee_Information_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Information_Edited_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_information', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_information
	DROP CONSTRAINT School_Fee_Information_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Level_SysID_SchoolFee_FK constraint exists
IF OBJECT_ID('ums.school_fee_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_level
	DROP CONSTRAINT School_Fee_Level_SysID_SchoolFee_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Level_Year_Level_ID_FK constraint exists
IF OBJECT_ID('ums.school_fee_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_level
	DROP CONSTRAINT School_Fee_Level_Year_Level_ID_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Level_Created_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_level
	DROP CONSTRAINT School_Fee_Level_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Level_Edited_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_level
	DROP CONSTRAINT School_Fee_Level_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Course_SysID_Student_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_course', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_course
	DROP CONSTRAINT Student_Enrolment_Course_SysID_Student_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Course_Course_ID_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_course', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_course
	DROP CONSTRAINT Student_Enrolment_Course_Course_ID_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Course_SysID_SchoolFee_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_course', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_course
	DROP CONSTRAINT Student_Enrolment_Course_SysID_SchoolFee_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Course_SysID_Semester_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_course', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_course
	DROP CONSTRAINT Student_Enrolment_Course_SysID_Semester_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Course_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_course', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_course
	DROP CONSTRAINT Student_Enrolment_Course_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Course_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_course', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_course
	DROP CONSTRAINT Student_Enrolment_Course_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Level_SysID_EnrolmentCourse_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_level
	DROP CONSTRAINT Student_Enrolment_Level_SysID_EnrolmentCourse_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Level_SysID_FeeLevel_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_level
	DROP CONSTRAINT Student_Enrolment_Level_SysID_FeeLevel_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Level_SysID_Semester_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_level
	DROP CONSTRAINT Student_Enrolment_Level_SysID_Semester_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Level_SysID_FinanceStd_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_level
	DROP CONSTRAINT Student_Enrolment_Level_SysID_FinanceStd_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Level_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_level
	DROP CONSTRAINT Student_Enrolment_Level_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Enrolment_Level_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_enrolment_level', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_enrolment_level
	DROP CONSTRAINT Student_Enrolment_Level_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Details_SysID_FeeLevel_FK constraint exists
IF OBJECT_ID('ums.school_fee_details', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_details
	DROP CONSTRAINT School_Fee_Details_SysID_FeeLevel_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Details_SysID_FeeParticular_FK constraint exists
IF OBJECT_ID('ums.school_fee_details', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_details
	DROP CONSTRAINT School_Fee_Details_SysID_FeeParticular_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Details_Created_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_details', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_details
	DROP CONSTRAINT School_Fee_Details_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the School_Fee_Details_Edited_By_FK constraint exists
IF OBJECT_ID('ums.school_fee_details', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.school_fee_details
	DROP CONSTRAINT School_Fee_Details_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Additional_Fee_SysID_EnrolmentLevel_FK constraint exists
IF OBJECT_ID('ums.student_additional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_additional_fee
	DROP CONSTRAINT Student_Additional_Fee_SysID_EnrolmentLevel_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Additional_Fee_SysID_FeeParticular_FK constraint exists
IF OBJECT_ID('ums.student_additional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_additional_fee
	DROP CONSTRAINT Student_Additional_Fee_SysID_FeeParticular_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Additional_Fee_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_additional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_additional_fee
	DROP CONSTRAINT Student_Additional_Fee_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Additional_Fee_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_additional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_additional_fee
	DROP CONSTRAINT Student_Additional_Fee_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Optional_Fee_SysID_EnrolmentLevel_FK constraint exists
IF OBJECT_ID('ums.student_optional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_optional_fee
	DROP CONSTRAINT Student_Optional_Fee_SysID_EnrolmentLevel_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Optional_Fee_SysID_FeeDetails_FK constraint exists
IF OBJECT_ID('ums.student_optional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_optional_fee
	DROP CONSTRAINT Student_Optional_Fee_SysID_FeeDetails_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Optional_Fee_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_optional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_optional_fee
	DROP CONSTRAINT Student_Optional_Fee_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Optional_Fee_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_optional_fee', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_optional_fee
	DROP CONSTRAINT Student_Optional_Fee_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Chart_Of_Accounts_Accounting_Category_ID_FK constraint exists
IF OBJECT_ID('ums.chart_of_accounts', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.chart_of_accounts
	DROP CONSTRAINT Chart_Of_Accounts_Accounting_Category_ID_FK
END
GO
-----------------------------------------------------

--verifies if the Chart_Of_Accounts_Summary_Account_FK constraint exists
IF OBJECT_ID('ums.chart_of_accounts', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.chart_of_accounts
	DROP CONSTRAINT Chart_Of_Accounts_Summary_Account_FK
END
GO
-----------------------------------------------------

--verifies if the Chart_Of_Accounts_Created_By_FK constraint exists
IF OBJECT_ID('ums.chart_of_accounts', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.chart_of_accounts
	DROP CONSTRAINT Chart_Of_Accounts_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Chart_Of_Accounts_Edited_By_FK constraint exists
IF OBJECT_ID('ums.chart_of_accounts', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.chart_of_accounts
	DROP CONSTRAINT Chart_Of_Accounts_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Payments_SysID_Student_FK constraint exists
IF OBJECT_ID('ums.student_payments', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_payments
	DROP CONSTRAINT Student_Payments_SysID_Student_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Payments_SysID_Account_Credit_FK constraint exists
IF OBJECT_ID('ums.student_payments', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_payments
	DROP CONSTRAINT Student_Payments_SysID_Account_Credit_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Payments_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_payments', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_payments
	DROP CONSTRAINT Student_Payments_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Payments_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_payments', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_payments
	DROP CONSTRAINT Student_Payments_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Scholarship_Information_Course_Group_ID_FK constraint exists
IF OBJECT_ID('ums.scholarship_information', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.scholarship_information
	DROP CONSTRAINT Scholarship_Information_Course_Group_ID_FK
END
GO
-----------------------------------------------------

--verifies if the Scholarship_Information_Department_ID_FK constraint exists
IF OBJECT_ID('ums.scholarship_information', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.scholarship_information
	DROP CONSTRAINT Scholarship_Information_Department_ID_FK
END
GO
-----------------------------------------------------

--verifies if the Scholarship_Information_Created_By_FK constraint exists
IF OBJECT_ID('ums.scholarship_information', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.scholarship_information
	DROP CONSTRAINT Scholarship_Information_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Scholarship_Information_Edited_By_FK constraint exists
IF OBJECT_ID('ums.scholarship_information', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.scholarship_information
	DROP CONSTRAINT Scholarship_Information_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Scholarship_SysID_Scholarship_FK constraint exists
IF OBJECT_ID('ums.student_scholarship', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_scholarship
	DROP CONSTRAINT Student_Scholarship_SysID_Scholarship_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Scholarship_SysID_EnrolmentLevel_FK constraint exists
IF OBJECT_ID('ums.student_scholarship', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_scholarship
	DROP CONSTRAINT Student_Scholarship_SysID_EnrolmentLevel_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Scholarship_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_scholarship', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_scholarship
	DROP CONSTRAINT Student_Scholarship_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Scholarship_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_scholarship', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_scholarship
	DROP CONSTRAINT Student_Scholarship_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Discounts_SysID_StudentScholarship_FK constraint exists
IF OBJECT_ID('ums.student_discounts', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_discounts
	DROP CONSTRAINT Student_Discounts_SysID_StudentScholarship_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Discounts_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_discounts', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_discounts
	DROP CONSTRAINT Student_Discounts_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Discounts_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_discounts', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_discounts
	DROP CONSTRAINT Student_Discounts_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Reimbursements_SysID_Student_FK constraint exists
IF OBJECT_ID('ums.student_reimbursements', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_reimbursements
	DROP CONSTRAINT Student_Reimbursements_SysID_Student_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Reimbursements_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_reimbursements', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_reimbursements
	DROP CONSTRAINT Student_Reimbursements_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Reimbursements_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_reimbursements', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_reimbursements
	DROP CONSTRAINT Student_Reimbursements_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Credit_Memo_SysID_Student_FK constraint exists
IF OBJECT_ID('ums.student_credit_memo', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_credit_memo
	DROP CONSTRAINT Student_Credit_Memo_SysID_Student_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Credit_Memo_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_credit_memo', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_credit_memo
	DROP CONSTRAINT Student_Credit_Memo_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Credit_Memo_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_credit_memo', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_credit_memo
	DROP CONSTRAINT Student_Credit_Memo_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Balance_Forwarded_SysID_Student_FK constraint exists
IF OBJECT_ID('ums.student_balance_forwarded', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_balance_forwarded
	DROP CONSTRAINT Student_Balance_Forwarded_SysID_Student_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Balance_Forwarded_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_balance_forwarded', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_balance_forwarded
	DROP CONSTRAINT Student_Balance_Forwarded_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Balance_Forwarded_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_balance_forwarded', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_balance_forwarded
	DROP CONSTRAINT Student_Balance_Forwarded_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Promissory_Note_SysID_Student_FK constraint exists
IF OBJECT_ID('ums.student_promissory_note', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_promissory_note
	DROP CONSTRAINT Student_Promissory_Note_SysID_Student_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Promissory_Note_Created_By_FK constraint exists
IF OBJECT_ID('ums.student_promissory_note', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_promissory_note
	DROP CONSTRAINT Student_Promissory_Note_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Student_Promissory_Note_Edited_By_FK constraint exists
IF OBJECT_ID('ums.student_promissory_note', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_promissory_note
	DROP CONSTRAINT Student_Promissory_Note_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Cancelled_Receipt_No_Created_By_FK constraint exists
IF OBJECT_ID('ums.cancelled_receipt_no', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.cancelled_receipt_no
	DROP CONSTRAINT Cancelled_Receipt_No_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Cancelled_Receipt_No_Edited_By_FK constraint exists
IF OBJECT_ID('ums.cancelled_receipt_no', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.cancelled_receipt_no
	DROP CONSTRAINT Cancelled_Receipt_No_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Miscellaneous_Income_SysID_Student_FK constraint exists
IF OBJECT_ID('ums.miscellaneous_income', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.miscellaneous_income
	DROP CONSTRAINT Miscellaneous_Income_SysID_Student_FK
END
GO
-----------------------------------------------------

--verifies if the Miscellaneous_Income_SysID_Employee_FK constraint exists
IF OBJECT_ID('ums.miscellaneous_income', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.miscellaneous_income
	DROP CONSTRAINT Miscellaneous_Income_SysID_Employee_FK
END
GO
-----------------------------------------------------

--verifies if the Miscellaneous_Income_SysID_Account_Credit_FK constraint exists
IF OBJECT_ID('ums.miscellaneous_income', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.miscellaneous_income
	DROP CONSTRAINT Miscellaneous_Income_SysID_Account_Credit_FK
END
GO
-----------------------------------------------------

--verifies if the Miscellaneous_Income_Created_By_FK constraint exists
IF OBJECT_ID('ums.miscellaneous_income', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.miscellaneous_income
	DROP CONSTRAINT Miscellaneous_Income_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Miscellaneous_Income_Edited_By_FK constraint exists
IF OBJECT_ID('ums.miscellaneous_income', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.miscellaneous_income
	DROP CONSTRAINT Miscellaneous_Income_Edited_By_FK
END
GO
-----------------------------------------------------

--verifies if the Breakdown_Bank_Deposit_SysID_Account_FK constraint exists
IF OBJECT_ID('ums.breakdown_bank_deposit', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.breakdown_bank_deposit
	DROP CONSTRAINT Breakdown_Bank_Deposit_SysID_Account_FK
END
GO
-----------------------------------------------------

--verifies if the Breakdown_Bank_Deposit_Created_By_FK constraint exists
IF OBJECT_ID('ums.breakdown_bank_deposit', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.breakdown_bank_deposit
	DROP CONSTRAINT Breakdown_Bank_Deposit_Created_By_FK
END
GO
-----------------------------------------------------

--verifies if the Breakdown_Bank_Deposit_Edited_By_FK constraint exists
IF OBJECT_ID('ums.breakdown_bank_deposit', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.breakdown_bank_deposit
	DROP CONSTRAINT Breakdown_Bank_Deposit_Edited_By_FK
END
GO
-----------------------------------------------------

-- ########################################END DROP TABLE CONSTRAINTS ##############################################################




-- ########################################DROP DEPENDENT TABLE CONSTRAINTS ##############################################################

--verifies if the Student_Load_SysID_EnrolmentLevel_FK constraint exists
IF OBJECT_ID('ums.student_load', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_load
	DROP CONSTRAINT Student_Load_SysID_EnrolmentLevel_FK
END
GO
-----------------------------------------------------

--verifies if the Enrolment_Course_Major_SysID_EnrolmentLevel_FK constraint exists
IF OBJECT_ID('ums.enrolment_course_major', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.enrolment_course_major
	DROP CONSTRAINT Enrolment_Course_Major_SysID_EnrolmentLevel_FK
END
GO
-----------------------------------------------------	

-- ########################################END DROP DEPENDENT TABLE CONSTRAINTS ##############################################################



-- ################################################TABLE "school_fee_category" OBJECTS######################################################
-- verifies if the school_fee_category table exists
IF OBJECT_ID('ums.school_fee_category', 'U') IS NOT NULL
	DROP TABLE ums.school_fee_category
GO

CREATE TABLE ums.school_fee_category 			
(
	fee_category_id varchar (50) NOT NULL 
		CONSTRAINT School_Fee_Category_Fee_Category_ID_PK PRIMARY KEY (fee_category_id)
		CONSTRAINT School_Fee_Category_Fee_Category_ID_CK CHECK (fee_category_id LIKE 'FCID%'),
	category_description varchar (100) NOT NULL
		CONSTRAINT School_Fee_Category_Category_Description_UQ UNIQUE (category_description),
	category_no tinyint NOT NULL
		CONSTRAINT School_Fee_Category_Category_No_UQ UNIQUE (category_no),

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT School_Fee_Category_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- verifies that the trigger "School_Fee_Category_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.School_Fee_Category_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Category_Trigger_Instead_Update
GO

CREATE TRIGGER ums.School_Fee_Category_Trigger_Instead_Update
	ON  ums.school_fee_category
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Update a school fee category', 'School Fee Category'
	
GO
-------------------------------------------------------------------------

-- verifies that the trigger "School_Fee_Category_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.School_Fee_Category_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Category_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.School_Fee_Category_Trigger_Instead_Delete
	ON  ums.school_fee_category
	INSTEAD OF DELETE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Delete a school fee category', 'School Fee Category'
	
GO
-------------------------------------------------------------------------

-- verifies if the procedure "SelectSchoolFeeCategory" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectSchoolFeeCategory')
   DROP PROCEDURE ums.SelectSchoolFeeCategory
GO

CREATE PROCEDURE ums.SelectSchoolFeeCategory
	
	@system_user_id varchar(50) = ''
	
AS

	IF ums.IsActiveSystemUserInfo(@system_user_id) = 1
	BEGIN
		
		SELECT
			sfc.fee_category_id AS fee_category_id,
			sfc.category_description AS category_description,
			sfc.category_no AS category_no			
		FROM
			ums.school_fee_category AS sfc
		ORDER BY sfc.category_no ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee category', 'School Fee Category'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectSchoolFeeCategory TO db_umsusers
GO
-------------------------------------------------------------


-- ################################################END TABLE "school_fee_category" OBJECTS###################################################




-- ################################################TABLE "school_fee_particular" OBJECTS######################################################
-- verifies if the school_fee_particular table exists
IF OBJECT_ID('ums.school_fee_particular', 'U') IS NOT NULL
	DROP TABLE ums.school_fee_particular
GO

CREATE TABLE ums.school_fee_particular 			
(
	sysid_feeparticular varchar (50) NOT NULL 
		CONSTRAINT School_Fee_Particular_SysID_FeeParticular_PK PRIMARY KEY (sysid_feeparticular)
		CONSTRAINT School_Fee_Particular_SysID_FeeParticular_CK CHECK (sysid_feeparticular LIKE 'SYSFPR%'),	
	fee_category_id varchar (50) NOT NULL
		CONSTRAINT School_Fee_Particular_Fee_Category_ID_FK FOREIGN KEY REFERENCES ums.school_fee_category(fee_category_id) ON UPDATE NO ACTION,
	particular_description varchar (100) NOT NULL
		CONSTRAINT School_Fee_Particular_Particular_Description_UQ UNIQUE (particular_description),

	is_optional bit NOT NULL DEFAULT (0),
	is_office_access bit NOT NULL DEFAULT (0),
	is_entry_level_included bit NOT NULL DEFAULT (0),
	is_graduation_fee bit NOT NULL DEFAULT (0),

	is_marked_deleted bit NOT NULL DEFAULT (0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT School_Fee_Particular_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT School_Fee_Particular_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT School_Fee_Particular_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the school_fee_particular table 
CREATE INDEX School_Fee_Particular_SysID_FeeParticular_Index
	ON ums.school_fee_particular (sysid_feeparticular ASC)
GO
------------------------------------------------------------------

/*verifies that the trigger "School_Fee_Particular_Trigger_Insert" already exist*/
IF OBJECT_ID ('ums.School_Fee_Particular_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Particular_Trigger_Insert
GO

CREATE TRIGGER ums.School_Fee_Particular_Trigger_Insert
	ON  ums.school_fee_particular
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_feeparticular varchar (50)
	DECLARE @fee_category_id varchar (50)
	DECLARE @particular_description varchar (100)	
	DECLARE @is_optional bit
	DECLARE @is_office_access bit
	DECLARE @is_entry_level_included bit
	DECLARE @is_graduation_fee bit
	DECLARE @created_by varchar (50)

	DECLARE @optional_string varchar (50)
	DECLARE @office_string varchar (50)
	DECLARE @included_string varchar (50)
	DECLARE @graduation_string varchar (50)
	
	SELECT 
		@sysid_feeparticular = i.sysid_feeparticular,
		@fee_category_id = i.fee_category_id,
		@particular_description = i.particular_description,
		@is_optional = i.is_optional,
		@is_office_access = i.is_office_access,
		@is_entry_level_included = i.is_entry_level_included,
		@is_graduation_fee = i.is_graduation_fee,
		@created_by = i.created_by
	FROM INSERTED AS i

	IF @is_optional = 1
	BEGIN
		SET @optional_string = 'YES'
	END
	ELSE
	BEGIN
		SET @optional_string = 'NO'
	END

	IF @is_office_access = 1
	BEGIN
		SET @office_string = 'YES'
	END
	ELSE
	BEGIN
		SET @office_string = 'NO'
	END

	IF @is_entry_level_included = 1
	BEGIN
		SET @included_string = 'YES'
	END
	ELSE
	BEGIN
		SET @included_string = 'NO'
	END

	IF @is_graduation_fee = 1
	BEGIN
		SET @graduation_string = 'YES'
	END
	ELSE
	BEGIN
		SET @graduation_string = 'NO'
	END

	SET @transaction_done = 'CREATED a new school fee particulars ' + 
							'[Fee Particular ID: ' + ISNULL(@sysid_feeparticular, '') +
							'][Fee Category: ' + ISNULL((SELECT category_description FROM ums.school_fee_category WHERE fee_category_id = @fee_category_id), '') +
							'][Description: ' + ISNULL(@particular_description, '') +
							'][Is Optional: ' + ISNULL(@optional_string, '') +
							'][Is Accessible to Office Secretaries: ' + ISNULL(@office_string, '') +
							'][Is Included in All Entry Levels: ' + ISNULL(@included_string, '') +
							'][Is A Graduation Fee: ' + ISNULL(@graduation_string, '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
/*-----------------------------------------------------------------*/

/*verifies that the trigger "School_Fee_Particular_Trigger_Instead_Update" already exist*/
IF OBJECT_ID ('ums.School_Fee_Particular_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Particular_Trigger_Instead_Update
GO

CREATE TRIGGER ums.School_Fee_Particular_Trigger_Instead_Update
	ON  ums.school_fee_particular
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_feeparticular varchar (50)
	DECLARE @particular_description varchar (100)
	DECLARE @is_office_access bit
	DECLARE @edited_by varchar (50)

	DECLARE @particular_description_b varchar (100)
	DECLARE @is_office_access_b bit

	DECLARE @office_string varchar (50)
	DECLARE @office_string_b varchar (50)

	DECLARE @has_update bit
	
	SELECT 
		@sysid_feeparticular = i.sysid_feeparticular,
		@particular_description = i.particular_description,
		@is_office_access = i.is_office_access,
		@edited_by = i.edited_by
	FROM INSERTED AS i

	SELECT
		@particular_description_b = particular_description,
		@is_office_access_b = is_office_access
	FROM ums.school_fee_particular
	WHERE
		sysid_feeparticular = @sysid_feeparticular

	SET @transaction_done = ''
	SET @has_update = 0

	IF NOT ISNULL(@particular_description COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@particular_description_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
	BEGIN
		SET @transaction_done = @transaction_done + '[Description Before: ' + ISNULL(@particular_description_b, '') + ']' +
													'[Description After: ' + ISNULL(@particular_description, '') + ']'
		SET @has_update = 1
	END
	ELSE
	BEGIN
		SET @transaction_done = @transaction_done + '[Description: ' + ISNULL(@particular_description, '') + ']'
	END
	
	IF NOT @is_office_access = @is_office_access_b
	BEGIN

		IF @is_office_access = 1
		BEGIN
			SET @office_string = 'YES'
		END
		ELSE
		BEGIN
			SET @office_string = 'NO'
		END

		IF @is_office_access_b = 1
		BEGIN
			SET @office_string_b = 'YES'
		END
		ELSE
		BEGIN
			SET @office_string_b = 'NO'
		END
		
		SET @transaction_done = @transaction_done + '[Is Accessible to Office Secretaries Before: ' + ISNULL(@office_string_b, '') + ']' +
													'[Is Accessible to Office Secretaries After: ' + ISNULL(@office_string, '') + ']'

		SET @has_update = 1
	END

	IF @has_update = 1
	BEGIN

		UPDATE ums.school_fee_particular SET
			particular_description = @particular_description,
			is_office_access = @is_office_access,
			edited_on = GETDATE(),
			edited_by = @edited_by
		WHERE
			sysid_feeparticular = @sysid_feeparticular

		SET @transaction_done = 'UPDATED a school fee particulars ' + 
							'[Fee Particular ID: ' + ISNULL(@sysid_feeparticular, '') + ']' + @transaction_done

		IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
		BEGIN
			SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @edited_by
		END
				
		EXECUTE ums.InsertTransactionLog @edited_by, @network_information, @transaction_done

	END	
	ELSE IF NOT @edited_by IS NULL
	BEGIN

		--used for the delete trigger
		UPDATE ums.school_fee_particular SET
			edited_on = GETDATE(),
			edited_by = @edited_by
		WHERE
			sysid_feeparticular = @sysid_feeparticular

	END

GO
/*-----------------------------------------------------------------*/

-- verifies that the trigger "School_Fee_Particular_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.School_Fee_Particular_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Particular_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.School_Fee_Particular_Trigger_Instead_Delete
	ON  ums.school_fee_particular
	INSTEAD OF DELETE
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_feeparticular varchar (50)
	DECLARE @fee_category_id varchar (50)
	DECLARE @particular_description varchar (100)	
	DECLARE @is_optional bit
	DECLARE @is_office_access bit
	DECLARE @is_entry_level_included bit
	DECLARE @is_graduation_fee bit
	DECLARE @deleted_by varchar (50)

	DECLARE @optional_string varchar (50)
	DECLARE @office_string varchar (50)
	DECLARE @included_string varchar (50)
	DECLARE @graduation_string varchar (50)
	
	SELECT 
		@sysid_feeparticular = d.sysid_feeparticular,
		@fee_category_id = d.fee_category_id,
		@particular_description = d.particular_description,
		@is_optional = d.is_optional,
		@is_office_access = d.is_office_access,
		@is_entry_level_included = d.is_entry_level_included,
		@is_graduation_fee = d.is_graduation_fee,
		@deleted_by = d.edited_by
	FROM DELETED AS d

	IF @is_optional = 1
	BEGIN
		SET @optional_string = 'YES'
	END
	ELSE
	BEGIN
		SET @optional_string = 'NO'
	END

	IF @is_office_access = 1
	BEGIN
		SET @office_string = 'YES'
	END
	ELSE
	BEGIN
		SET @office_string = 'NO'
	END

	IF @is_entry_level_included = 1
	BEGIN
		SET @included_string = 'YES'
	END
	ELSE
	BEGIN
		SET @included_string = 'NO'
	END

	IF @is_graduation_fee = 1
	BEGIN
		SET @graduation_string = 'YES'
	END
	ELSE
	BEGIN
		SET @graduation_string = 'NO'
	END

	UPDATE ums.school_fee_particular SET is_marked_deleted = 1, edited_by = @deleted_by WHERE sysid_feeparticular = @sysid_feeparticular

	SET @transaction_done = 'MARK AS DELETED a school fee particular ' + 
							'[Fee Particular ID: ' + ISNULL(@sysid_feeparticular, '') +
							'][Fee Category: ' + ISNULL((SELECT category_description FROM ums.school_fee_category WHERE fee_category_id = @fee_category_id), '') +
							'][Description: ' + ISNULL(@particular_description, '') +
							'][Is Optional: ' + ISNULL(@optional_string, '') +
							'][Is Accessible to Office Secretaries: ' + ISNULL(@office_string, '') +
							'][Is Included in All Entry Levels: ' + ISNULL(@included_string, '') +
							'][Is A Graduation Fee: ' + ISNULL(@graduation_string, '') +
							']'


	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @deleted_by
	END
			
	EXECUTE ums.InsertTransactionLog @deleted_by, @network_information, @transaction_done
	
GO
-------------------------------------------------------------------------


-- verifies if the procedure "InsertSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertSchoolFeeParticular')
   DROP PROCEDURE ums.InsertSchoolFeeParticular
GO

CREATE PROCEDURE ums.InsertSchoolFeeParticular

	@sysid_feeparticular varchar (50) = '',
	@fee_category_id varchar (50) = '',
	@particular_description varchar (100) = '',
	@is_optional bit = 0,
	@is_office_access bit = 0,
	@is_entry_level_included bit = 0,
	@is_graduation_fee bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		IF @is_optional = 0
		BEGIN
			SET @is_office_access = 0
			SET @is_entry_level_included = 0
		END

		INSERT INTO ums.school_fee_particular
		(
			sysid_feeparticular,
			fee_category_id,
			particular_description,
			is_optional,
			is_office_access,
			is_entry_level_included,
			is_graduation_fee,
			created_by
		)
		VALUES
		(
			@sysid_feeparticular,
			@fee_category_id,
			@particular_description,
			@is_optional,
			@is_office_access,
			@is_entry_level_included,
			@is_graduation_fee,
			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new school fee particular', 'School Fee Particular'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateSchoolFeeParticular')
   DROP PROCEDURE ums.UpdateSchoolFeeParticular
GO

CREATE PROCEDURE ums.UpdateSchoolFeeParticular

	@sysid_feeparticular varchar (50) = '',
	@particular_description varchar (100) = '',
	@is_office_access bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsMarkedDeletedSchoolFeeParticular(@sysid_feeparticular) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		DECLARE @is_optional bit

		SELECT @is_optional = is_optional FROM ums.school_fee_particular WHERE sysid_feeparticular = @sysid_feeparticular

		IF @is_optional = 0
		BEGIN
			SET @is_office_access = 0
		END

		UPDATE ums.school_fee_particular SET
			particular_description = @particular_description,
			is_office_access = @is_office_access,
			edited_by = @edited_by
		WHERE
			sysid_feeparticular = @sysid_feeparticular
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a school fee particular', 'School Fee Particular'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteSchoolFeeParticular')
   DROP PROCEDURE ums.DeleteSchoolFeeParticular
GO

CREATE PROCEDURE ums.DeleteSchoolFeeParticular

	@sysid_feeparticular varchar (50) = '',

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1))  AND
		(ums.IsMarkedDeletedSchoolFeeParticular(@sysid_feeparticular) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

		UPDATE ums.school_fee_particular SET
			edited_by = @deleted_by
		WHERE
			sysid_feeparticular = @sysid_feeparticular

		DELETE FROM ums.school_fee_particular WHERE sysid_feeparticular = @sysid_feeparticular
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a school fee particular', 'School Fee Particular'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectSchoolFeeParticular')
   DROP PROCEDURE ums.SelectSchoolFeeParticular
GO

CREATE PROCEDURE ums.SelectSchoolFeeParticular
	
	@system_user_id varchar(50) = ''
	
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1)
	BEGIN
		
		SELECT
			sfp.sysid_feeparticular AS sysid_feeparticular,			
			sfp.fee_category_id AS fee_category_id,
			sfp.particular_description AS particular_description,
			sfp.is_optional AS is_optional,
			sfp.is_office_access AS is_office_access,
			sfp.is_entry_level_included AS is_entry_level_included,
			sfp.is_graduation_fee AS is_graduation_fee,
			sfp.is_marked_deleted AS is_marked_deleted,
			sfc.category_description AS category_description,
			sfc.category_no AS category_no			
		FROM
			ums.school_fee_particular AS sfp
		INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
		ORDER BY 
			sfc.category_no, sfp.particular_description ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query school fee particular', 'School Fee Particular'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectForAdditionalFeeSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectForAdditionalFeeSchoolFeeParticular')
   DROP PROCEDURE ums.SelectForAdditionalFeeSchoolFeeParticular
GO

CREATE PROCEDURE ums.SelectForAdditionalFeeSchoolFeeParticular
	
	@system_user_id varchar(50) = ''
	
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1)
	BEGIN
		
		SELECT
			sfp.sysid_feeparticular AS sysid_feeparticular,			
			sfp.fee_category_id AS fee_category_id,
			sfp.particular_description AS particular_description,
			sfp.is_optional AS is_optional,
			sfp.is_office_access AS is_office_access,
			sfp.is_entry_level_included AS is_entry_level_included,
			sfp.is_graduation_fee AS is_graduation_fee,
			sfp.is_marked_deleted AS is_marked_deleted,
			sfc.category_description AS category_description,
			sfc.category_no AS category_no			
		FROM
			ums.school_fee_particular AS sfp
		INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
		WHERE
			(sfc.category_no NOT IN (1, 4)) --AND (NOT sfp.is_optional = 1)
		ORDER BY 
			sfc.category_no, sfp.particular_description ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query school fee particular', 'School Fee Particular'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectForAdditionalFeeSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountSchoolFeeParticular')
   DROP PROCEDURE ums.GetCountSchoolFeeParticular
GO

CREATE PROCEDURE ums.GetCountSchoolFeeParticular

	@system_user_id varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT COUNT(sysid_feeparticular) FROM ums.school_fee_particular
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee particular', 'School Fee Particular'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDSchoolFeeParticular')
   DROP PROCEDURE ums.IsExistsSysIDSchoolFeeParticular
GO

CREATE PROCEDURE ums.IsExistsSysIDSchoolFeeParticular

	@sysid_feeparticular varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsSysIDSchoolFeePart(@sysid_feeparticular)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee particular', 'School Fee Particular'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsParticularDescriptionSchoolFeeParticular" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsParticularDescriptionSchoolFeeParticular')
   DROP PROCEDURE ums.IsExistsParticularDescriptionSchoolFeeParticular
GO

CREATE PROCEDURE ums.IsExistsParticularDescriptionSchoolFeeParticular

	@sysid_feeparticular varchar (50) = '',
	@particular_description varchar (100) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsParticularDescriptionSchoolFeePart(@sysid_feeparticular, @particular_description)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee particular', 'School Fee Particular'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsParticularDescriptionSchoolFeeParticular TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDSchoolFeePart" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDSchoolFeePart') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDSchoolFeePart
GO

CREATE FUNCTION ums.IsExistsSysIDSchoolFeePart
(	
	@sysid_feeparticular varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feeparticular FROM ums.school_fee_particular WHERE sysid_feeparticular = @sysid_feeparticular)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsParticularDescriptionSchoolFeePart" function already exist
IF OBJECT_ID (N'ums.IsExistsParticularDescriptionSchoolFeePart') IS NOT NULL
   DROP FUNCTION ums.IsExistsParticularDescriptionSchoolFeePart
GO

CREATE FUNCTION ums.IsExistsParticularDescriptionSchoolFeePart
(	
	@sysid_feeparticular varchar (50) = '',
	@particular_description varchar (100) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feeparticular FROM ums.school_fee_particular WHERE NOT sysid_feeparticular = @sysid_feeparticular AND 
															((REPLACE(particular_description, ' ', '')) LIKE REPLACE(@particular_description, ' ', '')))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsOptionalSchoolFeeParticular" function already exist
IF OBJECT_ID (N'ums.IsOptionalSchoolFeeParticular') IS NOT NULL
   DROP FUNCTION ums.IsOptionalSchoolFeeParticular
GO

CREATE FUNCTION ums.IsOptionalSchoolFeeParticular
(	
	@sysid_feedetails varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feedetails FROM ums.school_fee_details WHERE sysid_feedetails = @sysid_feedetails AND is_optional = 1)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsOfficeAccessSchoolFeeParticular" function already exist
IF OBJECT_ID (N'ums.IsOfficeAccessSchoolFeeParticular') IS NOT NULL
   DROP FUNCTION ums.IsOfficeAccessSchoolFeeParticular
GO

CREATE FUNCTION ums.IsOfficeAccessSchoolFeeParticular
(	
	@sysid_feedetails varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feedetails FROM ums.school_fee_details WHERE sysid_feedetails = @sysid_feedetails AND is_optional = 1 AND
																				is_office_access = 1)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsMarkedDeletedSchoolFeeParticular" function already exist
IF OBJECT_ID (N'ums.IsMarkedDeletedSchoolFeeParticular') IS NOT NULL
   DROP FUNCTION ums.IsMarkedDeletedSchoolFeeParticular
GO

CREATE FUNCTION ums.IsMarkedDeletedSchoolFeeParticular
(	
	@sysid_feeparticular varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feeparticular FROM ums.school_fee_particular WHERE sysid_feeparticular = @sysid_feeparticular AND 
															is_marked_deleted = 1)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------
-- ##############################################END TABLE "school_fee_particular" OBJECTS######################################################




-- ################################################TABLE "school_fee_information" OBJECTS######################################################
-- verifies if the school_fee_information table exists
IF OBJECT_ID('ums.school_fee_information', 'U') IS NOT NULL
	DROP TABLE ums.school_fee_information
GO

CREATE TABLE ums.school_fee_information 			
(
	sysid_schoolfee varchar (50) NOT NULL 
		CONSTRAINT School_Fee_Information_SysID_SchoolFee_PK PRIMARY KEY (sysid_schoolfee)
		CONSTRAINT School_Fee_Information_SysID_SchoolFee_CK CHECK (sysid_schoolfee LIKE 'SYSSCF%'),	
	year_id varchar (50) NOT NULL
		CONSTRAINT School_Fee_Information_Year_ID_FK FOREIGN KEY REFERENCES ums.school_year(year_id) ON UPDATE NO ACTION
		CONSTRAINT School_Fee_Information_Year_ID_UQ UNIQUE (year_id),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT School_Fee_Information_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT School_Fee_Information_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT School_Fee_Information_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the school_fee_information table 
CREATE INDEX School_Fee_Information_SysID_SchoolFee_Index
	ON ums.school_fee_information (sysid_schoolfee ASC)
GO
------------------------------------------------------------------

/*verifies that the trigger "School_Fee_Information_Trigger_Insert" already exist*/
IF OBJECT_ID ('ums.School_Fee_Information_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Information_Trigger_Insert
GO

CREATE TRIGGER ums.School_Fee_Information_Trigger_Insert
	ON  ums.school_fee_information
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_schoolfee varchar (50)
	DECLARE @year_id varchar (50)
	DECLARE @created_by varchar (50)
	
	SELECT 
		@sysid_schoolfee = i.sysid_schoolfee,
		@year_id = i.year_id,
		@created_by = i.created_by
	FROM INSERTED AS i

	SET @transaction_done = 'CREATED a new school fee information ' + 
							'[Fee Information ID: ' + ISNULL(@sysid_schoolfee, '') +
							'][School Year: ' + ISNULL((SELECT year_description FROM ums.school_year WHERE year_id = @year_id), '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
/*-----------------------------------------------------------------*/

-- verifies that the trigger "School_Fee_Information_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.School_Fee_Information_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Information_Trigger_Instead_Update
GO

CREATE TRIGGER ums.School_Fee_Information_Trigger_Instead_Update
	ON  ums.school_fee_information
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Update a school fee information', 'School Fee Information'
	
GO
-------------------------------------------------------------------------

-- verifies that the trigger "School_Fee_Information_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.School_Fee_Information_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Information_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.School_Fee_Information_Trigger_Instead_Delete
	ON  ums.school_fee_information
	INSTEAD OF DELETE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Delete a school fee information', 'School Fee Information'
	
GO
-------------------------------------------------------------------------


-- verifies if the procedure "InsertSchoolFeeInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertSchoolFeeInformation')
   DROP PROCEDURE ums.InsertSchoolFeeInformation
GO

CREATE PROCEDURE ums.InsertSchoolFeeInformation

	@sysid_schoolfee varchar (50) = '',
	@year_id varchar (50) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsExistsYearIDSchoolFeeInfo(@year_id) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.school_fee_information
		(
			sysid_schoolfee,
			year_id,
			created_by
		)
		VALUES
		(
			@sysid_schoolfee,
			@year_id,
			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new school fee information', 'School Fee Information'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertSchoolFeeInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectSchoolFeeInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectSchoolFeeInformation')
   DROP PROCEDURE ums.SelectSchoolFeeInformation
GO

CREATE PROCEDURE ums.SelectSchoolFeeInformation
	
	@system_user_id varchar(50) = ''
	
AS

	IF ums.IsActiveSystemUserInfo(@system_user_id) = 1
	BEGIN
		
		SELECT
			sfi.sysid_schoolfee AS sysid_schoolfee,
			sfi.year_id AS year_id,
			sy.year_description AS year_description,
			sy.date_start AS date_start,
			sy.date_end AS date_end,
			sy.is_summer AS is_summer			
		FROM
			ums.school_fee_information AS sfi
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		ORDER BY 
			sy.date_start DESC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee information', 'School Fee Information'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectSchoolFeeInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountSchoolFeeInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountSchoolFeeInformation')
   DROP PROCEDURE ums.GetCountSchoolFeeInformation
GO

CREATE PROCEDURE ums.GetCountSchoolFeeInformation

	@system_user_id varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT COUNT(sysid_schoolfee) FROM ums.school_fee_information
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee information', 'School Fee Information'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountSchoolFeeInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDSchoolFeeInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDSchoolFeeInformation')
   DROP PROCEDURE ums.IsExistsSysIDSchoolFeeInformation
GO

CREATE PROCEDURE ums.IsExistsSysIDSchoolFeeInformation

	@sysid_schoolfee varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsSysIDSchoolFeeInfo(@sysid_schoolfee)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee information', 'School Fee Information'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDSchoolFeeInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsYearIDSchoolFeeInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsYearIDSchoolFeeInformation')
   DROP PROCEDURE ums.IsExistsYearIDSchoolFeeInformation
GO

CREATE PROCEDURE ums.IsExistsYearIDSchoolFeeInformation

	@year_id varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsYearIDSchoolFeeInfo(@year_id)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee information', 'School Fee Information'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsYearIDSchoolFeeInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDSchoolFeeInfo" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDSchoolFeeInfo') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDSchoolFeeInfo
GO

CREATE FUNCTION ums.IsExistsSysIDSchoolFeeInfo
(	
	@sysid_schoolfee varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_schoolfee FROM ums.school_fee_information WHERE sysid_schoolfee = @sysid_schoolfee)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsYearIDSchoolFeeInfo" function already exist
IF OBJECT_ID (N'ums.IsExistsYearIDSchoolFeeInfo') IS NOT NULL
   DROP FUNCTION ums.IsExistsYearIDSchoolFeeInfo
GO

CREATE FUNCTION ums.IsExistsYearIDSchoolFeeInfo
(	
	@year_id varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_schoolfee FROM ums.school_fee_information WHERE year_id = @year_id)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result

END
GO
------------------------------------------------------

-- ################################################TABLE "school_fee_information" OBJECTS######################################################




-- ################################################TABLE "school_fee_level" OBJECTS######################################################
-- verifies if the school_fee_level table exists
IF OBJECT_ID('ums.school_fee_level', 'U') IS NOT NULL
	DROP TABLE ums.school_fee_level
GO

CREATE TABLE ums.school_fee_level 			
(
	sysid_feelevel varchar (50) NOT NULL 
		CONSTRAINT School_Fee_Level_SysID_FeeLevel_PK PRIMARY KEY (sysid_feelevel)
		CONSTRAINT School_Fee_Level_SysID_FeeLevel_CK CHECK (sysid_feelevel LIKE 'SYSFLV%'),
	sysid_schoolfee varchar (50) NOT NULL
		CONSTRAINT School_Fee_Level_SysID_SchoolFee_FK FOREIGN KEY REFERENCES ums.school_fee_information(sysid_schoolfee) ON UPDATE NO ACTION
		CONSTRAINT School_Fee_Level_SysID_SchoolFee_UQ UNIQUE (sysid_schoolfee, year_level_id),
	year_level_id varchar (50) NOT NULL
		CONSTRAINT School_Fee_Level_Year_Level_ID_FK FOREIGN KEY REFERENCES ums.year_level_information(year_level_id) ON UPDATE NO ACTION
		CONSTRAINT School_Fee_Level_Year_Level_ID_UQ UNIQUE (year_level_id, sysid_schoolfee),

	fee_level_no int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT School_Fee_Level_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT School_Fee_Level_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT School_Fee_Level_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the school_fee_level table 
CREATE INDEX School_Fee_Level_SysID_FeeLevel_Index
	ON ums.school_fee_level (sysid_feelevel DESC)
GO
------------------------------------------------------------------

/*verifies that the trigger "School_Fee_Level_Trigger_Insert" already exist*/
IF OBJECT_ID ('ums.School_Fee_Level_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Level_Trigger_Insert
GO

CREATE TRIGGER ums.School_Fee_Level_Trigger_Insert
	ON  ums.school_fee_level
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_feelevel varchar (50)
	DECLARE @sysid_schoolfee varchar (50)
	DECLARE @year_level_id varchar (50)
	DECLARE @created_by varchar (50)
	
	SELECT 
		@sysid_feelevel = i.sysid_feelevel,
		@sysid_schoolfee = i.sysid_schoolfee,
		@year_level_id = i.year_level_id,
		@created_by = i.created_by
	FROM INSERTED AS i

	SET @transaction_done = 'CREATED a new year level school fee ' + 
							'[Fee Level ID: ' + ISNULL(@sysid_feelevel, '') +
							'][School Year: ' + ISNULL((SELECT 
															sy.year_description 
														FROM 
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
														WHERE 
															sfi.sysid_schoolfee = @sysid_schoolfee), '') +
							'][Year Level: ' + ISNULL((SELECT
															yli.year_level_description + ' (' + cg.group_description + ')'
														FROM
															ums.course_group AS cg
														INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
														WHERE
															yli.year_level_id = @year_level_id), '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
/*-----------------------------------------------------------------*/

-- verifies that the trigger "School_Fee_Level_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.School_Fee_Level_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Level_Trigger_Instead_Update
GO

CREATE TRIGGER ums.School_Fee_Level_Trigger_Instead_Update
	ON  ums.school_fee_level
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Update a school fee level', 'School Fee Level'
	
GO
-------------------------------------------------------------------------

-- verifies that the trigger "School_Fee_Level_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.School_Fee_Level_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Level_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.School_Fee_Level_Trigger_Instead_Delete
	ON  ums.school_fee_level
	INSTEAD OF DELETE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Delete a school fee level', 'School Fee Level'
	
GO
-------------------------------------------------------------------------

-- verifies if the procedure "InsertSchoolFeeLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertSchoolFeeLevel')
   DROP PROCEDURE ums.InsertSchoolFeeLevel
GO

CREATE PROCEDURE ums.InsertSchoolFeeLevel

	@sysid_feelevel varchar (50) = '',
	@sysid_schoolfee varchar (50) = '',
	@year_level_id varchar (50) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND 
			(ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
															sfi.year_id
														FROM 
															ums.school_fee_information AS sfi
														WHERE 
															sfi.sysid_schoolfee = @sysid_schoolfee AND
															(NOT sfi.year_id IS NULL AND NOT sfi.year_id = ''))) = 0) AND
			(ums.IsExistsSchoolFeeYearLev(@sysid_schoolfee, @year_level_id) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.school_fee_level
		(
			sysid_feelevel,
			sysid_schoolfee,
			year_level_id,
			created_by
		)
		VALUES
		(
			@sysid_feelevel,
			@sysid_schoolfee,
			@year_level_id,
			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new year level school fee', 'School Fee Level'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertSchoolFeeLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDSchoolFeeSchoolFeeLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDSchoolFeeSchoolFeeLevel')
   DROP PROCEDURE ums.SelectBySysIDSchoolFeeSchoolFeeLevel
GO

CREATE PROCEDURE ums.SelectBySysIDSchoolFeeSchoolFeeLevel
	
	@sysid_schoolfee varchar (50),

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN
		
		SELECT
			sfl.sysid_feelevel AS sysid_feelevel,
			sfl.sysid_schoolfee AS sysid_schoolfee,
			sfl.year_level_id AS year_level_id,
			sfi.year_id AS year_id,
			sy.year_description AS year_description,			
			yli.course_group_id AS course_group_id,
			yli.year_level_description AS year_level_description,
			yli.acronym AS acronym,
			yli.id_prefix AS id_prefix,
			yli.year_level_no AS year_level_no,		
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			cg.is_per_unit AS is_per_unit
		FROM
			ums.school_fee_level AS sfl
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
		WHERE
			sfl.sysid_schoolfee = @sysid_schoolfee
		ORDER BY 
			cg.group_no, yli.year_level_no ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a year level school fee', 'School Fee Level'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDSchoolFeeSchoolFeeLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountSchoolFeeLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountSchoolFeeLevel')
   DROP PROCEDURE ums.GetCountSchoolFeeLevel
GO

CREATE PROCEDURE ums.GetCountSchoolFeeLevel

	@system_user_id varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT COUNT(sysid_feelevel) FROM ums.school_fee_level
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a year level school fee', 'School Fee Level'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountSchoolFeeLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDSchoolFeeLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDSchoolFeeLevel')
   DROP PROCEDURE ums.IsExistsSysIDSchoolFeeLevel
GO

CREATE PROCEDURE ums.IsExistsSysIDSchoolFeeLevel

	@sysid_feelevel varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsSysIDSchoolFeeLev(@sysid_feelevel)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a year level school fee', 'School Fee Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDSchoolFeeLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSchoolFeeYearLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSchoolFeeYearLevel')
   DROP PROCEDURE ums.IsExistsSchoolFeeYearLevel
GO

CREATE PROCEDURE ums.IsExistsSchoolFeeYearLevel

	@sysid_schoolfee varchar (50) = '',
	@year_level_id varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsSchoolFeeYearLev(@sysid_schoolfee, @year_level_id)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a year level school fee', 'School Fee Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSchoolFeeYearLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDSchoolFeeLev" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDSchoolFeeLev') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDSchoolFeeLev
GO

CREATE FUNCTION ums.IsExistsSysIDSchoolFeeLev
(	
	@sysid_feelevel varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feelevel FROM ums.school_fee_level WHERE sysid_feelevel = @sysid_feelevel)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsSchoolFeeYearLev" function already exist
IF OBJECT_ID (N'ums.IsExistsSchoolFeeYearLev') IS NOT NULL
   DROP FUNCTION ums.IsExistsSchoolFeeYearLev
GO

CREATE FUNCTION ums.IsExistsSchoolFeeYearLev
(	
	@sysid_schoolfee varchar (50) = '',
	@year_level_id varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feelevel FROM ums.school_fee_level WHERE sysid_schoolfee = @sysid_schoolfee AND year_level_id = @year_level_id)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- ################################################END TABLE "school_fee_level" OBJECTS######################################################





-- ################################################TABLE "student_enrolment_course" OBJECTS######################################################
-- verifies if the student_enrolment_course table exists
IF OBJECT_ID('ums.student_enrolment_course', 'U') IS NOT NULL
	DROP TABLE ums.student_enrolment_course
GO

CREATE TABLE ums.student_enrolment_course 			
(
	sysid_enrolmentcourse varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Course_SysID_EnrolmentCourse_PK PRIMARY KEY (sysid_enrolmentcourse)
		CONSTRAINT Student_Enrolment_Course_SysID_EnrolmentCourse_CK CHECK (sysid_enrolmentcourse LIKE 'SYSECR%'),
	sysid_student varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Course_SysID_Student_FK FOREIGN KEY REFERENCES ums.student_information(sysid_student) ON UPDATE NO ACTION
		CONSTRAINT Student_Enrolment_Course_SysID_Student_UQ UNIQUE (sysid_student, course_id),
	course_id varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Course_Course_ID_FK FOREIGN KEY REFERENCES ums.course_information(course_id) ON UPDATE NO ACTION
		CONSTRAINT Student_Enrolment_Course_Course_ID_UQ UNIQUE (course_id, sysid_student),
	sysid_schoolfee varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Course_SysID_SchoolFee_FK FOREIGN KEY REFERENCES ums.school_fee_information(sysid_schoolfee) ON UPDATE NO ACTION,
	sysid_semester varchar (50) NULL 
		CONSTRAINT Student_Enrolment_Course_SysID_Semester_FK FOREIGN KEY REFERENCES ums.semester_information(sysid_semester) ON UPDATE NO ACTION,

	is_current_course bit NOT NULL DEFAULT (0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Course_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Enrolment_Course_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Enrolment_Course_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_enrolment_course table 
CREATE INDEX Student_Enrolment_Course_SysID_EnrolmentCourse_Index
	ON ums.student_enrolment_course (sysid_enrolmentcourse DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentEnrolmentCourse')
   DROP PROCEDURE ums.InsertStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.InsertStudentEnrolmentCourse

	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_student varchar (50) = '',
	@course_id varchar (50) = '',
	@sysid_schoolfee varchar (50) = '',
	@sysid_semester varchar (50) = '',
	
	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsExistsStudentCourseStudentEnrolmentCo(@sysid_student, @course_id) = 0) AND
		(ums.IsSemesterBelongToSchoolYearSemesterID((SELECT
															sfi.year_id
														FROM
															ums.school_fee_information AS sfi
														WHERE
															(sfi.sysid_schoolfee = @sysid_schoolfee)), @sysid_semester) = 1) AND
		((ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
															year_id
														FROM
															ums.school_fee_information
														WHERE
															sysid_schoolfee = @sysid_schoolfee)) = 0) AND 
		(ums.IsRecordLockByYearSemesterIDNoAdvance(@sysid_semester) = 0))
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		DECLARE @is_semestral bit

		SET @is_semestral = 0

		SELECT 
			@is_semestral = cg.is_semestral 
		FROM
			ums.course_group AS cg
		INNER JOIN ums.course_information AS ci ON ci.course_group_id = cg.course_group_id
		WHERE
			ci.course_id = @course_id

		UPDATE ums.student_enrolment_course SET 
			is_current_course = 0, 
			edited_by = @created_by
		WHERE
			sysid_student = @sysid_student

		IF (@is_semestral = 1) AND (NOT @sysid_semester IS NULL AND NOT @sysid_semester = '')
		BEGIN

			INSERT INTO ums.student_enrolment_course
			(
				sysid_enrolmentcourse,
				sysid_student,
				course_id,		
				sysid_schoolfee,
				sysid_semester,
				is_current_course,			
				created_by
			)
			VALUES
			(
				@sysid_enrolmentcourse,
				@sysid_student,
				@course_id,
				@sysid_schoolfee,
				@sysid_semester,
				1,
				@created_by
			)	

		END
		ELSE IF (@is_semestral = 0) AND (@sysid_semester IS NULL OR @sysid_semester = '')
		BEGIN

			INSERT INTO ums.student_enrolment_course
			(
				sysid_enrolmentcourse,
				sysid_student,
				course_id,		
				sysid_schoolfee,
				sysid_semester,
				is_current_course,			
				created_by
			)
			VALUES
			(
				@sysid_enrolmentcourse,
				@sysid_student,
				@course_id,
				@sysid_schoolfee,
				NULL,
				1,
				@created_by
			)
	
		END			
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student enrolment course', 'Student Enrolment Course'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentEnrolmentCourse')
   DROP PROCEDURE ums.UpdateStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.UpdateStudentEnrolmentCourse

	@sysid_enrolmentcourse varchar (50) = '',
	@is_current_course bit = 0,
	
	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1))
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		IF (@is_current_course = 1)
		BEGIN

			UPDATE ums.student_enrolment_course SET 
				is_current_course = 0, 
				edited_by = @edited_by
			WHERE
				(sysid_student = (SELECT sysid_student FROM ums.student_enrolment_course WHERE sysid_enrolmentcourse = @sysid_enrolmentcourse)) AND
				(NOT sysid_enrolmentcourse = @sysid_enrolmentcourse)

		END

		UPDATE ums.student_enrolment_course SET
			is_current_course = @is_current_course, 

			edited_by = @edited_by
		WHERE
			(sysid_enrolmentcourse = @sysid_enrolmentcourse)

		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student enrolment course', 'Student Enrolment Course'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentStudentEnrolmentCourse')
   DROP PROCEDURE ums.SelectBySysIDStudentStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.SelectBySysIDStudentStudentEnrolmentCourse
	
	@sysid_student varchar (50) = '',

	@system_user_id varchar(50) = ''
	
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT
			sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sec.sysid_student AS sysid_student,
			sec.course_id AS course_id,
			sec.sysid_schoolfee AS sysid_schoolfee,
			sec.sysid_semester AS sysid_semester,
			sec.is_current_course AS is_current_course,
			ci.course_group_id AS course_group_id,
			ci.course_title AS course_title,
			ci.acronym AS course_acronym,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			sy.year_description AS year_description,
			NULL AS semester_description		
		FROM
			ums.student_enrolment_course AS sec
		INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sec.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		WHERE
			(sec.sysid_student = @sysid_student) AND
			(cg.is_semestral = 0) AND
			(sec.sysid_semester IS NULL OR sec.sysid_semester = '')
		UNION ALL
		SELECT
			sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sec.sysid_student AS sysid_student,
			sec.course_id AS course_id,
			sec.sysid_schoolfee AS sysid_schoolfee,
			sec.sysid_semester AS sysid_semester,
			sec.is_current_course AS is_current_course,
			ci.course_group_id AS course_group_id,
			ci.course_title AS course_title,
			ci.acronym AS course_acronym,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			sy.year_description AS year_description,
			ss.semester_description AS semester_description		
		FROM
			ums.student_enrolment_course AS sec
		INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sec.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		INNER JOIN ums.semester_information AS si ON si.sysid_semester = sec.sysid_semester
		INNER JOIN ums.school_semester AS ss ON ss.semester_id = si.semester_id
		WHERE
			(sec.sysid_student = @sysid_student) AND
			(cg.is_semestral = 1) AND
			(NOT sec.sysid_semester IS NULL AND NOT sec.sysid_semester = '')
		ORDER BY
			is_current_course DESC, course_title ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment course', 'Student Enrolment Course'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountStudentEnrolmentCourse')
   DROP PROCEDURE ums.GetCountStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.GetCountStudentEnrolmentCourse

	@system_user_id varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT COUNT(sysid_enrolmentcourse) FROM ums.student_enrolment_course
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment course', 'Student Enrolment Course'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDStudentEnrolmentCourse')
   DROP PROCEDURE ums.IsExistsSysIDStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.IsExistsSysIDStudentEnrolmentCourse

	@sysid_enrolmentcourse varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsSysIDStudentEnrolmentCo(@sysid_enrolmentcourse)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment course', 'Student Enrolment Course'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsStudentCourseStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsStudentCourseStudentEnrolmentCourse')
   DROP PROCEDURE ums.IsExistsStudentCourseStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.IsExistsStudentCourseStudentEnrolmentCourse

	@sysid_student varchar (50) = '',
	@course_id varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsStudentCourseStudentEnrolmentCo(@sysid_student, @course_id)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment course', 'Student Enrolment Course'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsStudentCourseStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCourse')
   DROP PROCEDURE ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCourse

	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_schoolfee varchar (50) = '',
	@sysid_semester varchar (50) = '',

	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCo(@sysid_enrolmentcourse, @sysid_schoolfee, @sysid_semester)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment course', 'Student Enrolment Course'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDStudentEnrolmentCo" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDStudentEnrolmentCo') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDStudentEnrolmentCo
GO

CREATE FUNCTION ums.IsExistsSysIDStudentEnrolmentCo
(	
	@sysid_enrolmentcourse varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_course WHERE sysid_enrolmentcourse = @sysid_enrolmentcourse)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsStudentCourseStudentEnrolmentCo" function already exist
IF OBJECT_ID (N'ums.IsExistsStudentCourseStudentEnrolmentCo') IS NOT NULL
   DROP FUNCTION ums.IsExistsStudentCourseStudentEnrolmentCo
GO

CREATE FUNCTION ums.IsExistsStudentCourseStudentEnrolmentCo
(	
	@sysid_student varchar (50) = '',
	@course_id varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_course WHERE sysid_student = @sysid_student AND course_id = @course_id)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------------

-- verifies if the "IsCurrentCourseStudentEnrolmentCo" function already exist
IF OBJECT_ID (N'ums.IsCurrentCourseStudentEnrolmentCo') IS NOT NULL
   DROP FUNCTION ums.IsCurrentCourseStudentEnrolmentCo
GO

CREATE FUNCTION ums.IsCurrentCourseStudentEnrolmentCo
(	
	@sysid_enrolmentcourse varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_course WHERE sysid_enrolmentcourse = @sysid_enrolmentcourse AND 
																is_current_course = 1)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------------

-- verifies if the "IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCo" function already exist
IF OBJECT_ID (N'ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCo') IS NOT NULL
   DROP FUNCTION ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCo
GO

CREATE FUNCTION ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCo
(	
	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_schoolfee varchar (50) = '',
	@sysid_semester varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	--determines if the enrolment course school year / semester is lesser than the parameters supplied.  Parameters are from a student enrolment level candidate
	IF EXISTS (SELECT 
					sec.sysid_enrolmentcourse 
				FROM 
					ums.student_enrolment_course AS sec
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sec.sysid_schoolfee
				INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
				INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
				WHERE 
					(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND 
					(cg.is_semestral = 0) AND
					(sy.date_start <= (SELECT 
											t_sy.date_start
										FROM
											ums.school_year AS t_sy
										INNER JOIN ums.school_fee_information AS t_sfi ON t_sfi.year_id = t_sy.year_id
										WHERE
											(t_sfi.sysid_schoolfee = @sysid_schoolfee)))
				UNION ALL
				SELECT 
					sec.sysid_enrolmentcourse 
				FROM 
					ums.student_enrolment_course AS sec
				INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sec.sysid_semester
				INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
				WHERE 
					(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND 
					(cg.is_semestral = 1) AND
					(NOT sec.sysid_semester IS NULL AND NOT sec.sysid_semester = '') AND
					(sri.date_start <= (SELECT
											t_sri.date_start
										FROM
											ums.semester_information AS t_sri
										WHERE
											(t_sri.sysid_semester = @sysid_semester))))
																
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------------

-- ################################################END TABLE "student_enrolment_course" OBJECTS######################################################





-- ################################################TABLE "student_enrolment_level" OBJECTS######################################################
-- verifies if the student_enrolment_level table exists
IF OBJECT_ID('ums.student_enrolment_level', 'U') IS NOT NULL
	DROP TABLE ums.student_enrolment_level
GO

CREATE TABLE ums.student_enrolment_level 			
(
	sysid_enrolmentlevel varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Level_SysID_EnrolmentLevel_PK PRIMARY KEY (sysid_enrolmentlevel)
		CONSTRAINT Student_Enrolment_Level_SysID_EnrolmentLevel_CK CHECK (sysid_enrolmentlevel LIKE 'SYSELV%'),
	sysid_enrolmentcourse varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Level_SysID_EnrolmentCourse_FK FOREIGN KEY REFERENCES ums.student_enrolment_course(sysid_enrolmentcourse) ON UPDATE NO ACTION,
	sysid_feelevel varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Level_SysID_FeeLevel_FK FOREIGN KEY REFERENCES ums.school_fee_level(sysid_feelevel) ON UPDATE NO ACTION,
	sysid_semester varchar (50) NULL 
		CONSTRAINT Student_Enrolment_Level_SysID_Semester_FK FOREIGN KEY REFERENCES ums.semester_information(sysid_semester) ON UPDATE NO ACTION,

	sysid_financestd varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Level_SysID_FinanceStd_FK FOREIGN KEY REFERENCES ums.finance_standard(sysid_financestd) ON UPDATE NO ACTION,

	level_section varchar (100) NULL,

	is_entry_level bit NOT NULL DEFAULT (0),

	is_marked_deleted bit NOT NULL DEFAULT (0),

	is_graduate_student bit NOT NULL DEFAULT (0),
	is_international bit NOT NULL DEFAULT (0),

	enrolment_level_no int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Enrolment_Level_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Enrolment_Level_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Enrolment_Level_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_enrolment_level table 
CREATE INDEX Student_Enrolment_Level_SysID_EnrolmentLevel_Index
	ON ums.student_enrolment_level (sysid_enrolmentlevel DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentEnrolmentLevel')
   DROP PROCEDURE ums.InsertStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.InsertStudentEnrolmentLevel

	@sysid_enrolmentlevel varchar (50) = '',
	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_feelevel varchar (50) = '',
	@sysid_semester varchar (50) = '',
	@level_section varchar (100) = '',
	@is_entry_level bit = 0,
	@is_graduate_student bit = 0,
	
	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	DECLARE @is_exists_payment bit
	DECLARE @sysid_student varchar (50)
	DECLARE	@date_start datetime
	DECLARE	@date_end datetime

	SELECT 
		@sysid_student = sysid_student
	FROM 
		ums.student_enrolment_course
	WHERE
		sysid_enrolmentcourse = @sysid_enrolmentcourse
		
	SET @date_start = (SELECT TOP 1
							sy.date_start
						FROM
							ums.school_year AS sy
						INNER JOIN ums.school_fee_information AS sfi ON sfi.year_id = sy.year_id
						INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
						INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
						INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
						WHERE
							(sfl.sysid_feelevel = @sysid_feelevel) AND
							(cg.is_semestral = 0)
						UNION ALL
						SELECT TOP 1
							sri.date_start
						FROM
							ums.semester_information AS sri
						WHERE
							(sri.sysid_semester = @sysid_semester) AND
							((SELECT
									cg.is_semestral
								FROM
									ums.course_group AS cg
								INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
								INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
								WHERE
									(sfl.sysid_feelevel = @sysid_feelevel)) = 1))

	SET @date_end = (SELECT TOP 1
							sy.date_end
						FROM
							ums.school_year AS sy
						INNER JOIN ums.school_fee_information AS sfi ON sfi.year_id = sy.year_id
						INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
						INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
						INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
						WHERE
							(sfl.sysid_feelevel = @sysid_feelevel) AND
							(cg.is_semestral = 0)
						UNION ALL
						SELECT TOP 1
							sri.date_end
						FROM
							ums.semester_information AS sri
						WHERE
							(sri.sysid_semester = @sysid_semester) AND
							((SELECT
									cg.is_semestral
								FROM
									ums.course_group AS cg
								INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
								INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
								WHERE
									(sfl.sysid_feelevel = @sysid_feelevel)) = 1))
	
	EXECUTE @is_exists_payment = ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPayments @sysid_student, @date_start, @date_end, @created_by


	--NOTE: Office users have different record locking because other users need to create student enrolment record
	--in advance for students who will pay in a long advance for the upcoming school year or semester.  But the office
	--user still maintains their record lock in which they only can enrol 1 month advance on a school year or semester

	IF ((((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		((ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
															sfi.year_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														WHERE
															sfl.sysid_feelevel = @sysid_feelevel)) = 0) AND 
		(ums.IsRecordLockByYearSemesterIDNoAdvance(@sysid_semester) = 0))) OR

		((ums.IsOfficeUserSystemUserInfo(@created_by) = 1) AND 
		((ums.IsRecordLockByYearSemesterID((SELECT 
												sfi.year_id
											FROM
												ums.school_fee_information AS sfi
											INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
											WHERE
												sfl.sysid_feelevel = @sysid_feelevel)) = 0) AND 
		(ums.IsRecordLockByYearSemesterID(@sysid_semester) = 0)) AND
		(ums.IsUserSameDepartmentCourseInfo((SELECT
													sec.course_id						
												FROM
													ums.student_enrolment_course AS sec
												WHERE
													sysid_enrolmentcourse = @sysid_enrolmentcourse), @created_by) = 1) AND
		(ums.IsLevelCourseGroupWithEntryLevelEnrolmentLev((SELECT
																sec.sysid_student
															FROM
																ums.student_enrolment_course AS sec
															WHERE
																sec.sysid_enrolmentcourse = @sysid_enrolmentcourse), @sysid_feelevel) = 1) AND
		(@is_exists_payment = 1))) AND
		(ums.IsCourseYearLevelNoLesserStudentEnrolmentLev((SELECT 
																sysid_student
															FROM 
																ums.student_enrolment_course
															WHERE
																sysid_enrolmentcourse = @sysid_enrolmentcourse), 
															(SELECT 
																course_id
															FROM 
																ums.student_enrolment_course
															WHERE
																sysid_enrolmentcourse = @sysid_enrolmentcourse), 
															(SELECT
																year_level_id
															FROM
																ums.school_fee_level
															WHERE
																sysid_feelevel = @sysid_feelevel), NULL) = 0) AND
		(ums.IsCurrentCourseStudentEnrolmentCo(@sysid_enrolmentcourse) = 1) AND
		(ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLev((SELECT 
																		sysid_student
																	FROM 
																		ums.student_enrolment_course
																	WHERE
																		sysid_enrolmentcourse = @sysid_enrolmentcourse), 
																@sysid_enrolmentcourse, 
																@sysid_feelevel, 
																@sysid_semester) = 0) AND
		(ums.IsSemesterBelongToSchoolYearSemesterID((SELECT
															sfi.year_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														WHERE
															sfl.sysid_feelevel = @sysid_feelevel), @sysid_semester) = 1) AND
		(ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCo(@sysid_enrolmentcourse, 
																				(SELECT
																						sfi.sysid_schoolfee
																					FROM
																						ums.school_fee_information AS sfi
																					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
																					WHERE
																						(sfl.sysid_feelevel = @sysid_feelevel)),
																					@sysid_semester) = 1)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		DECLARE @sysid_financestd varchar (50)
		DECLARE @is_semestral bit
		DECLARE @is_international bit

		SELECT
			@sysid_financestd = sysid_financestd
		FROM
			ums.finance_standard
		WHERE
			effectivity_date = (SELECT MAX(effectivity_date) FROM ums.finance_standard)

		SET @is_semestral = 0

		SELECT 
			@is_semestral = cg.is_semestral 
		FROM
			ums.course_group AS cg
		INNER JOIN ums.course_information AS ci ON ci.course_group_id = cg.course_group_id
		INNER JOIN ums.student_enrolment_course AS sec ON sec.course_id = ci.course_id
		WHERE
			sec.sysid_enrolmentcourse = @sysid_enrolmentcourse

		SET @is_international = 0

		SELECT 
			@is_international = si.is_international
		FROM
			ums.student_information AS si
		INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_student = si.sysid_student
		WHERE
			sec.sysid_enrolmentcourse = @sysid_enrolmentcourse

		IF (@is_graduate_student = 1) AND ((SELECT
												cyl.is_graduate_level
											FROM
												ums.course_year_level AS cyl
											INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
											INNER JOIN ums.course_information AS ci ON ci.course_id = cyl.course_id											
											INNER JOIN ums.student_enrolment_course AS sec ON sec.course_id = ci.course_id
											WHERE
												(sfl.sysid_feelevel = @sysid_feelevel) AND
												(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse)) = 0)
		BEGIN
			SET @is_graduate_student = 0
		END

		IF (@is_semestral = 1) AND (NOT @sysid_semester IS NULL AND NOT @sysid_semester = '')
		BEGIN

			INSERT INTO ums.student_enrolment_level
			(
				sysid_enrolmentlevel,
				sysid_enrolmentcourse,
				sysid_feelevel,
				sysid_semester,
				sysid_financestd,
				level_section,
				is_entry_level,	
				is_graduate_student,
				is_international,	
				created_by
			)
			VALUES
			(
				@sysid_enrolmentlevel,
				@sysid_enrolmentcourse,
				@sysid_feelevel,
				@sysid_semester,
				@sysid_financestd,
				@level_section,
				@is_entry_level,
				@is_graduate_student,
				@is_international,	
				@created_by
			)	

		END
		ELSE IF (@is_semestral = 0) AND (@sysid_semester IS NULL OR @sysid_semester = '')
		BEGIN

			INSERT INTO ums.student_enrolment_level
			(
				sysid_enrolmentlevel,
				sysid_enrolmentcourse,
				sysid_feelevel,
				sysid_semester,
				sysid_financestd,
				level_section,
				is_entry_level,	
				is_graduate_student,
				is_international,
				created_by
			)
			VALUES
			(
				@sysid_enrolmentlevel,
				@sysid_enrolmentcourse,
				@sysid_feelevel,
				NULL,
				@sysid_financestd,
				@level_section,
				@is_entry_level,
				@is_graduate_student,
				@is_international,	
				@created_by
			)	
	
		END			
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student enrolment level', 'Student Enrolment Level'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentEnrolmentLevel')
   DROP PROCEDURE ums.UpdateStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.UpdateStudentEnrolmentLevel

	@sysid_enrolmentlevel varchar (50) = '',
	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_feelevel varchar (50) = '',
	@level_section varchar (100) = '',
	@is_entry_level bit = 0,
	@is_graduate_student bit = 0,
	@is_international bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) AND
		--determine if the update is for shift to another course wherein the enrolment course of a certain level is not the same as the parameter supplied
		(((NOT EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND	
																						sysid_enrolmentcourse = @sysid_enrolmentcourse)) AND
		(ums.IsValidForShiftToCurrentCourseStudentEnrolmentLev(@sysid_enrolmentlevel, @sysid_enrolmentcourse, @edited_by) = 1)) OR
		(EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND
																						sysid_enrolmentcourse = @sysid_enrolmentcourse))) AND
		--determine if the update of year level is valid
		(((NOT EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND
																						sysid_feelevel = @sysid_feelevel)) AND
		(ums.IsCourseYearLevelNoLesserStudentEnrolmentLev((SELECT 
																sysid_student
															FROM 
																ums.student_enrolment_course
															WHERE
																sysid_enrolmentcourse = @sysid_enrolmentcourse), 
															(SELECT 
																course_id
															FROM 
																ums.student_enrolment_course
															WHERE
																sysid_enrolmentcourse = @sysid_enrolmentcourse), 
															(SELECT
																year_level_id
															FROM
																ums.school_fee_level
															WHERE
																sysid_feelevel = @sysid_feelevel),
															@sysid_enrolmentlevel) = 0) AND
		(ums.IsValidForYearLevelChangeEnrolmentLev((SELECT 
														sysid_student
													FROM 
														ums.student_enrolment_course
													WHERE
														sysid_enrolmentcourse = @sysid_enrolmentcourse), @sysid_enrolmentlevel) = 1)) OR
		(EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND
																						sysid_feelevel = @sysid_feelevel)))
		

	BEGIN
		
		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		IF (@is_graduate_student = 1) AND ((SELECT
												cyl.is_graduate_level
											FROM
												ums.course_year_level AS cyl
											INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
											INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
											INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
											INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id AND ci.course_id = cyl.course_id
											WHERE
												(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
												(sec.sysid_enrolmentcourse = (SELECT 
																					sysid_enrolmentcourse
																				FROM
																					ums.student_enrolment_level
																				WHERE
																					sysid_enrolmentlevel = @sysid_enrolmentlevel))) = 0)
		BEGIN
			SET @is_graduate_student = 0
		END

		UPDATE ums.student_enrolment_level SET
			sysid_enrolmentcourse = @sysid_enrolmentcourse,
			sysid_feelevel = @sysid_feelevel,
			level_section = @level_section,
			is_entry_level = @is_entry_level,
			is_graduate_student = @is_graduate_student,
			is_international = @is_international,

			edited_by = @edited_by
		WHERE
			(sysid_enrolmentlevel = @sysid_enrolmentlevel)

	END
	ELSE IF (ums.IsOfficeUserSystemUserInfo(@edited_by) = 1) AND 			
			((ums.IsRecordLockByYearSemesterID((SELECT 
													sfi.year_id
												FROM
													ums.school_fee_information AS sfi
												INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
												INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
												WHERE
													sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0) AND 
			(ums.IsRecordLockByYearSemesterID((SELECT 
													sel.sysid_semester
												FROM
													ums.student_enrolment_level AS sel
												WHERE
													sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0)) AND
			--determine if the update is for shift to another course wherein the enrolment course of a certain level is not the same as the parameter supplied
			(((NOT EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND	
																							sysid_enrolmentcourse = @sysid_enrolmentcourse)) AND
			(ums.IsValidForShiftToCurrentCourseStudentEnrolmentLev(@sysid_enrolmentlevel, @sysid_enrolmentcourse, @edited_by) = 1)) OR
			((EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND
																							sysid_enrolmentcourse = @sysid_enrolmentcourse)) AND
			(ums.IsUserSameDepartmentCourseInfo((SELECT
														sec.course_id						
													FROM
														ums.student_enrolment_course AS sec
													INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
													WHERE
														sel.sysid_enrolmentlevel = @sysid_enrolmentlevel), @edited_by) = 1)))
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		IF (@is_graduate_student = 1) AND ((SELECT
												cyl.is_graduate_level
											FROM
												ums.course_year_level AS cyl
											INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
											INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
											INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
											INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id AND ci.course_id = cyl.course_id
											WHERE
												(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
												(sec.sysid_enrolmentcourse = (SELECT 
																					sysid_enrolmentcourse
																				FROM
																					ums.student_enrolment_level
																				WHERE
																					sysid_enrolmentlevel = @sysid_enrolmentlevel))) = 0)
		BEGIN
			SET @is_graduate_student = 0
		END

		UPDATE ums.student_enrolment_level SET
			sysid_enrolmentcourse = @sysid_enrolmentcourse,
			level_section = @level_section,
			is_graduate_student = @is_graduate_student,
			edited_by = @edited_by
		WHERE
			(sysid_enrolmentlevel = @sysid_enrolmentlevel)
		
	END
	ELSE IF ((ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
			(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
			((ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
																sfi.year_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															WHERE
																sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0) AND 
			(ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
																sel.sysid_semester
															FROM
																ums.student_enrolment_level AS sel
															WHERE
																sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0))
	BEGIN	
		
		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_enrolment_level SET
			is_entry_level = @is_entry_level,
			is_international = @is_international,
			edited_by = @edited_by
		WHERE
			(sysid_enrolmentlevel = @sysid_enrolmentlevel)

	END
	ELSE IF (ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) AND
		--determine if the update is for the "is_graduate_student" field only
		(NOT EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND
																is_graduate_student = @is_graduate_student))	
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		IF (@is_graduate_student = 1) AND ((SELECT
												cyl.is_graduate_level
											FROM
												ums.course_year_level AS cyl
											INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
											INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
											INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
											INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id AND ci.course_id = cyl.course_id
											WHERE
												(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
												(sec.sysid_enrolmentcourse = (SELECT 
																					sysid_enrolmentcourse
																				FROM
																					ums.student_enrolment_level
																				WHERE
																					sysid_enrolmentlevel = @sysid_enrolmentlevel))) = 0)
		BEGIN
			SET @is_graduate_student = 0
		END

		UPDATE ums.student_enrolment_level SET
			is_graduate_student = @is_graduate_student,
			edited_by = @edited_by
		WHERE
			(sysid_enrolmentlevel = @sysid_enrolmentlevel)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student enrolment level', 'Student Enrolment level'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentEnrolmentLevel')
   DROP PROCEDURE ums.DeleteStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.DeleteStudentEnrolmentLevel

	@sysid_enrolmentlevel varchar (50) = '',

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) AND
		(ums.IsExistsSpecialClassLoadEnrolmentLev(@sysid_enrolmentlevel) = 0)
	BEGIN
		
		IF EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_enrolment_level SET
				edited_by = @deleted_by
			WHERE
				sysid_enrolmentlevel = @sysid_enrolmentlevel

			DELETE FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel

		END

	END
	ELSE IF ((ums.IsOfficeUserSystemUserInfo(@deleted_by) = 1) AND 
			(ums.IsUserSameDepartmentCourseInfo((SELECT
														sec.course_id						
													FROM
														ums.student_enrolment_course AS sec
													INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
													WHERE
														sel.sysid_enrolmentlevel = @sysid_enrolmentlevel), @deleted_by) = 1)) AND
			(EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND NOT is_entry_level = 1)) AND
			((ums.IsRecordLockByYearSemesterID((SELECT 
													sfi.year_id
												FROM
													ums.school_fee_information AS sfi
												INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
												INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
												WHERE
													sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0) AND 
			(ums.IsRecordLockByYearSemesterID((SELECT 
													sel.sysid_semester
												FROM
													ums.student_enrolment_level AS sel
												WHERE
													sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0)) AND
			(ums.IsExistsSpecialClassLoadEnrolmentLev(@sysid_enrolmentlevel) = 0)
	BEGIN

		IF EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_enrolment_level SET
				edited_by = @deleted_by
			WHERE
				sysid_enrolmentlevel = @sysid_enrolmentlevel

			DELETE FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel

		END
		
	END
	ELSE IF ((ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
			(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
			(EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND is_entry_level = 1)) AND
			((ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
																sfi.year_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															WHERE
																sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0) AND 
			(ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
																sel.sysid_semester
															FROM
																ums.student_enrolment_level AS sel
															WHERE
																sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0))  AND
			(ums.IsExistsSpecialClassLoadEnrolmentLev(@sysid_enrolmentlevel) = 0)
	BEGIN	

		IF EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)
		BEGIN
		
			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_enrolment_level SET
				edited_by = @deleted_by
			WHERE
				sysid_enrolmentlevel = @sysid_enrolmentlevel

			DELETE FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel

		END

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student enrolment level', 'Student Enrolment level'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentDateStartEndStudentEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentDateStartEndStudentEnrolmentCourse')
   DROP PROCEDURE ums.SelectBySysIDStudentDateStartEndStudentEnrolmentCourse
GO

CREATE PROCEDURE ums.SelectBySysIDStudentDateStartEndStudentEnrolmentCourse
	
	@sysid_student varchar (50) = '',
	@date_start datetime,
	@date_end datetime,

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsStudentDataControllerSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN

		WITH cte_student_enrolment_level (sysid_enrolmentcourse) AS
		(
			SELECT  
				DISTINCT sel.sysid_enrolmentcourse AS sysid_enrolmentcourse
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
			INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
			WHERE
				(sec.sysid_student = @sysid_student) AND		--no marked deleted so that courses with only having withdrawn levels can still be queried.
				(sec.is_current_course = 0) AND
				(cg.is_semestral = 0) AND
				((sy.date_start BETWEEN @date_start AND @date_end) AND (sy.date_end BETWEEN @date_start AND @date_end))	
			UNION ALL
			SELECT
				DISTINCT sel.sysid_enrolmentcourse AS sysid_enrolmentcourse
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse	
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id				
			INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
			WHERE
				(sec.sysid_student = @sysid_student) AND		--no marked deleted so that courses with only having withdrawn levels can still be queried.
				(sec.is_current_course = 0) AND
				(cg.is_semestral = 1) AND
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
				((@date_start BETWEEN sri.date_start AND sri.date_end) AND (@date_end BETWEEN sri.date_start AND sri.date_end))			
		)

						-------------------------------------CURRENT COURSE---------------------------------------------------------
		SELECT				
			sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sec.sysid_student AS sysid_student,
			sec.course_id AS course_id,
			sec.sysid_schoolfee AS sysid_schoolfee,
			sec.sysid_semester AS sysid_semester,
			sec.is_current_course AS is_current_course,
			ci.course_group_id AS course_group_id,
			ci.course_title AS course_title,
			ci.acronym AS course_acronym,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			(SELECT
					s_sel.sysid_semester
				FROM
					ums.student_enrolment_level AS s_sel
				WHERE
					(s_sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse) AND
					(s_sel.enrolment_level_no = (SELECT 
													MAX(t_sel.enrolment_level_no)
												FROM
													ums.student_enrolment_level AS t_sel
												WHERE
													t_sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse))) AS last_semester_enrolled		
		FROM
			ums.student_enrolment_course AS sec
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sec.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
		WHERE
			(sec.sysid_student = @sysid_student) AND		
			(sec.is_current_course = 1) AND
			(cg.is_semestral = 0) AND
			(@date_end > sy.date_start) AND
			(EXISTS (SELECT year_id FROM ums.school_year WHERE (date_start BETWEEN @date_start AND @date_end) AND 
					(date_end BETWEEN @date_start AND @date_end)))
		UNION ALL
		SELECT				
			sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sec.sysid_student AS sysid_student,
			sec.course_id AS course_id,
			sec.sysid_schoolfee AS sysid_schoolfee,
			sec.sysid_semester AS sysid_semester,
			sec.is_current_course AS is_current_course,
			ci.course_group_id AS course_group_id,
			ci.course_title AS course_title,
			ci.acronym AS course_acronym,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			(SELECT
					s_sel.sysid_semester
				FROM
					ums.student_enrolment_level AS s_sel
				WHERE
					(s_sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse) AND
					(s_sel.enrolment_level_no = (SELECT 
													MAX(t_sel.enrolment_level_no)
												FROM
													ums.student_enrolment_level AS t_sel
												WHERE
													t_sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse))) AS last_semester_enrolled		
		FROM
			ums.student_enrolment_course AS sec	
		INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sec.sysid_semester
		INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
		WHERE
			(sec.sysid_student = @sysid_student) AND		
			(sec.is_current_course = 1) AND
			(cg.is_semestral = 1) AND
			(NOT sec.sysid_semester IS NULL AND NOT sec.sysid_semester = '') AND
			(@date_end > sri.date_start) AND
			(EXISTS (SELECT sysid_semester FROM ums.semester_information WHERE (@date_start BETWEEN date_start AND date_end) AND 
								(@date_end BETWEEN date_start AND date_end)))
		UNION ALL				-----------------------------------------NOT CURRENT COURSE--------------------------------------------------------
		SELECT
			sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sec.sysid_student AS sysid_student,
			sec.course_id AS course_id,
			sec.sysid_schoolfee AS sysid_schoolfee,
			sec.sysid_semester AS sysid_semester,
			sec.is_current_course AS is_current_course,
			ci.course_group_id AS course_group_id,
			ci.course_title AS course_title,
			ci.acronym AS course_acronym,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			(SELECT
					s_sel.sysid_semester
				FROM
					ums.student_enrolment_level AS s_sel
				WHERE
					(s_sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse) AND
					(s_sel.enrolment_level_no = (SELECT 
													MAX(t_sel.enrolment_level_no)
												FROM
													ums.student_enrolment_level AS t_sel
												WHERE
													t_sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse))) AS last_semester_enrolled			
		FROM
			ums.student_enrolment_course AS sec
		INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
		INNER JOIN cte_student_enrolment_level AS csel ON csel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
		ORDER BY
			is_current_course DESC, course_title ASC

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment course', 'Student Enrolment Course'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentDateStartEndStudentEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentForEnrolmentHistoryEnrolmentCourse" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentForEnrolmentHistoryEnrolmentCourse')
   DROP PROCEDURE ums.SelectBySysIDStudentForEnrolmentHistoryEnrolmentCourse
GO

CREATE PROCEDURE ums.SelectBySysIDStudentForEnrolmentHistoryEnrolmentCourse
	
	@sysid_student varchar (50) = '',

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsStudentDataControllerSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN
		
		SELECT				
			sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sec.sysid_student AS sysid_student,
			sec.course_id AS course_id,
			sec.sysid_schoolfee AS sysid_schoolfee,
			sec.sysid_semester AS sysid_semester,
			sec.is_current_course AS is_current_course,
			ci.course_group_id AS course_group_id,
			ci.course_title AS course_title,
			ci.acronym AS course_acronym,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			di.department_name AS department_name,
			di.acronym AS department_acronym,
			sy.year_description AS year_description,
			ss.semester_description AS semester_description
		FROM
			ums.student_enrolment_course AS sec
		INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
		INNER JOIN ums.department_information AS di ON di.department_id = ci.department_id
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sec.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		LEFT JOIN ums.semester_information AS sri ON sri.sysid_semester = sec.sysid_semester
		LEFT JOIN ums.school_semester AS ss ON ss.semester_id = sri.semester_id
		WHERE
			(sec.sysid_student = @sysid_student)
		ORDER BY
			cg.group_no, sy.date_start, sri.date_start, ci.course_title ASC

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment course', 'Student Enrolment Course'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentForEnrolmentHistoryEnrolmentCourse TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentForEnrolmentHistoryEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentForEnrolmentHistoryEnrolmentLevel')
   DROP PROCEDURE ums.SelectBySysIDStudentForEnrolmentHistoryEnrolmentLevel
GO

CREATE PROCEDURE ums.SelectBySysIDStudentForEnrolmentHistoryEnrolmentLevel
	
	@sysid_student varchar (50) = '',

	@system_user_id varchar(50) = ''
	 
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsStudentDataControllerSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT
			sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
			sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sel.sysid_feelevel AS sysid_feelevel,
			sel.sysid_semester AS sysid_semester,
			sel.level_section AS level_section,
			sel.is_entry_level AS is_entry_level,
			sel.is_marked_deleted AS is_marked_deleted,
			sel.is_graduate_student AS is_graduate_student,
			sel.is_international AS is_international,
			sel.enrolment_level_no AS enrolment_level_no,				
			sec.course_id AS course_id,
			sfl.sysid_schoolfee AS sysid_schoolfee,
			sfl.year_level_id AS year_level_id,				
			yli.year_level_description AS year_level_description,
			yli.year_level_no AS year_level_no,
			cg.course_group_id AS course_group_id,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			sy.year_description AS year_description,
			ss.semester_description AS semester_description
		FROM
			ums.student_enrolment_level AS sel
		INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
		INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
		INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
		INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		LEFT JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
		LEFT JOIN ums.school_semester AS ss ON ss.semester_id = sri.semester_id		
		WHERE
			(sec.sysid_student = @sysid_student)
		ORDER BY
			cg.group_no, sy.date_start, sri.date_start, ci.course_title, yli.year_level_no ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentForEnrolmentHistoryEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentYearIDSemesterStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentYearIDSemesterStudentEnrolmentLevel')
   DROP PROCEDURE ums.SelectBySysIDStudentYearIDSemesterStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.SelectBySysIDStudentYearIDSemesterStudentEnrolmentLevel
	
	@sysid_student varchar (50) = '',
	@year_id varchar (50) = '',
	@sysid_semester varchar (50) = '',
	@sysid_enrolmentcourse varchar (50) = '',
	@include_not_enrolled bit = 0,
	@include_marked_deleted bit = 0,
	@sysid_enrolmentlevel_exclude_list nvarchar (MAX),

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsStudentDataControllerSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN

		-- A - sysid_semester
		-- B - is_current_course
		-- C - include_not_enrolled
		-- D - include_marked_deleted

		--	A	B	C	D
		--	==============
		--	0	0	0	0
		--	0	0	0	1
		--	0	0	1	0	not included because include_not_entrolled should be 0 if the is_current_course is 0
		--	0	0	1	1	not included because include_not_entrolled should be 0 if the is_current_course is 0	
		--	0	1	0	0
		--	0	1	0	1
		--	0	1	1	0
		--	0	1	1	1
		--	1	0	0	0
		--	1	0	0	1
		--	1	0	1	0	not included because include_not_entrolled should be 0 if the is_current_course is 0
		--	1	0	1	1	not included because include_not_entrolled should be 0 if the is_current_course is 0
		--	1	1	0	0
		--	1	1	0	1
		--	1	1	1	0
		--	1	1	1	1

		DECLARE @is_current_course bit	
		DECLARE @date_start datetime				

		SET @is_current_course = 0

		SELECT @is_current_course = is_current_course FROM ums.student_enrolment_course WHERE sysid_enrolmentcourse = @sysid_enrolmentcourse

		IF (NOT ISNULL(@year_id, '') = '') AND (ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 0) AND 
			((@include_not_enrolled = 0) OR (@include_not_enrolled = 1)) AND (@include_marked_deleted = 0)					-- (0000)				
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,			
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,				
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(sel.is_marked_deleted = 0) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 0) AND
											(sfi.year_id = @year_id) AND
											(cg.is_semestral = 0)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(sel.is_marked_deleted = 0) AND
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 0) AND
				(sfi.year_id = @year_id) AND
				(cg.is_semestral = 0) AND
				(sel_list.var_str IS NULL)	
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 0) AND 
			((@include_not_enrolled = 0) OR (@include_not_enrolled = 1)) AND (@include_marked_deleted = 1)					-- (0001)				
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,				
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,				
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 0) AND
											(sfi.year_id = @year_id) AND
											(cg.is_semestral = 0)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 0) AND
				(sfi.year_id = @year_id) AND
				(cg.is_semestral = 0) AND
				(sel_list.var_str IS NULL)	
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 0) AND (@include_marked_deleted = 0)													-- (0100)	
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(sel.is_marked_deleted = 0) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(sfi.year_id = @year_id) AND
											(cg.is_semestral = 0)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(sel.is_marked_deleted = 0) AND
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(sfi.year_id = @year_id) AND
				(cg.is_semestral = 0) AND
				(sel_list.var_str IS NULL)
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 0) AND (@include_marked_deleted = 1)													-- (0101)	
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(sfi.year_id = @year_id) AND
											(cg.is_semestral = 0)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(sfi.year_id = @year_id) AND
				(cg.is_semestral = 0) AND
				(sel_list.var_str IS NULL)
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 1) AND (@include_marked_deleted = 0)													-- (0110)	
		BEGIN

			SELECT @date_start = date_start FROM ums.school_year WHERE year_id = @year_id;

			WITH cte_course_year_level (course_id, year_level_id, is_graduate_level, year_level_description, year_level_no, course_group_id, group_description, 
				is_semestral, sysid_enrolmentcourse, sysid_feelevel) AS
			(
				SELECT				-------------------------GET THE COURSE YEAR LEVEL IF THAT LEVEL HAS A SCHOOL FEE LEVEL CREATED------------------
					cyl.course_id AS course_id,
					cyl.year_level_id AS year_level_id,
					cyl.is_graduate_level AS is_graduate_level,
					yli.year_level_description AS year_level_description,
					yli.year_level_no AS year_level_no,
					cg.course_group_id AS course_group_id,
					cg.group_description AS group_description,
					cg.is_semestral AS is_semestral,
					sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
					sfl.sysid_feelevel AS sysid_feelevel
				FROM
					ums.course_year_level AS cyl			
				INNER JOIN ums.course_information AS ci ON ci.course_id = cyl.course_id
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				INNER JOIN ums.student_enrolment_course AS sec ON sec.course_id = ci.course_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sfi.year_id = @year_id) AND
					(cg.is_semestral = 0)			
			),
			cte_current_year_level (year_level_id, year_level_no, sysid_schoolfee, sysid_semester, is_graduate_student) AS
			(
				SELECT		-------------------------------LEVELS TAKEN BASED ON A CURRENT COURSE-------------------------------------
					yli.year_level_id AS year_level_id,
					yli.year_level_no AS year_level_no,
					sfl.sysid_schoolfee AS sysid_schoolfee,
					sel.sysid_semester AS sysid_semester,
					sel.is_graduate_student AS is_graduate_student
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 0) AND
					(sel_list.var_str IS NULL)	
			),
			cte_selected_current_year_level (year_level_id) AS
			(
				SELECT		----------------------LEVELS TAKEN BASED ON A CURRENT COURSE AND DATE START----------------------------------
					yli.year_level_id AS year_level_id
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id	
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee	
				INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id	
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(sy.date_start >= @date_start) AND
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 0) AND
					(sel_list.var_str IS NULL)
			)

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(sel.is_marked_deleted = 0) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(sfi.year_id = @year_id) AND
											(cg.is_semestral = 0)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(sel.is_marked_deleted = 0) AND
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(sfi.year_id = @year_id) AND
				(cg.is_semestral = 0) AND
				(sel_list.var_str IS NULL)
			UNION ALL
			SELECT
				NULL AS sysid_enrolmentlevel,
				ccyl.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				ccyl.sysid_feelevel AS sysid_feelevel,
				NULL AS sysid_semester,
				NULL AS level_section,
				NULL AS is_entry_level,
				'false' AS is_marked_deleted,
				NULL AS is_graduate_student,
				(SELECT is_international FROM ums.student_information WHERE sysid_student = @sysid_student) AS is_international,
				NULL AS enrolment_level_no,	
				'' AS last_transaction_date_string,	
				ccyl.course_id AS course_id,
				NULL AS sysid_schoolfee,
				ccyl.year_level_id AS year_level_id,				
				ccyl.year_level_description AS year_level_description,			
				ccyl.year_level_no AS year_level_no,
				ccyl.is_graduate_level AS is_graduate_level,
				ccyl.course_group_id AS course_group_id,
				ccyl.group_description AS group_description,
				ccyl.is_semestral AS is_semestral,
				'false' AS is_enrolled
			FROM
				cte_course_year_level AS ccyl		
			WHERE
				(((ccyl.year_level_id NOT IN (SELECT	--determine if the current year level has already a level that is been marked as graduate student
													ctyl.year_level_id
												FROM 
													cte_current_year_level AS ctyl
												WHERE
													ctyl.is_graduate_student = 1)) AND
				(ccyl.year_level_no >= (SELECT 
											MAX(ctyl.year_level_no) 
										FROM 
											cte_current_year_level AS ctyl)) AND
				(NOT EXISTS (SELECT year_level_id FROM cte_selected_current_year_level))) OR	--if there is a selected enrolled level, 
																					--that level will be the only one to be displayed
				(NOT EXISTS (SELECT year_level_id FROM cte_current_year_level))) AND		--if there is no level created for the current course
				(EXISTS (SELECT		-----------------determine if the level has an entry level with regards to its course group-----------------
								sel.sysid_enrolmentlevel 
							FROM
								ums.student_enrolment_level AS sel
							INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
							INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
							INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
							WHERE
								(sec.sysid_student = @sysid_student) AND
								(sel.is_entry_level = 1) AND
								(sel.is_marked_deleted = 0) AND
								(ccyl.course_group_id = yli.course_group_id) AND
								(ccyl.year_level_no >= yli.year_level_no)))	--the level that is candidate for enrolment should be greater or equal
																			--to the entry level of the course group regardless of what course it is
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC
			
		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 1) AND (@include_marked_deleted = 1)													-- (0111)	
		BEGIN

			SELECT @date_start = date_start FROM ums.school_year WHERE year_id = @year_id;

			WITH cte_course_year_level (course_id, year_level_id, is_graduate_level, year_level_description, year_level_no, course_group_id, group_description, 
				is_semestral, sysid_enrolmentcourse, sysid_feelevel) AS
			(
				SELECT				-------------------------GET THE COURSE YEAR LEVEL IF THAT LEVEL HAS A SCHOOL FEE LEVEL CREATED------------------
					cyl.course_id AS course_id,
					cyl.year_level_id AS year_level_id,
					cyl.is_graduate_level AS is_graduate_level,
					yli.year_level_description AS year_level_description,
					yli.year_level_no AS year_level_no,
					cg.course_group_id AS course_group_id,
					cg.group_description AS group_description,
					cg.is_semestral AS is_semestral,
					sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
					sfl.sysid_feelevel AS sysid_feelevel
				FROM
					ums.course_year_level AS cyl			
				INNER JOIN ums.course_information AS ci ON ci.course_id = cyl.course_id
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				INNER JOIN ums.student_enrolment_course AS sec ON sec.course_id = ci.course_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sfi.year_id = @year_id) AND
					(cg.is_semestral = 0)			
			),
			cte_current_year_level (year_level_id, year_level_no, sysid_schoolfee, sysid_semester, is_graduate_student) AS
			(
				SELECT			-------------------------------LEVELS TAKEN BASED ON A CURRENT COURSE-------------------------------------
					yli.year_level_id AS year_level_id,
					yli.year_level_no AS year_level_no,
					sfl.sysid_schoolfee AS sysid_schoolfee,
					sel.sysid_semester AS sysid_semester,
					sel.is_graduate_student AS is_graduate_student
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 0) AND
					(sel_list.var_str IS NULL)	
			),
			cte_selected_current_year_level (year_level_id) AS
			(
				SELECT			----------------------LEVELS TAKEN BASED ON A CURRENT COURSE AND DATE START----------------------------------
					yli.year_level_id AS year_level_id
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id	
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee	
				INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id	
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(sy.date_start >= @date_start) AND
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 0) AND
					(sel_list.var_str IS NULL)	
			)

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(sfi.year_id = @year_id) AND
											(cg.is_semestral = 0)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(sfi.year_id = @year_id) AND
				(cg.is_semestral = 0) AND
				(sel_list.var_str IS NULL)
			UNION ALL
			SELECT
				NULL AS sysid_enrolmentlevel,
				ccyl.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				ccyl.sysid_feelevel AS sysid_feelevel,
				NULL AS sysid_semester,
				NULL AS level_section,
				NULL AS is_entry_level,
				'false' AS is_marked_deleted,
				NULL AS is_graduate_student,
				(SELECT is_international FROM ums.student_information WHERE sysid_student = @sysid_student) AS is_international,
				NULL AS enrolment_level_no,		
				'' AS last_transaction_date_string,
				ccyl.course_id AS course_id,
				NULL AS sysid_schoolfee,
				ccyl.year_level_id AS year_level_id,				
				ccyl.year_level_description AS year_level_description,			
				ccyl.year_level_no AS year_level_no,
				ccyl.is_graduate_level AS is_graduate_level,
				ccyl.course_group_id AS course_group_id,
				ccyl.group_description AS group_description,
				ccyl.is_semestral AS is_semestral,
				'false' AS is_enrolled
			FROM
				cte_course_year_level AS ccyl		
			WHERE
				(((ccyl.year_level_id NOT IN (SELECT	--determine if the current year level has already a level that is been marked as graduate student
													ctyl.year_level_id
												FROM 
													cte_current_year_level AS ctyl
												WHERE
													ctyl.is_graduate_student = 1)) AND
				(ccyl.year_level_no >= (SELECT 
											MAX(ctyl.year_level_no) 
										FROM 
											cte_current_year_level AS ctyl)) AND
				(NOT EXISTS (SELECT year_level_id FROM cte_selected_current_year_level))) OR	--if there is a selected enrolled level, 
																					--that level will be the only one to be displayed
				(NOT EXISTS (SELECT year_level_id FROM cte_current_year_level))) AND		--if there is no level created for the current course
				(EXISTS (SELECT		-----------------determine if the level has an entry level with regards to its course group-----------------
								sel.sysid_enrolmentlevel 
							FROM
								ums.student_enrolment_level AS sel
							INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
							INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
							INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
							WHERE
								(sec.sysid_student = @sysid_student) AND
								(sel.is_entry_level = 1) AND
								(sel.is_marked_deleted = 0) AND
								(ccyl.course_group_id = yli.course_group_id) AND
								(ccyl.year_level_no >= yli.year_level_no)))	--the level that is candidate for enrolment should be greater or equal
																			--to the entry level of the course group regardless of what course it is
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (NOT ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 0) AND 
			((@include_not_enrolled = 0) OR (@include_not_enrolled = 1)) AND (@include_marked_deleted = 0)				-- (1000)	
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
											(sel.sysid_semester = @sysid_semester) AND 
											(sel.is_marked_deleted = 0) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 0) AND
											(cg.is_semestral = 1)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
				(sel.sysid_semester = @sysid_semester) AND 
				(sel.is_marked_deleted = 0) AND
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 0) AND
				(cg.is_semestral = 1) AND
				(sel_list.var_str IS NULL)
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (NOT ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 0) AND 
			((@include_not_enrolled = 0) OR (@include_not_enrolled = 1)) AND (@include_marked_deleted = 1)					-- (1001)	
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
											(sel.sysid_semester = @sysid_semester) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 0) AND
											(cg.is_semestral = 1)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
				(sel.sysid_semester = @sysid_semester) AND 
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 0) AND
				(cg.is_semestral = 1) AND
				(sel_list.var_str IS NULL)
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC			

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (NOT ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 0) AND (@include_marked_deleted = 0)													-- (1100)	
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
											(sel.sysid_semester = @sysid_semester) AND				
											(sel.is_marked_deleted = 0) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(cg.is_semestral = 1)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
				(sel.sysid_semester = @sysid_semester) AND				
				(sel.is_marked_deleted = 0) AND
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(cg.is_semestral = 1) AND
				(sel_list.var_str IS NULL)			
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC
		
		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (NOT ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 0) AND (@include_marked_deleted = 1)													-- (1101)	
		BEGIN

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
											(sel.sysid_semester = @sysid_semester) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(cg.is_semestral = 1)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
				(sel.sysid_semester = @sysid_semester) AND	
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(cg.is_semestral = 1) AND
				(sel_list.var_str IS NULL)			
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (NOT ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 1) AND (@include_marked_deleted = 0)													-- (1110)	
		BEGIN

			SELECT @date_start = date_start FROM ums.semester_information WHERE sysid_semester = @sysid_semester;

			WITH cte_course_year_level (course_id, year_level_id, is_graduate_level, year_level_description, year_level_no, course_group_id, group_description, 
				is_semestral, sysid_enrolmentcourse, sysid_feelevel) AS
			(
				SELECT				-------------------------GET THE COURSE YEAR LEVEL IF THAT LEVEL HAS A SCHOOL FEE LEVEL CREATED------------------
					cyl.course_id AS course_id,
					cyl.year_level_id AS year_level_id,
					cyl.is_graduate_level AS is_graduate_level,
					yli.year_level_description AS year_level_description,
					yli.year_level_no AS year_level_no,
					cg.course_group_id AS course_group_id,
					cg.group_description AS group_description,
					cg.is_semestral AS is_semestral,
					sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
					sfl.sysid_feelevel AS sysid_feelevel
				FROM
					ums.course_year_level AS cyl			
				INNER JOIN ums.course_information AS ci ON ci.course_id = cyl.course_id
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				INNER JOIN ums.student_enrolment_course AS sec ON sec.course_id = ci.course_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sfi.year_id = @year_id) AND
					(cg.is_semestral = 1)			
			),
			cte_current_year_level (year_level_id, year_level_no, sysid_schoolfee, sysid_semester, is_graduate_student) AS
			(
				SELECT			-------------------------------LEVELS TAKEN BASED ON A CURRENT COURSE-------------------------------------
					yli.year_level_id AS year_level_id,
					yli.year_level_no AS year_level_no,
					sfl.sysid_schoolfee AS sysid_schoolfee,
					sel.sysid_semester AS sysid_semester,
					sel.is_graduate_student AS is_graduate_student
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 1) AND
					(sel_list.var_str IS NULL)	
			),
			cte_selected_current_year_level (year_level_id) AS
			(
				SELECT			----------------------LEVELS TAKEN BASED ON A CURRENT COURSE AND DATE START----------------------------------
					yli.year_level_id AS year_level_id
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id	
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
					(sri.date_start >= @date_start) AND
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 1) AND
					(sel_list.var_str IS NULL)
			)

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
											(sel.sysid_semester = @sysid_semester) AND				
											(sel.is_marked_deleted = 0) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(cg.is_semestral = 1)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
				(sel.sysid_semester = @sysid_semester) AND				
				(sel.is_marked_deleted = 0) AND
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(cg.is_semestral = 1) AND
				(sel_list.var_str IS NULL)
			UNION ALL
			SELECT
				NULL AS sysid_enrolmentlevel,
				ccyl.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				ccyl.sysid_feelevel AS sysid_feelevel,
				NULL AS sysid_semester,
				NULL AS level_section,
				NULL AS is_entry_level,
				'false' AS is_marked_deleted,
				NULL AS is_graduate_student,
				(SELECT is_international FROM ums.student_information WHERE sysid_student = @sysid_student) AS is_international,
				NULL AS enrolment_level_no,
				'' AS last_transaction_date_string,
				ccyl.course_id AS course_id,
				NULL AS sysid_schoolfee,
				ccyl.year_level_id AS year_level_id,				
				ccyl.year_level_description AS year_level_description,			
				ccyl.year_level_no AS year_level_no,
				ccyl.is_graduate_level AS is_graduate_level,
				ccyl.course_group_id AS course_group_id,
				ccyl.group_description AS group_description,
				ccyl.is_semestral AS is_semestral,
				'false' AS is_enrolled
			FROM
				cte_course_year_level AS ccyl		
			WHERE
				(((ccyl.year_level_id NOT IN (SELECT	--determine if the current year level has already a level that is been marked as graduate student
													ctyl.year_level_id
												FROM 
													cte_current_year_level AS ctyl
												WHERE
													ctyl.is_graduate_student = 1)) AND
				(ccyl.year_level_no >= (SELECT 
											MAX(ctyl.year_level_no) 
										FROM 
											cte_current_year_level AS ctyl)) AND
				(NOT EXISTS (SELECT year_level_id FROM cte_selected_current_year_level))) OR	--if there is a selected enrolled level, 
																					--that level will be the only one to be displayed
				(NOT EXISTS (SELECT year_level_id FROM cte_current_year_level))) AND		--if there is no level created for the current course
				(EXISTS (SELECT		-----------------determine if the level has an entry level with regards to its course group-----------------
								sel.sysid_enrolmentlevel 
							FROM
								ums.student_enrolment_level AS sel
							INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
							INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
							INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
							WHERE
								(sec.sysid_student = @sysid_student) AND
								(sel.is_entry_level = 1) AND
								(sel.is_marked_deleted = 0) AND
								(ccyl.course_group_id = yli.course_group_id) AND
								(ccyl.year_level_no >= yli.year_level_no)))	--the level that is candidate for enrolment should be greater or equal
																			--to the entry level of the course group regardless of what course it is
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END
		ELSE IF (NOT ISNULL(@year_id, '') = '') AND (NOT ISNULL(@sysid_semester, '') = '') AND (@is_current_course = 1) AND 
			(@include_not_enrolled = 1) AND (@include_marked_deleted = 1)													-- (1111)	
		BEGIN

			SELECT @date_start = date_start FROM ums.semester_information WHERE sysid_semester = @sysid_semester;

			WITH cte_course_year_level (course_id, year_level_id, is_graduate_level, year_level_description, year_level_no, course_group_id, group_description, 
				is_semestral, sysid_enrolmentcourse, sysid_feelevel) AS
			(
				SELECT				-------------------------GET THE COURSE YEAR LEVEL IF THAT LEVEL HAS A SCHOOL FEE LEVEL CREATED------------------
					cyl.course_id AS course_id,
					cyl.year_level_id AS year_level_id,
					cyl.is_graduate_level AS is_graduate_level,
					yli.year_level_description AS year_level_description,
					yli.year_level_no AS year_level_no,
					cg.course_group_id AS course_group_id,
					cg.group_description AS group_description,
					cg.is_semestral AS is_semestral,
					sec.sysid_enrolmentcourse AS sysid_enrolmentcourse,
					sfl.sysid_feelevel AS sysid_feelevel
				FROM
					ums.course_year_level AS cyl			
				INNER JOIN ums.course_information AS ci ON ci.course_id = cyl.course_id
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = cyl.year_level_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				INNER JOIN ums.student_enrolment_course AS sec ON sec.course_id = ci.course_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sfi.year_id = @year_id) AND
					(cg.is_semestral = 1)			
			),
			cte_current_year_level (year_level_id, year_level_no, sysid_schoolfee, sysid_semester, is_graduate_student) AS
			(
				SELECT			-------------------------------LEVELS TAKEN BASED ON A CURRENT COURSE-------------------------------------
					yli.year_level_id AS year_level_id,
					yli.year_level_no AS year_level_no,
					sfl.sysid_schoolfee AS sysid_schoolfee,
					sel.sysid_semester AS sysid_semester,
					sel.is_graduate_student AS is_graduate_student
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 1) AND
					(sel_list.var_str IS NULL)
			),
			cte_selected_current_year_level (year_level_id) AS
			(
				SELECT			----------------------LEVELS TAKEN BASED ON A CURRENT COURSE AND DATE START----------------------------------
					yli.year_level_id AS year_level_id
				FROM
					ums.year_level_information AS yli
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id	
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE
					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
					(sri.date_start >= @date_start) AND
					(sec.sysid_student = @sysid_student) AND
					(sec.is_current_course = 1) AND
					(sel.is_marked_deleted = 0) AND
					(cg.is_semestral = 1) AND
					(sel_list.var_str IS NULL)
			)

			SELECT
				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
				sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				sel.sysid_feelevel AS sysid_feelevel,
				sel.sysid_semester AS sysid_semester,
				sel.level_section AS level_section,
				sel.is_entry_level AS is_entry_level,
				sel.is_marked_deleted AS is_marked_deleted,
				sel.is_graduate_student AS is_graduate_student,
				sel.is_international AS is_international,
				sel.enrolment_level_no AS enrolment_level_no,	
				ISNULL(CONVERT(varchar, sel.edited_on, 101), '') AS last_transaction_date_string,
				sec.course_id AS course_id,
				sfl.sysid_schoolfee AS sysid_schoolfee,
				sfl.year_level_id AS year_level_id,				
				yli.year_level_description AS year_level_description,
				yli.year_level_no AS year_level_no,
				cyl.is_graduate_level AS is_graduate_level,
				cg.course_group_id AS course_group_id,
				cg.group_description AS group_description,
				cg.is_semestral AS is_semestral,
				'true' AS is_enrolled
			FROM
				ums.student_enrolment_level AS sel
			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse			
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
			INNER JOIN
				(
					SELECT
						year_level_id,
						is_graduate_level,
						course_id
					FROM
						ums.course_year_level
					WHERE
						(course_id IN (SELECT
											DISTINCT sec.course_id AS course_id
										FROM
											ums.student_enrolment_course AS sec
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
										INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
										INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
										INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
										WHERE
											(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
											(sel.sysid_semester = @sysid_semester) AND
											(sec.sysid_student = @sysid_student) AND
											(sec.is_current_course = 1) AND
											(cg.is_semestral = 1)))
				) AS cyl ON cyl.year_level_id = yli.year_level_id AND cyl.course_id = sec.course_id
			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
			LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
			WHERE
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND 
				(sel.sysid_semester = @sysid_semester) AND
				(sec.sysid_student = @sysid_student) AND
				(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
				(sec.is_current_course = 1) AND
				(cg.is_semestral = 1) AND
				(sel_list.var_str IS NULL)
			UNION ALL
			SELECT
				NULL AS sysid_enrolmentlevel,
				ccyl.sysid_enrolmentcourse AS sysid_enrolmentcourse,
				ccyl.sysid_feelevel AS sysid_feelevel,
				NULL AS sysid_semester,
				NULL AS level_section,
				NULL AS is_entry_level,
				'false' AS is_marked_deleted,
				NULL AS is_graduate_student,
				(SELECT is_international FROM ums.student_information WHERE sysid_student = @sysid_student) AS is_international,
				NULL AS enrolment_level_no,	
				'' AS last_transaction_date_string,	
				ccyl.course_id AS course_id,
				NULL AS sysid_schoolfee,
				ccyl.year_level_id AS year_level_id,				
				ccyl.year_level_description AS year_level_description,			
				ccyl.year_level_no AS year_level_no,
				ccyl.is_graduate_level AS is_graduate_level,
				ccyl.course_group_id AS course_group_id,
				ccyl.group_description AS group_description,
				ccyl.is_semestral AS is_semestral,
				'false' AS is_enrolled
			FROM
				cte_course_year_level AS ccyl		
			WHERE
				(((ccyl.year_level_id NOT IN (SELECT	--determine if the current year level has already a level that is been marked as graduate student
													ctyl.year_level_id
												FROM 
													cte_current_year_level AS ctyl
												WHERE
													ctyl.is_graduate_student = 1)) AND
				(ccyl.year_level_no >= (SELECT 
											MAX(ctyl.year_level_no) 
										FROM 
											cte_current_year_level AS ctyl)) AND
				(NOT EXISTS (SELECT year_level_id FROM cte_selected_current_year_level))) OR	--if there is a selected enrolled level, 
																					--that level will be the only one to be displayed
				(NOT EXISTS (SELECT year_level_id FROM cte_current_year_level))) AND		--if there is no level created for the current course
				(EXISTS (SELECT		-----------------determine if the level has an entry level with regards to its course group-----------------
								sel.sysid_enrolmentlevel 
							FROM
								ums.student_enrolment_level AS sel
							INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
							INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
							INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
							WHERE
								(sec.sysid_student = @sysid_student) AND
								(sel.is_entry_level = 1) AND
								(sel.is_marked_deleted = 0) AND
								(ccyl.course_group_id = yli.course_group_id) AND
								(ccyl.year_level_no >= yli.year_level_no)))	--the level that is candidate for enrolment should be greater or equal
																			--to the entry level of the course group regardless of what course it is
			ORDER BY
				is_entry_level DESC, year_level_no ASC, is_marked_deleted DESC

		END

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END
	
GO
-------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentYearIDSemesterStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentStudentEnrolmentLevel')
   DROP PROCEDURE ums.SelectBySysIDStudentStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.SelectBySysIDStudentStudentEnrolmentLevel
	
	@sysid_student varchar (50) = '',

	@system_user_id varchar(50) = ''
	
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT
			sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
			sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sel.sysid_feelevel AS sysid_feelevel,
			sel.sysid_semester AS sysid_semester,
			sel.level_section AS level_section,
			sel.is_entry_level AS is_entry_level,
			sel.is_graduate_student AS is_graduate_student,
			sel.is_international AS is_international,
			sel.enrolment_level_no AS enrolment_level_no,
			sec.is_current_course AS is_current_course,
			sfl.sysid_schoolfee AS sysid_schoolfee,
			sfl.year_level_id AS year_level_id,				
			yli.year_level_description AS year_level_description,
			yli.year_level_no AS year_level_no,
			cg.course_group_id AS course_group_id,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			sy.year_description AS year_description,
			sy.year_id AS year_id,
			NULL AS semester_description			
		FROM
			ums.student_enrolment_level AS sel
		INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
		INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
		INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id		
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		WHERE
			(sec.sysid_student = @sysid_student) AND
			(sel.is_entry_level = 1) AND
			(cg.is_semestral = 0) AND
			(sec.sysid_semester IS NULL OR sec.sysid_semester = '') AND
			(sel.is_marked_deleted = 0)
		UNION ALL
		SELECT
			sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
			sel.sysid_enrolmentcourse AS sysid_enrolmentcourse,
			sel.sysid_feelevel AS sysid_feelevel,
			sel.sysid_semester AS sysid_semester,
			sel.level_section AS level_section,
			sel.is_entry_level AS is_entry_level,
			sel.is_graduate_student AS is_graduate_student,
			sel.is_international AS is_international,
			sel.enrolment_level_no AS enrolment_level_no,
			sec.is_current_course AS is_current_course,
			sfl.sysid_schoolfee AS sysid_schoolfee,
			sfl.year_level_id AS year_level_id,				
			yli.year_level_description AS year_level_description,
			yli.year_level_no AS year_level_no,
			cg.course_group_id AS course_group_id,
			cg.group_description AS group_description,
			cg.is_semestral AS is_semestral,
			sy.year_description AS year_description,
			sy.year_id AS year_id,
			ss.semester_description AS semester_description
		FROM
			ums.student_enrolment_level AS sel
		INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
		INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
		INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id		
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		INNER JOIN ums.semester_information AS si ON si.sysid_semester = sel.sysid_semester
		INNER JOIN ums.school_semester AS ss ON ss.semester_id = si.semester_id
		WHERE
			(sec.sysid_student = @sysid_student) AND
			(sel.is_entry_level = 1) AND
			(cg.is_semestral = 1) AND
			(NOT sec.sysid_semester IS NULL AND NOT sec.sysid_semester = '') AND
			(sel.is_marked_deleted = 0)
		ORDER BY
			is_current_course DESC, year_level_no ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountStudentEnrolmentLevel')
   DROP PROCEDURE ums.GetCountStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.GetCountStudentEnrolmentLevel

	@system_user_id varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT COUNT(sysid_enrolmentlevel) FROM ums.student_enrolment_level
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDStudentEnrolmentLevel')
   DROP PROCEDURE ums.IsExistsSysIDStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.IsExistsSysIDStudentEnrolmentLevel

	@sysid_enrolmentlevel varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT ums.IsExistsSysIDStudentEnrolmentLev(@sysid_enrolmentlevel)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsCourseYearLevelNoLesserStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsCourseYearLevelNoLesserStudentEnrolmentLevel')
   DROP PROCEDURE ums.IsCourseYearLevelNoLesserStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.IsCourseYearLevelNoLesserStudentEnrolmentLevel

	@sysid_student varchar (50) = '',
	@course_id varchar (50) = '',
	@year_level_id varchar (50) = '',
	@sysid_enrolmentlevel_exclude_list nvarchar (MAX),

	@system_user_id varchar (50) = ''
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT ums.IsCourseYearLevelNoLesserStudentEnrolmentLev(@sysid_student, @course_id, @year_level_id, @sysid_enrolmentlevel_exclude_list)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsCourseYearLevelNoLesserStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsValidForYearLevelChangeEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsValidForYearLevelChangeEnrolmentLevel')
   DROP PROCEDURE ums.IsValidForYearLevelChangeEnrolmentLevel
GO

CREATE PROCEDURE ums.IsValidForYearLevelChangeEnrolmentLevel

	@sysid_student varchar (50) = '',
	@sysid_enrolmentlevel varchar (50) = '',

	@system_user_id varchar (50) = ''
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT ums.IsValidForYearLevelChangeEnrolmentLev(@sysid_student, @sysid_enrolmentlevel)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsValidForYearLevelChangeEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsLevelCourseGroupWithEntryLevelEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsLevelCourseGroupWithEntryLevelEnrolmentLevel')
   DROP PROCEDURE ums.IsLevelCourseGroupWithEntryLevelEnrolmentLevel
GO

CREATE PROCEDURE ums.IsLevelCourseGroupWithEntryLevelEnrolmentLevel

	@sysid_student varchar (50) = '',
	@sysid_feelevel varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT ums.IsLevelCourseGroupWithEntryLevelEnrolmentLev(@sysid_student, @sysid_feelevel)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsLevelCourseGroupWithEntryLevelEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistSysIDStudentCourseLevelSemesterEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistSysIDStudentCourseLevelSemesterEnrolmentLevel')
   DROP PROCEDURE ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLevel
GO

CREATE PROCEDURE ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLevel

	@sysid_student varchar (50) = '',
	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_feelevel varchar (50) = '',
	@sysid_semester varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLev(@sysid_student, @sysid_enrolmentcourse, @sysid_feelevel, @sysid_semester)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLevel')
   DROP PROCEDURE ums.IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLevel

	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_schoolfee varchar (50) = '',
	@sysid_semester varchar (50) = '',

	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT ums.IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLev(@sysid_enrolmentcourse, @sysid_schoolfee, @sysid_semester)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsValidForShiftToCurrentCourseStudentEnrolmentLevel" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsValidForShiftToCurrentCourseStudentEnrolmentLevel')
   DROP PROCEDURE ums.IsValidForShiftToCurrentCourseStudentEnrolmentLevel
GO

CREATE PROCEDURE ums.IsValidForShiftToCurrentCourseStudentEnrolmentLevel

	@sysid_enrolmentlevel varchar (50) = '',
	@to_shift_sysid_enrolmentcourse varchar (50) = '',

	@system_user_id varchar(50) = ''
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsStudentDataControllerSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN

		DECLARE @is_valid_for_shift bit

		IF (EXISTS (SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND
																					sysid_enrolmentcourse = @to_shift_sysid_enrolmentcourse))
		BEGIN
			SET @is_valid_for_shift = 0
		END
		ELSE
		BEGIN
			SELECT @is_valid_for_shift = ums.IsValidForShiftToCurrentCourseStudentEnrolmentLev(@sysid_enrolmentlevel, @to_shift_sysid_enrolmentcourse, @system_user_id)		
		END

		SELECT @is_valid_for_shift
		RETURN @is_valid_for_shift

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student enrolment level', 'Student Enrolment Level'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsValidForShiftToCurrentCourseStudentEnrolmentLevel TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDStudentEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDStudentEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDStudentEnrolmentLev
GO

CREATE FUNCTION ums.IsExistsSysIDStudentEnrolmentLev
(	
	@sysid_enrolmentlevel varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_enrolmentlevel AS sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsCourseYearLevelNoLesserStudentEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsCourseYearLevelNoLesserStudentEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsCourseYearLevelNoLesserStudentEnrolmentLev
GO

CREATE FUNCTION ums.IsCourseYearLevelNoLesserStudentEnrolmentLev
(	
	@sysid_student varchar (50) = '',
	@course_id varchar (50) = '',
	@year_level_id varchar (50) = '',
	@sysid_enrolmentlevel_exclude_list nvarchar (MAX)
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	--determine if there is no higher year level already enrolled in the student with a certain course
	IF EXISTS (SELECT
					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel
				FROM 
					ums.student_enrolment_level AS sel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
				LEFT JOIN ums.IterateListToTable (@sysid_enrolmentlevel_exclude_list, ',') AS sel_list ON sel_list.var_str = sel.sysid_enrolmentlevel
				WHERE 
					(sec.sysid_student = @sysid_student) AND
					(sec.course_id = @course_id) AND
					(yli.year_level_no > (SELECT 
												yli.year_level_no
											FROM
												ums.year_level_information AS yli
											WHERE
												yli.year_level_id = @year_level_id)) AND
					(sel.is_marked_deleted = 0) AND
					(sel_list.var_str IS NULL)) AND
	--determines if the year level is a level that is valid for a course passed as parameter
		EXISTS (SELECT course_year_level_id FROM ums.course_year_level WHERE course_id = @course_id AND year_level_id = @year_level_id)	
				
	BEGIN
		SET @result = 1
	END
	
	RETURN @result
END
GO
-------------------------------------------------------------------

-- verifies if the "IsValidForYearLevelChangeEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsValidForYearLevelChangeEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsValidForYearLevelChangeEnrolmentLev
GO

CREATE FUNCTION ums.IsValidForYearLevelChangeEnrolmentLev
(	
	@sysid_student varchar (50) = '',
	@sysid_enrolmentlevel varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF 
		--determine if the year level is not the first level that has been created for the student
		--if it is, update of year level is NOT valid because it will alter the counting for student ID
		NOT EXISTS (SELECT 
						sel.sysid_enrolmentlevel AS sysid_enrolmentlevel
					FROM
						ums.student_enrolment_level AS sel
					INNER JOIN
					(
						SELECT	--GET ALL THE MINIMUM (FIRST ENROLMENT LEVEL) CREATED FOR EVERY STUDENT
							t_si.sysid_student AS sysid_student,
							MIN(t_sel.enrolment_level_no) AS enrolment_level_no
						FROM
							ums.student_enrolment_level AS t_sel
						INNER JOIN ums.student_enrolment_course AS t_sec ON t_sec.sysid_enrolmentcourse = t_sel.sysid_enrolmentcourse
						INNER JOIN ums.student_information AS t_si ON t_si.sysid_student = t_sec.sysid_student
						WHERE 
							t_si.sysid_student = @sysid_student
						GROUP BY
							t_si.sysid_student
						--no marked as deleted condition because a level might be deleted in the middle of the enrolment time
						--and after that a student might enroll and ask for a new id
						
					) AS inner_sel ON inner_sel.enrolment_level_no = sel.enrolment_level_no
					WHERE
						(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsLevelCourseGroupWithEntryLevelEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsLevelCourseGroupWithEntryLevelEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsLevelCourseGroupWithEntryLevelEnrolmentLev
GO

CREATE FUNCTION ums.IsLevelCourseGroupWithEntryLevelEnrolmentLev
(	
	@sysid_student varchar (50) = '',
	@sysid_feelevel varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	--determine if the year level has already an entry level with regards to its course group
	IF EXISTS (SELECT 
					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel 
				FROM 
					ums.student_enrolment_level AS sel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
				WHERE 
					(sec.sysid_student = @sysid_student) AND
					(sel.is_entry_level = 1) AND
					(cg.course_group_id = (SELECT
												cg.course_group_id
											FROM
												ums.course_group AS cg
											INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
											WHERE
												sfl.sysid_feelevel = @sysid_feelevel)) AND
					(sel.is_marked_deleted = 0))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistSysIDStudentCourseLevelSemesterEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLev
GO

CREATE FUNCTION ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLev
(	
	@sysid_student varchar (50) = '',
	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_feelevel varchar (50) = '',
	@sysid_semester varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT			-- the fee level already exists
					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel
				FROM 
					ums.student_enrolment_level AS sel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
					(sfl.sysid_feelevel = @sysid_feelevel) AND
					(cg.is_semestral = 0) AND
					(sel.is_marked_deleted = 0)) OR
		EXISTS (SELECT
					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel
				FROM 
					ums.student_enrolment_level AS sel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
					(sfl.sysid_feelevel = @sysid_feelevel) AND
					(cg.is_semestral = 1 AND sel.sysid_semester = @sysid_semester) AND
					(sel.is_marked_deleted = 0)) OR
		EXISTS (SELECT			-- there is already a fee level
					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel
				FROM 
					ums.student_enrolment_level AS sel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
					(cg.is_semestral = 0 AND
						sfi.year_id = (SELECT 
											tsfi.year_id
										FROM
											ums.school_fee_information AS tsfi
										INNER JOIN ums.school_fee_level AS tsfl ON tsfl.sysid_schoolfee = tsfi.sysid_schoolfee
										WHERE
											tsfl.sysid_feelevel = @sysid_feelevel)) AND
					(sel.is_marked_deleted = 0)) OR
		EXISTS (SELECT
					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel
				FROM 
					ums.student_enrolment_level AS sel
				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
				INNER JOIN ums.course_information AS ci ON ci.course_id = sec.course_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = ci.course_group_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				WHERE
					(sec.sysid_student = @sysid_student) AND
					(sec.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
					(cg.is_semestral = 1 AND sel.sysid_semester = @sysid_semester) AND
					(sel.is_marked_deleted = 0))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsNotMarkedDeletedEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsNotMarkedDeletedEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsNotMarkedDeletedEnrolmentLev
GO

CREATE FUNCTION ums.IsNotMarkedDeletedEnrolmentLev
(	
	@sysid_enrolmentlevel varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND is_marked_deleted = 0)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsSpecialClassLoadEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsExistsSpecialClassLoadEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsExistsSpecialClassLoadEnrolmentLev
GO

CREATE FUNCTION ums.IsExistsSpecialClassLoadEnrolmentLev
(	
	@sysid_enrolmentlevel varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit
	DECLARE @sysid_semester varchar (50)
	DECLARE @is_semestral bit	
	DECLARE @year_id varchar (50)
	DECLARE @sysid_student varchar (50)

	SET @result = 0

	SELECT 
		@sysid_semester = sel.sysid_semester, 
		@is_semestral = cg.is_semestral,
		@year_id = sfi.year_id, 
		@sysid_student = sec.sysid_student
	FROM 
		ums.student_enrolment_level AS sel
	INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
	INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
	INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
	INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
	INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
	WHERE
		(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)
	
--			student enrolment level		special class			student enrolment level			special class
--			@is_semestral				cg.is_semestral			@year_id	@sysid_semester		sci.year_id		sci.sysid_semester
--
--				0							0				|		1			0			=		1				0
--				0							1				|		1			0			=		0			get the year_id the semester belongs
--				1							0				|		1			0			=		1				0
--				1							1				|		0			1			=		0				1

	IF EXISTS (SELECT 
					load_id
				FROM 
					ums.special_class_load AS scl
				INNER JOIN ums.special_class_information AS sci ON sci.sysid_special = scl.sysid_special
				INNER JOIN ums.subject_information AS si ON si.sysid_subject = sci.sysid_subject
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = si.course_group_id
				WHERE
					(((@is_semestral = 0) AND (cg.is_semestral = 0) AND (NOT sci.year_id IS NULL AND NOT sci.year_id = '') AND (sci.year_id = @year_id)) OR  --00 | 10 = 10
					((@is_semestral = 0) AND (cg.is_semestral = 1) AND ((SELECT year_id FROM ums.semester_information WHERE sysid_semester = sci.sysid_semester) = @year_id)) OR --01 | 10 = 0year_id
					((@is_semestral = 1) AND (cg.is_semestral = 0) AND (NOT sci.year_id IS NULL AND NOT sci.year_id = '') AND (sci.year_id = @year_id)) OR --10 | 10 = 10
					((@is_semestral = 1) AND (cg.is_semestral = 1) AND (NOT sci.sysid_semester IS NULL AND NOT sci.sysid_semester = '') AND (sci.sysid_semester = @sysid_semester))) AND  --11 | 01 = 01
					(scl.sysid_student = @sysid_student) AND
					(scl.is_premature_deloaded = 0))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsRecordLockForOptionalAdditionalDiscountFee" function already exist
IF OBJECT_ID (N'ums.IsRecordLockForOptionalAdditionalDiscountFee') IS NOT NULL
   DROP FUNCTION ums.IsRecordLockForOptionalAdditionalDiscountFee
GO

CREATE FUNCTION ums.IsRecordLockForOptionalAdditionalDiscountFee
(	
	@year_semester_id varchar (50) = '',
	@sysid_enrolmentlevel varchar (50) = '',
	@sysid_enrolmentcourse varchar (50) = '',
	@for_optional_fee bit = 0,
	@for_additional_fee bit = 0,
	@for_discount bit = 0
)
RETURNS bit
AS
BEGIN

--	IS YEAR/SEMESTER LOCKED		LEVEL ENROLLED/		IS CURRENT COURSE								IS OPEN				IS OPEN					IS OPEN
--								NOT WITHDRAWN														OPTIONAL FEE		ADDITIONAL FEE			DISCOUNT
--
--		0							0					0		------------------------------->		0					1						0
--		0							0					1		------------------------------->		0					1						0
--		0							1					0		------------------------------->		0					1						0
--		0							1					1		------------------------------->		1					1						1
--		1							0					0		------------------------------->		0					0						0
--		1							0					1		------------------------------->		0					0						0
--		1							1					0		------------------------------->		0					0						0
--		1							1					1		------------------------------->		0					0						0
	
	DECLARE @result bit
	DECLARE @is_year_semester_locked bit
	DECLARE @is_current_course bit

	SET @result = 0
	SET @is_year_semester_locked = 1
	SET @is_current_course = 0
	
	SELECT @is_current_course = is_current_course FROM ums.student_enrolment_course WHERE sysid_enrolmentcourse = @sysid_enrolmentcourse

	IF ((@for_optional_fee = 1) AND ((@for_additional_fee = 0) AND (@for_discount = 0)))
	BEGIN
		SET @is_year_semester_locked = ums.IsRecordLockByYearSemesterID(@year_semester_id)
	END
	ELSE IF (((@for_additional_fee = 1) OR (@for_discount = 1)) AND (@for_optional_fee = 0))
	BEGIN
		--SET @is_year_semester_locked = ums.IsRecordLockByYearSemesterIDNoAddMonths(@year_semester_id)

		--IF (@is_year_semester_locked = 1)
		--BEGIN
		--	SET @is_year_semester_locked = ums.IsRecordLockByYearSemesterID(@year_semester_id)
		--END
		
		SET @is_year_semester_locked = ums.IsRecordLockByYearSemesterIDNoAdvance(@year_semester_id)
	END
	
	IF (@is_year_semester_locked = 1) OR
		(((ums.IsNotMarkedDeletedEnrolmentLev(@sysid_enrolmentlevel) = 0) AND ((@is_current_course = 0) OR (@is_current_course = 1))) AND	-- (000 ---> 010)
			((@for_optional_fee = 1) OR (@for_discount = 1))) OR -- if @for_additional_fee = 1 the result = 0								-- (001 ---> 010)
		(((ums.IsNotMarkedDeletedEnrolmentLev(@sysid_enrolmentlevel) = 1) AND (@is_current_course = 0)) AND									-- (010 ---> 010)
			((@for_optional_fee = 1) OR (@for_discount = 1)))
	BEGIN
		SET @result = 1
	END

	-- (011 ---> 111) is not included because the result is initialized to zero (0)
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLev
GO

CREATE FUNCTION ums.IsNotValidForCourseSchoolFeeSysIDSemesterStudentEnrolmentLev
(	
	@sysid_enrolmentcourse varchar (50) = '',
	@sysid_schoolfee varchar (50) = '',
	@sysid_semester varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	--determines if there are enrolment levels that has a lower school year / semester information in the parameters supplied.  
	--Parameters are from a student enrolment course that is candidate for update.
	IF EXISTS (SELECT
					sel.sysid_enrolmentlevel
				FROM
					ums.student_enrolment_level AS sel
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
				INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
				INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
				WHERE
					(sel.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
					(cg.is_semestral = 0) AND
					(sy.date_end < (SELECT 
											t_sy.date_start
										FROM
											ums.school_year AS t_sy
										INNER JOIN ums.school_fee_information AS t_sfi ON t_sfi.year_id = t_sy.year_id
										WHERE
											(t_sfi.sysid_schoolfee = @sysid_schoolfee)))
				UNION ALL
				SELECT
					sel.sysid_enrolmentlevel
				FROM
					ums.student_enrolment_level AS sel
				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
				INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
				WHERE
					(sel.sysid_enrolmentcourse = @sysid_enrolmentcourse) AND
					(cg.is_semestral = 1) AND
					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
					(sri.date_end < (SELECT
											t_sri.date_start
										FROM
											ums.semester_information AS t_sri
										WHERE
											(t_sri.sysid_semester = @sysid_semester))))
			
																
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------------

-- verifies if the "IsValidForShiftToCurrentCourseStudentEnrolmentLev" function already exist
IF OBJECT_ID (N'ums.IsValidForShiftToCurrentCourseStudentEnrolmentLev') IS NOT NULL
   DROP FUNCTION ums.IsValidForShiftToCurrentCourseStudentEnrolmentLev
GO

CREATE FUNCTION ums.IsValidForShiftToCurrentCourseStudentEnrolmentLev
(	
	@sysid_enrolmentlevel varchar (50) = '',
	@to_shift_sysid_enrolmentcourse varchar (50) = '',

	@system_user_id varchar(50) = ''

) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		((ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1) AND
		(ums.IsUserSameDepartmentCourseInfo((SELECT
													sec.course_id						
												FROM
													ums.student_enrolment_course AS sec
												WHERE
													sysid_enrolmentcourse = @to_shift_sysid_enrolmentcourse), @system_user_id) = 1))) AND
		(ums.IsCurrentCourseStudentEnrolmentCo(@to_shift_sysid_enrolmentcourse) = 1) AND
		(ums.IsLevelCourseGroupWithEntryLevelEnrolmentLev((SELECT
																sec.sysid_student
															FROM
																ums.student_enrolment_course AS sec
															WHERE
																sec.sysid_enrolmentcourse = @to_shift_sysid_enrolmentcourse), 
															(SELECT
																	sysid_feelevel
																FROM
																	ums.student_enrolment_level
																WHERE
																	sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 1) AND
		(ums.IsCourseYearLevelNoLesserStudentEnrolmentLev((SELECT 
																sysid_student
															FROM 
																ums.student_enrolment_course
															WHERE
																sysid_enrolmentcourse = @to_shift_sysid_enrolmentcourse), 
															(SELECT 
																	course_id
																FROM 
																	ums.student_enrolment_course
																WHERE
																	sysid_enrolmentcourse = @to_shift_sysid_enrolmentcourse), 
															(SELECT
																	year_level_id
																FROM
																	ums.school_fee_level AS sfl
																INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
																WHERE
																	sysid_enrolmentlevel = @sysid_enrolmentlevel), NULL) = 0) AND
		(ums.IsExistSysIDStudentCourseLevelSemesterEnrolmentLev((SELECT 
																		sysid_student
																	FROM 
																		ums.student_enrolment_course
																	WHERE
																		sysid_enrolmentcourse = @to_shift_sysid_enrolmentcourse), 
																@to_shift_sysid_enrolmentcourse, 
																(SELECT
																		sysid_feelevel
																	FROM
																		ums.student_enrolment_level
																	WHERE
																		sysid_enrolmentlevel = @sysid_enrolmentlevel), 
																(SELECT 
																		sysid_semester
																	FROM
																		ums.student_enrolment_level
																	WHERE
																		sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 0) AND
		(ums.IsValidByCourseInformationSchoolFeeSysIDSemesterStudentEnrolmentCo(@to_shift_sysid_enrolmentcourse, 
																				(SELECT
																						sfi.sysid_schoolfee
																					FROM
																						ums.school_fee_information AS sfi
																					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
																					INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
																					WHERE
																						sysid_enrolmentlevel = @sysid_enrolmentlevel),
																					(SELECT 
																							sysid_semester
																						FROM
																							ums.student_enrolment_level
																						WHERE
																							sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 1)
																
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------------

-- ################################################END TABLE "student_enrolment_level" OBJECTS######################################################





-- ################################################TABLE "school_fee_details" OBJECTS######################################################
-- verifies if the school_fee_details table exists
IF OBJECT_ID('ums.school_fee_details', 'U') IS NOT NULL
	DROP TABLE ums.school_fee_details
GO

CREATE TABLE ums.school_fee_details 			
(
	sysid_feedetails varchar (50) NOT NULL 
		CONSTRAINT School_Fee_Details_SysID_FeeDetails_PK PRIMARY KEY (sysid_feedetails)
		CONSTRAINT School_Fee_Details_SysID_FeeDetails_CK CHECK (sysid_feedetails LIKE 'SYSFDL%'),	
	sysid_feelevel varchar (50) NOT NULL
		CONSTRAINT School_Fee_Details_SysID_FeeLevel_FK FOREIGN KEY REFERENCES ums.school_fee_level(sysid_feelevel) ON UPDATE NO ACTION,
	sysid_feeparticular varchar (50) NOT NULL
		CONSTRAINT School_Fee_Details_SysID_FeeParticular_FK FOREIGN KEY REFERENCES ums.school_fee_particular(sysid_feeparticular) ON UPDATE NO ACTION,
	
	is_level_increase bit NOT NULL DEFAULT (0),

	is_marked_deleted bit NOT NULL DEFAULT (0),

	amount decimal (12, 2) NOT NULL,

	is_optional bit NOT NULL DEFAULT (0),
	is_office_access bit NOT NULL DEFAULT (0),
	is_entry_level_included bit NOT NULL DEFAULT (0),
	is_graduation_fee bit NOT NULL DEFAULT (0),
	include_first_semester bit NOT NULL DEFAULT (1),
	include_second_semester bit NOT NULL DEFAULT (1),
	include_summer bit NOT NULL DEFAULT (1),
	include_male bit NOT NULL DEFAULT (1),
	include_female bit NOT NULL DEFAULT (1),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT School_Fee_Details_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT School_Fee_Details_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT School_Fee_Details_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the school_fee_details table 
CREATE INDEX School_Fee_Details_SysID_FeeDetails_Index
	ON ums.school_fee_details (sysid_feedetails DESC)
GO
------------------------------------------------------------------

--verifies that the trigger "School_Fee_Details_Trigger_Insert" already exist
IF OBJECT_ID ('ums.School_Fee_Details_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Details_Trigger_Insert
GO

CREATE TRIGGER ums.School_Fee_Details_Trigger_Insert
	ON  ums.school_fee_details
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_feedetails varchar (50) 
	DECLARE @sysid_feelevel varchar (50)
	DECLARE @sysid_feeparticular varchar (50)
	DECLARE @is_level_increase bit
	DECLARE @amount decimal (12, 2)	
	DECLARE @is_optional bit
	DECLARE @is_office_access bit
	DECLARE @is_entry_level_included bit
	DECLARE @is_graduation_fee bit
	DECLARE @include_first_semester bit
	DECLARE @include_second_semester bit
	DECLARE @include_summer bit
	DECLARE @include_male bit
	DECLARE @include_female bit

	DECLARE @created_by varchar (50)	

	DECLARE @optional_string varchar (50)
	DECLARE @office_string varchar (50)
	DECLARE @included_string varchar (50)
	DECLARE @graduation_string varchar (50)
	DECLARE @increase_string varchar (50)
	DECLARE @first_semester_string varchar (50)
	DECLARE @second_semester_string varchar (50)
	DECLARE @summer_string varchar (50)
	DECLARE @male_string varchar (50)
	DECLARE @female_string varchar (50)
	
	SELECT 
		@sysid_feedetails = i.sysid_feedetails,
		@sysid_feelevel = i.sysid_feelevel,
		@sysid_feeparticular = i.sysid_feeparticular,
		@is_level_increase  = i.is_level_increase,
		@amount = i.amount,	
		@is_optional = i.is_optional,
		@is_office_access = i.is_office_access,
		@is_entry_level_included = i.is_entry_level_included,
		@is_graduation_fee = i.is_graduation_fee,
		@include_first_semester = i.include_first_semester,
		@include_second_semester = i.include_second_semester,
		@include_summer = i.include_summer,
		@include_male = i.include_male,
		@include_female = i.include_female,
		@created_by = i.created_by
	FROM INSERTED AS i	

	IF @is_level_increase = 1
	BEGIN
		SET @increase_string = 'YES'
	END
	ELSE
	BEGIN
		SET @increase_string = 'NO'
	END

	IF @is_optional = 1
	BEGIN
		SET @optional_string = 'YES'
	END
	ELSE
	BEGIN
		SET @optional_string = 'NO'
	END

	IF @is_office_access = 1
	BEGIN
		SET @office_string = 'YES'
	END
	ELSE
	BEGIN
		SET @office_string = 'NO'
	END

	IF @is_entry_level_included = 1
	BEGIN
		SET @included_string = 'YES'
	END
	ELSE
	BEGIN
		SET @included_string = 'NO'
	END

	IF @is_graduation_fee = 1
	BEGIN
		SET @graduation_string = 'YES'
	END
	ELSE
	BEGIN
		SET @graduation_string = 'NO'
	END

	IF @include_first_semester = 1
	BEGIN
		SET @first_semester_string = 'YES'
	END
	ELSE
	BEGIN
		SET @first_semester_string = 'NO'
	END

	IF @include_second_semester = 1
	BEGIN
		SET @second_semester_string = 'YES'
	END
	ELSE
	BEGIN
		SET @second_semester_string = 'NO'
	END

	IF @include_summer = 1
	BEGIN
		SET @summer_string = 'YES'
	END
	ELSE
	BEGIN
		SET @summer_string = 'NO'
	END

	IF @include_male = 1
	BEGIN
		SET @male_string = 'YES'
	END
	ELSE
	BEGIN
		SET @male_string = 'NO'
	END

	IF @include_female = 1
	BEGIN
		SET @female_string = 'YES'
	END
	ELSE
	BEGIN
		SET @female_string = 'NO'
	END

	SET @transaction_done = 'CREATED a new school fee details ' + 
							'[Fee Details ID: ' + ISNULL(@sysid_feedetails, '') +
							'][School Year And Level: ' + ISNULL((SELECT 
																		'(' + sy.year_description + ') ' + yli.year_level_description + ' - ' + cg.group_description
																	FROM 
																		ums.school_year AS sy
																	INNER JOIN ums.school_fee_information AS sfi ON sfi.year_id = sy.year_id
																	INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
																	INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
																	INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
																	WHERE
																		sfl.sysid_feelevel = @sysid_feelevel), '') +
							'][Fee Particular: ' + ISNULL((SELECT
																sfp.particular_description + ' (' + sfc.category_description + ')'
															FROM
																ums.school_fee_category AS sfc
															INNER JOIN ums.school_fee_particular AS sfp ON sfp.fee_category_id = sfc.fee_category_id
															WHERE
																sfp.sysid_feeparticular = @sysid_feeparticular), '') +
							'][Is Level Increase: ' + ISNULL(@increase_string, '') +
							'][Amount: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') +
							'][Is Optional: ' + ISNULL(@optional_string, '') +
							'][Is Accessible to Office Secretaries: ' + ISNULL(@office_string, '') +
							'][Is Included in All Entry Levels: ' + ISNULL(@included_string, '') +
							'][Is A Graduation Fee: ' + ISNULL(@graduation_string, '') +
							'][Include in First Semester: ' + ISNULL(@first_semester_string, '') +
							'][Include in Second Semester: ' + ISNULL(@second_semester_string, '') +
							'][Include in Summer: ' + ISNULL(@summer_string, '') +
							'][Include in Male: ' + ISNULL(@male_string, '') +
							'][Include in Female: ' + ISNULL(@female_string, '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
-----------------------------------------------------------------

--verifies that the trigger "School_Fee_Details_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.School_Fee_Details_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Details_Trigger_Instead_Update
GO

CREATE TRIGGER ums.School_Fee_Details_Trigger_Instead_Update
	ON  ums.school_fee_details
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_feedetails varchar (50) 
	DECLARE @sysid_feelevel varchar (50)
	DECLARE @sysid_feeparticular varchar (50)
	DECLARE @is_level_increase bit
	DECLARE @is_marked_deleted bit
	DECLARE @amount decimal (12, 2)	
	DECLARE @is_optional bit
	DECLARE @is_office_access bit
	DECLARE @is_entry_level_included bit
	DECLARE @is_graduation_fee bit
	DECLARE @include_first_semester bit
	DECLARE @include_second_semester bit
	DECLARE @include_summer bit
	DECLARE @include_male bit
	DECLARE @include_female bit

	DECLARE @edited_by varchar (50)

	DECLARE @sysid_feeparticular_b varchar (50)
	DECLARE @is_level_increase_b bit
	DECLARE @amount_b decimal (12, 2)	
	DECLARE @is_optional_b bit
	DECLARE @is_office_access_b bit
	DECLARE @is_entry_level_included_b bit
	DECLARE @is_graduation_fee_b bit
	DECLARE @include_first_semester_b bit
	DECLARE @include_second_semester_b bit
	DECLARE @include_summer_b bit
	DECLARE @include_male_b bit
	DECLARE @include_female_b bit
	
	DECLARE @optional_string varchar (50)
	DECLARE @office_string varchar (50)
	DECLARE @included_string varchar (50)
	DECLARE @graduation_string varchar (50)
	DECLARE @increase_string varchar (50)
	DECLARE @first_semester_string varchar (50)
	DECLARE @second_semester_string varchar (50)
	DECLARE @summer_string varchar (50)
	DECLARE @male_string varchar (50)
	DECLARE @female_string varchar (50)

	DECLARE @optional_string_b varchar (50)
	DECLARE @office_string_b varchar (50)
	DECLARE @included_string_b varchar (50)
	DECLARE @graduation_string_b varchar (50)
	DECLARE @increase_string_b varchar (50)
	DECLARE @first_semester_string_b varchar (50)
	DECLARE @second_semester_string_b varchar (50)
	DECLARE @summer_string_b varchar (50)
	DECLARE @male_string_b varchar (50)
	DECLARE @female_string_b varchar (50)

	DECLARE @has_update bit

	DECLARE school_fee_details_update_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
		FOR SELECT i.sysid_feedetails, i.sysid_feelevel, i.sysid_feeparticular, i.is_level_increase, 
				i.is_marked_deleted, i.amount, i.is_optional, i.is_office_access, i.is_entry_level_included, i.is_graduation_fee,
				i.include_first_semester, i.include_second_semester, i.include_summer, i.include_male, i.include_female, i.edited_by
				FROM INSERTED AS i

	OPEN school_fee_details_update_cursor

	FETCH NEXT FROM school_fee_details_update_cursor
		INTO @sysid_feedetails, @sysid_feelevel, @sysid_feeparticular, @is_level_increase, 
				@is_marked_deleted, @amount, @is_optional, @is_office_access, @is_entry_level_included, @is_graduation_fee,
				@include_first_semester, @include_second_semester, @include_summer, @include_male, @include_female, @edited_by

	WHILE @@FETCH_STATUS = 0
	BEGIN

		IF @is_marked_deleted = 0
		BEGIN

			SELECT 
				@sysid_feeparticular_b = sfd.sysid_feeparticular,
				@is_level_increase_b = sfd.is_level_increase,
				@amount_b = sfd.amount,	
				@is_optional_b = sfd.is_optional,
				@is_office_access_b = sfd.is_office_access,
				@is_entry_level_included_b = sfd.is_entry_level_included,
				@is_graduation_fee_b = sfd.is_graduation_fee,
				@include_first_semester_b = sfd.include_first_semester,
				@include_second_semester_b = sfd.include_second_semester,
				@include_summer_b = sfd.include_summer,
				@include_male_b = sfd.include_male,
				@include_female_b = sfd.include_female
			FROM 
				ums.school_fee_details AS sfd
			WHERE 
				sfd.sysid_feedetails = @sysid_feedetails

			SET @transaction_done = ''
			SET @has_update = 0

			IF NOT ISNULL(@sysid_feeparticular, '') = ISNULL(@sysid_feeparticular_b, '')
			BEGIN
				SET @transaction_done = @transaction_done + '[Fee Particular Before: ' + ISNULL((SELECT
																	sfp.particular_description + ' (' + sfc.category_description + ')'
																FROM
																	ums.school_fee_category AS sfc
																INNER JOIN ums.school_fee_particular AS sfp ON sfp.fee_category_id = sfc.fee_category_id
																WHERE
																	sfp.sysid_feeparticular = @sysid_feeparticular_b), '') + ']' +
															'[Fee Particular After: ' + ISNULL((SELECT
																	sfp.particular_description + ' (' + sfc.category_description + ')'
																FROM
																	ums.school_fee_category AS sfc
																INNER JOIN ums.school_fee_particular AS sfp ON sfp.fee_category_id = sfc.fee_category_id
																WHERE
																	sfp.sysid_feeparticular = @sysid_feeparticular), '') + ']'
				SET @has_update = 1
			END
			ELSE
			BEGIN
				SET @transaction_done = @transaction_done + '[Fee Particular: ' + ISNULL((SELECT
																	sfp.particular_description + ' (' + sfc.category_description + ')'
																FROM
																	ums.school_fee_category AS sfc
																INNER JOIN ums.school_fee_particular AS sfp ON sfp.fee_category_id = sfc.fee_category_id
																WHERE
																	sfp.sysid_feeparticular = @sysid_feeparticular), '') + ']'
			END

			IF NOT @is_level_increase = @is_level_increase_b
			BEGIN

				IF @is_level_increase = 1
				BEGIN
					SET @increase_string = 'YES'
				END
				ELSE
				BEGIN
					SET @increase_string = 'NO'
				END

				IF @is_level_increase_b = 1
				BEGIN
					SET @increase_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @increase_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Is Level Increase Before: ' + ISNULL(@increase_string_b, '') + ']' +
															'[Is Level Increase After: ' + ISNULL(@increase_string, '') +  ']'
				SET @has_update = 1
			END	

			IF NOT ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '') = ISNULL(CONVERT(varchar, CONVERT(money, @amount_b), 1), '')
			BEGIN

				SET @transaction_done = @transaction_done + '[Amount Before: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount_b), 1), '0.00') + ']' +
															'[Amount After: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') + ']'
				SET @has_update = 1
			END

			IF NOT @is_optional = @is_optional_b
			BEGIN

				IF @is_optional = 1
				BEGIN
					SET @optional_string = 'YES'
				END
				ELSE
				BEGIN
					SET @optional_string = 'NO'
				END

				IF @is_optional_b = 1
				BEGIN
					SET @optional_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @optional_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Is Optional Before: ' + ISNULL(@optional_string_b, '') + ']' +
															'[Is Optional After: ' + ISNULL(@optional_string, '') +  ']'
				SET @has_update = 1
			END	

			IF NOT @is_office_access = @is_office_access_b
			BEGIN

				IF @is_office_access = 1
				BEGIN
					SET @office_string = 'YES'
				END
				ELSE
				BEGIN
					SET @office_string = 'NO'
				END

				IF @is_office_access_b = 1
				BEGIN
					SET @office_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @office_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Is Accessible to Office Secretaries Before: ' + ISNULL(@office_string_b, '') + ']' +
															'[Is Accessible to Office Secretaries After: ' + ISNULL(@office_string, '') +  ']'
				SET @has_update = 1
			END	

			IF NOT @is_entry_level_included = @is_entry_level_included_b
			BEGIN

				IF @is_entry_level_included = 1
				BEGIN
					SET @included_string = 'YES'
				END
				ELSE
				BEGIN
					SET @included_string = 'NO'
				END

				IF @is_entry_level_included_b = 1
				BEGIN
					SET @included_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @included_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Is Included in All Entry Levels Before: ' + ISNULL(@included_string_b, '') + ']' +
															'[Is Included in All Entry Levels After: ' + ISNULL(@included_string, '') +  ']'
				SET @has_update = 1
			END	

			IF NOT @is_graduation_fee = @is_graduation_fee_b
			BEGIN

				IF @is_graduation_fee = 1
				BEGIN
					SET @graduation_string = 'YES'
				END
				ELSE
				BEGIN
					SET @graduation_string = 'NO'
				END

				IF @is_graduation_fee_b = 1
				BEGIN
					SET @graduation_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @graduation_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Is A Graduation Fee Before: ' + ISNULL(@graduation_string_b, '') + ']' +
															'[Is A Graduation Fee After: ' + ISNULL(@graduation_string, '') + ']'
				SET @has_update = 1
			END	

			IF NOT @include_first_semester = @include_first_semester_b
			BEGIN

				IF @include_first_semester = 1
				BEGIN
					SET @first_semester_string = 'YES'
				END
				ELSE
				BEGIN
					SET @first_semester_string = 'NO'
				END

				IF @include_first_semester_b = 1
				BEGIN
					SET @first_semester_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @first_semester_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Include in First Semester Before: ' + ISNULL(@first_semester_string_b, '') + ']' +
															'[Include in First Semester After: ' + ISNULL(@first_semester_string, '') + ']'
				SET @has_update = 1
			END	

			IF NOT @include_second_semester = @include_second_semester_b
			BEGIN

				IF @include_second_semester = 1
				BEGIN
					SET @second_semester_string = 'YES'
				END
				ELSE
				BEGIN
					SET @second_semester_string = 'NO'
				END

				IF @include_second_semester_b = 1
				BEGIN
					SET @second_semester_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @second_semester_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Include in Second Semester Before: ' + ISNULL(@second_semester_string_b, '') + ']' +
															'[Include in Second Semester After: ' + ISNULL(@second_semester_string, '') + ']'
				SET @has_update = 1
			END	

			IF NOT @include_summer = @include_summer_b
			BEGIN

				IF @include_summer = 1
				BEGIN
					SET @summer_string = 'YES'
				END
				ELSE
				BEGIN
					SET @summer_string = 'NO'
				END

				IF @include_summer_b = 1
				BEGIN
					SET @summer_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @summer_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Include in Summer Before: ' + ISNULL(@summer_string_b, '') + ']' +
															'[Include in Summer After: ' + ISNULL(@summer_string, '') + ']'
				SET @has_update = 1
			END	

			IF NOT @include_male = @include_male_b
			BEGIN

				IF @include_male = 1
				BEGIN
					SET @male_string = 'YES'
				END
				ELSE
				BEGIN
					SET @male_string = 'NO'
				END

				IF @include_male_b = 1
				BEGIN
					SET @male_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @male_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Include in Male Before: ' + ISNULL(@male_string_b, '') + ']' +
															'[Include in Male After: ' + ISNULL(@male_string, '') + ']'
				SET @has_update = 1
			END	

			IF NOT @include_female = @include_female_b
			BEGIN

				IF @include_female = 1
				BEGIN
					SET @female_string = 'YES'
				END
				ELSE
				BEGIN
					SET @female_string = 'NO'
				END

				IF @include_female_b = 1
				BEGIN
					SET @female_string_b = 'YES'
				END
				ELSE
				BEGIN
					SET @female_string_b = 'NO'
				END

				SET @transaction_done = @transaction_done + '[Include in Female Before: ' + ISNULL(@female_string_b, '') + ']' +
															'[Include in Female After: ' + ISNULL(@female_string, '') + ']'
				SET @has_update = 1
			END	

			IF @has_update = 1
			BEGIN

				UPDATE ums.school_fee_details SET
					sysid_feeparticular = @sysid_feeparticular,
					is_level_increase = @is_level_increase,
					amount = @amount,	
					is_optional = @is_optional,
					is_office_access = @is_office_access,
					is_entry_level_included = @is_entry_level_included,
					is_graduation_fee = @is_graduation_fee,
					include_first_semester = @include_first_semester,
					include_second_semester = @include_second_semester,
					include_summer = @include_summer,
					include_male = @include_male,
					include_female = @include_female,

					edited_on = GETDATE(),
					edited_by = @edited_by
				WHERE
					sysid_feedetails = @sysid_feedetails

				SET @transaction_done = 'UPDATED a school fee details ' + 
										'[Fee Details ID: ' + ISNULL(@sysid_feedetails, '') +
										'][School Year And Level: ' + ISNULL((SELECT 
																					'(' + sy.year_description + ') ' + yli.year_level_description + ' - ' + cg.group_description
																				FROM 
																					ums.school_year AS sy
																				INNER JOIN ums.school_fee_information AS sfi ON sfi.year_id = sy.year_id
																				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
																				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
																				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
																				WHERE
																					sfl.sysid_feelevel = @sysid_feelevel), '') +
										']' + @transaction_done

				IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
				BEGIN
					SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @edited_by
				END
						
				EXECUTE ums.InsertTransactionLog @edited_by, @network_information, @transaction_done	

			END
			ELSE IF NOT @edited_by IS NULL
			BEGIN

				--used for the delete trigger
				UPDATE ums.school_fee_details SET
					edited_on = GETDATE(),
					edited_by = @edited_by
				WHERE
					sysid_feedetails = @sysid_feedetails

			END	

		END

		FETCH NEXT FROM school_fee_details_update_cursor
			INTO @sysid_feedetails, @sysid_feelevel, @sysid_feeparticular, @is_level_increase, 
					@is_marked_deleted, @amount, @is_optional, @is_office_access, @is_entry_level_included, @is_graduation_fee,
					@include_first_semester, @include_second_semester, @include_summer, @include_male, @include_female, @edited_by

	END

	CLOSE school_fee_details_update_cursor
	DEALLOCATE school_fee_details_update_cursor

GO
-----------------------------------------------------------------

--verifies that the trigger "School_Fee_Details_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.School_Fee_Details_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.School_Fee_Details_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.School_Fee_Details_Trigger_Instead_Delete
	ON  ums.school_fee_details
	INSTEAD OF DELETE 
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_feedetails varchar (50) 
	DECLARE @sysid_feelevel varchar (50)
	DECLARE @sysid_feeparticular varchar (50)
	DECLARE @is_level_increase bit
	DECLARE @is_marked_deleted bit
	DECLARE @amount decimal (12, 2)	
	DECLARE @is_optional bit
	DECLARE @is_office_access bit
	DECLARE @is_entry_level_included bit
	DECLARE @is_graduation_fee bit
	DECLARE @include_first_semester bit
	DECLARE @include_second_semester bit
	DECLARE @include_summer bit
	DECLARE @include_male bit
	DECLARE @include_female bit

	DECLARE @deleted_by varchar (50)

	DECLARE @optional_string varchar (50)
	DECLARE @office_string varchar (50)
	DECLARE @included_string varchar (50)
	DECLARE @graduation_string varchar (50)
	DECLARE @increase_string varchar (50)
	DECLARE @first_semester_string varchar (50)
	DECLARE @second_semester_string varchar (50)
	DECLARE @summer_string varchar (50)
	DECLARE @male_string varchar (50)
	DECLARE @female_string varchar (50)

	DECLARE school_fee_details_delete_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
		FOR SELECT d.sysid_feedetails, d.sysid_feelevel, d.sysid_feeparticular, d.is_level_increase, 
				d.is_marked_deleted, d.amount, d.is_optional, d.is_office_access, d.is_entry_level_included, d.is_graduation_fee,
				d.include_first_semester, d.include_second_semester, d.include_summer, d.include_male, d.include_female, d.edited_by
				FROM DELETED AS d

	OPEN school_fee_details_delete_cursor

	FETCH NEXT FROM school_fee_details_delete_cursor
		INTO @sysid_feedetails, @sysid_feelevel, @sysid_feeparticular, @is_level_increase, 
			@is_marked_deleted, @amount, @is_optional, @is_office_access, @is_entry_level_included, @is_graduation_fee,
				@include_first_semester, @include_second_semester, @include_summer, @include_male, @include_female, @deleted_by

	WHILE @@FETCH_STATUS = 0
	BEGIN

		IF @is_marked_deleted = 0
		BEGIN

			UPDATE ums.student_optional_fee SET edited_by = @deleted_by WHERE sysid_feedetails = @sysid_feedetails
			DELETE FROM ums.student_optional_fee WHERE sysid_feedetails = @sysid_feedetails

			UPDATE ums.school_fee_details SET is_marked_deleted = 1, edited_by = @deleted_by WHERE sysid_feedetails = @sysid_feedetails

			IF @is_level_increase = 1
			BEGIN
				SET @increase_string = 'YES'
			END
			ELSE
			BEGIN
				SET @increase_string = 'NO'
			END

			IF @is_optional = 1
			BEGIN
				SET @optional_string = 'YES'
			END
			ELSE
			BEGIN
				SET @optional_string = 'NO'
			END

			IF @is_office_access = 1
			BEGIN
				SET @office_string = 'YES'
			END
			ELSE
			BEGIN
				SET @office_string = 'NO'
			END

			IF @is_entry_level_included = 1
			BEGIN
				SET @included_string = 'YES'
			END
			ELSE
			BEGIN
				SET @included_string = 'NO'
			END

			IF @is_graduation_fee = 1
			BEGIN
				SET @graduation_string = 'YES'
			END
			ELSE
			BEGIN
				SET @graduation_string = 'NO'
			END

			IF @include_first_semester = 1
			BEGIN
				SET @first_semester_string = 'YES'
			END
			ELSE
			BEGIN
				SET @first_semester_string = 'NO'
			END

			IF @include_second_semester = 1
			BEGIN
				SET @second_semester_string = 'YES'
			END
			ELSE
			BEGIN
				SET @second_semester_string = 'NO'
			END

			IF @include_summer = 1
			BEGIN
				SET @summer_string = 'YES'
			END
			ELSE
			BEGIN
				SET @summer_string = 'NO'
			END

			IF @include_male = 1
			BEGIN
				SET @male_string = 'YES'
			END
			ELSE
			BEGIN
				SET @male_string = 'NO'
			END

			IF @include_female = 1
			BEGIN
				SET @female_string = 'YES'
			END
			ELSE
			BEGIN
				SET @female_string = 'NO'
			END

			SET @transaction_done = 'MARK AS DELETED a school fee details ' + 
									'[Fee Details ID: ' + ISNULL(@sysid_feedetails, '') +
									'][School Year And Level: ' + ISNULL((SELECT 
																				'(' + sy.year_description + ') ' + yli.year_level_description + ' - ' + cg.group_description
																			FROM 
																				ums.school_year AS sy
																			INNER JOIN ums.school_fee_information AS sfi ON sfi.year_id = sy.year_id
																			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
																			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
																			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
																			WHERE
																				sfl.sysid_feelevel = @sysid_feelevel), '') +	
									'][Fee Particular: ' + ISNULL((SELECT
																		sfp.particular_description + ' (' + sfc.category_description + ')'
																	FROM
																		ums.school_fee_category AS sfc
																	INNER JOIN ums.school_fee_particular AS sfp ON sfp.fee_category_id = sfc.fee_category_id
																	WHERE
																		sfp.sysid_feeparticular = @sysid_feeparticular), '') +
									'][Is Level Increase: ' + ISNULL(@increase_string, '') +
									'][Amount: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') +
									'][Is Optional: ' + ISNULL(@optional_string, '') +
									'][Is Accessible to Office Secretaries: ' + ISNULL(@office_string, '') +
									'][Is Included in All Entry Levels: ' + ISNULL(@included_string, '') +
									'][Is A Graduation Fee: ' + ISNULL(@graduation_string, '') +
									'][Include in First Semester: ' + ISNULL(@first_semester_string, '') +
									'][Include in Second Semester: ' + ISNULL(@second_semester_string, '') +
									'][Include in Summer: ' + ISNULL(@summer_string, '') +
									'][Include in Male: ' + ISNULL(@male_string, '') +
									'][Include in Female: ' + ISNULL(@female_string, '') +
									']'


			IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
			BEGIN
				SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @deleted_by
			END
					
			EXECUTE ums.InsertTransactionLog @deleted_by, @network_information, @transaction_done	

		END

		FETCH NEXT FROM school_fee_details_delete_cursor
			INTO @sysid_feedetails, @sysid_feelevel, @sysid_feeparticular, @is_level_increase, 
				@is_marked_deleted, @amount, @is_optional, @is_office_access, @is_entry_level_included, @is_graduation_fee,
					@include_first_semester, @include_second_semester, @include_summer, @include_male, @include_female, @deleted_by

	END

	CLOSE school_fee_details_delete_cursor
	DEALLOCATE school_fee_details_delete_cursor


GO
-----------------------------------------------------------------

-- verifies if the procedure "InsertSchoolFeeDetails" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertSchoolFeeDetails')
   DROP PROCEDURE ums.InsertSchoolFeeDetails
GO

CREATE PROCEDURE ums.InsertSchoolFeeDetails

	@sysid_feedetails varchar (50) = '',
	@sysid_feelevel varchar (50) = '',
	@sysid_feeparticular varchar (50) = '',
	@is_level_increase bit = 0,
	@amount decimal (12, 2) = 0,
	@is_optional bit = 0,
	@is_office_access bit = 0,
	@is_entry_level_included bit = 0,
	@is_graduation_fee bit = 0,
	@include_first_semester bit = 0,
	@include_second_semester bit = 0,
	@include_summer bit = 0,
	@include_male bit = 0,
	@include_female bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND 
			(ums.IsExistsLevelParticularSchoolFeeDet(@sysid_feelevel, @sysid_feeparticular) = 0) AND
			(ums.IsMarkedDeletedSchoolFeeParticular(@sysid_feeparticular) = 0) AND
			(ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
															sfi.year_id
														FROM 
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														WHERE 
															sfl.sysid_feelevel = @sysid_feelevel AND
															(NOT sfi.year_id IS NULL AND NOT sfi.year_id = ''))) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.school_fee_details
		(
			sysid_feedetails,
			sysid_feelevel,
			sysid_feeparticular,
			is_level_increase,
			amount,
			is_optional,
			is_office_access,
			is_entry_level_included,
			is_graduation_fee,
			include_first_semester,
			include_second_semester,
			include_summer,
			include_male,
			include_female,

			created_by
		)
		VALUES
		(
			@sysid_feedetails,
			@sysid_feelevel,
			@sysid_feeparticular,
			@is_level_increase,
			@amount,
			@is_optional,
			@is_office_access,
			@is_entry_level_included,
			@is_graduation_fee,
			@include_first_semester,
			@include_second_semester,
			@include_summer,
			@include_male,
			@include_female,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new school fee details', 'School Fee Details'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertSchoolFeeDetails TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateSchoolFeeDetails" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateSchoolFeeDetails')
   DROP PROCEDURE ums.UpdateSchoolFeeDetails
GO

CREATE PROCEDURE ums.UpdateSchoolFeeDetails

	@sysid_feedetails varchar (50) = '',
	@sysid_feeparticular varchar (50) = '',
	@is_level_increase bit = 0,
	@amount decimal (12, 2) = 0,
	@is_optional bit = 0,
	@is_office_access bit = 0,
	@is_entry_level_included bit = 0,
	@is_graduation_fee bit = 0,
	@include_first_semester bit = 0,
	@include_second_semester bit = 0,
	@include_summer bit = 0,
	@include_male bit = 0,
	@include_female bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND 
			(ums.IsExistsLevelParticularSchoolFeeDet((SELECT
															sysid_feelevel
														FROM 
															ums.school_fee_details
														WHERE
															sysid_feedetails = @sysid_feedetails), @sysid_feeparticular) = 1) AND			
			(ums.IsMarkedDeletedSchoolFeeParticular(@sysid_feeparticular) = 0) AND
			(ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
															sfi.year_id
														FROM 
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feelevel = sfl.sysid_feelevel
														WHERE 
															sfd.sysid_feedetails = @sysid_feedetails AND
															(NOT sfi.year_id IS NULL AND NOT sfi.year_id = ''))) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.school_fee_details SET
			sysid_feeparticular = @sysid_feeparticular,
			is_level_increase = @is_level_increase,
			amount = @amount,			
			is_optional = @is_optional,
			is_office_access = @is_office_access,
			is_entry_level_included = @is_entry_level_included,
			is_graduation_fee = @is_graduation_fee,
			include_first_semester = @include_first_semester,
			include_second_semester = @include_second_semester,
			include_summer = @include_summer,
			include_male = @include_male,
			include_female = @include_female,

			edited_by = @edited_by
		WHERE
			sysid_feedetails = @sysid_feedetails	
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Updated a school fee details', 'School Fee Details'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateSchoolFeeDetails TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteSchoolFeeDetails" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteSchoolFeeDetails')
   DROP PROCEDURE ums.DeleteSchoolFeeDetails
GO

CREATE PROCEDURE ums.DeleteSchoolFeeDetails

	@sysid_feedetails varchar (50) = '',

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND 
			(ums.IsRecordLockByYearSemesterIDNoAdvance((SELECT 
															sfi.year_id
														FROM 
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feelevel = sfl.sysid_feelevel
														WHERE 
															sfd.sysid_feedetails = @sysid_feedetails AND
															(NOT sfi.year_id IS NULL AND NOT sfi.year_id = ''))) = 0)
	BEGIN

		IF EXISTS (SELECT sysid_feedetails FROM ums.school_fee_details WHERE sysid_feedetails = @sysid_feedetails)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.school_fee_details SET
				edited_by = @deleted_by
			WHERE
				sysid_feedetails = @sysid_feedetails

			DELETE FROM ums.school_fee_details WHERE sysid_feedetails = @sysid_feedetails	

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Deleted a school fee details', 'School Fee Details'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteSchoolFeeDetails TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectByDateStartEndSchoolFeeDetails" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectByDateStartEndSchoolFeeDetails')
   DROP PROCEDURE ums.SelectByDateStartEndSchoolFeeDetails
GO

CREATE PROCEDURE ums.SelectByDateStartEndSchoolFeeDetails

	@date_start datetime,
	@date_end datetime,

	@system_user_id varchar (50) = ''
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT
			sfd.sysid_feedetails AS sysid_feedetails,
			sfd.sysid_feelevel AS sysid_feelevel,
			sfd.sysid_feeparticular AS sysid_feeparticular,
			sfd.is_level_increase AS is_level_increase,		
			sfd.amount AS amount,
			sfd.is_optional AS is_optional,
			sfd.is_office_access AS is_office_access,
			sfd.is_entry_level_included AS is_entry_level_included,
			sfd.is_graduation_fee AS is_graduation_fee,
			sfd.include_first_semester AS include_first_semester,
			sfd.include_second_semester AS include_second_semester,
			sfd.include_summer AS include_summer,
			sfd.include_male AS include_male,
			sfd.include_female AS include_female,
			sfl.sysid_schoolfee AS sysid_schoolfee,
			sfl.year_level_id AS year_level_id,
			sfi.year_id AS year_id,
			yli.course_group_id AS course_group_id,
			yli.year_level_description AS year_level_description,
			cg.group_description AS group_description,
			sfp.fee_category_id AS fee_category_id,
			sfp.particular_description AS particular_description,
			sfc.category_description AS category_description,
			sfc.category_no AS category_no	
		FROM 
			ums.school_fee_details AS sfd
		INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel		
		INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
		INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
		INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
		INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
		INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
		WHERE
			(NOT sfi.year_id IS NULL AND NOT sfi.year_id = '') AND
			(((@date_start BETWEEN sy.date_start AND sy.date_end) OR (@date_end BETWEEN sy.date_start AND sy.date_end)) OR
			((sy.date_start BETWEEN @date_start AND @date_end) AND (sy.date_end BETWEEN @date_start AND @date_end))) AND
			(sfd.is_marked_deleted = 0)
		ORDER BY
			cg.group_no, yli.year_level_no, sfc.category_no, sfp.particular_description ASC
		
	END		
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee details', 'School Fee Details'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectByDateStartEndSchoolFeeDetails TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountSchoolFeeDetails" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountSchoolFeeDetails')
   DROP PROCEDURE ums.GetCountSchoolFeeDetails
GO

CREATE PROCEDURE ums.GetCountSchoolFeeDetails

	@system_user_id varchar (50) = ''	
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT COUNT(sysid_feedetails) FROM ums.school_fee_details
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee details', 'School Fee Details'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountSchoolFeeDetails TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDSchoolFeeDetails" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDSchoolFeeDetails')
   DROP PROCEDURE ums.IsExistsSysIDSchoolFeeDetails
GO

CREATE PROCEDURE ums.IsExistsSysIDSchoolFeeDetails

	@sysid_feedetails varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsSysIDSchoolFeeDet(@sysid_feedetails)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee details', 'School Fee Details'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDSchoolFeeDetails TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsLevelParticularSchoolFeeDetails" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsLevelParticularSchoolFeeDetails')
   DROP PROCEDURE ums.IsExistsLevelParticularSchoolFeeDetails
GO

CREATE PROCEDURE ums.IsExistsLevelParticularSchoolFeeDetails

	@sysid_feelevel varchar (50) = '',
	@sysid_feeparticular varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) 
	BEGIN

		SELECT ums.IsExistsLevelParticularSchoolFeeDet(@sysid_feelevel, @sysid_feeparticular)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a school fee details', 'School Fee Details'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsLevelParticularSchoolFeeDetails TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDSchoolFeeDet" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDSchoolFeeDet') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDSchoolFeeDet
GO

CREATE FUNCTION ums.IsExistsSysIDSchoolFeeDet
(	
	@sysid_feedetails varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feedetails FROM ums.school_fee_details WHERE sysid_feedetails = @sysid_feedetails)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsLevelParticularSchoolFeeDet" function already exist
IF OBJECT_ID (N'ums.IsExistsLevelParticularSchoolFeeDet') IS NOT NULL
   DROP FUNCTION ums.IsExistsLevelParticularSchoolFeeDet
GO

CREATE FUNCTION ums.IsExistsLevelParticularSchoolFeeDet
(	
	@sysid_feelevel varchar (50) = '',
	@sysid_feeparticular varchar (50) = ''
) 
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_feedetails FROM ums.school_fee_details WHERE sysid_feelevel = @sysid_feelevel AND 
														sysid_feeparticular = @sysid_feeparticular AND
														is_marked_deleted = 0)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

--was moved to SERVER SOLUTIONS [ 8 ] TRIGGERS AND PROCEDURES DEPENDENT TO OTHER TABLES because of students information needing the sysid_person
--which is not known at this point of sql statement

---- verifies if the "GetBySysIDStudentFeeLevelSemesterFeeDetails" function already exist
--IF OBJECT_ID (N'ums.GetBySysIDStudentFeeLevelSemesterFeeDetails') IS NOT NULL
--   DROP FUNCTION ums.GetBySysIDStudentFeeLevelSemesterFeeDetails
--GO
--
--CREATE FUNCTION ums.GetBySysIDStudentFeeLevelSemesterFeeDetails
--(	
--	@sysid_student varchar (50) = '',
--	@sysid_enrolmentlevel varchar (50) = '',
--	@sysid_feelevel varchar (50) = '',
--	@sysid_semester varchar (50) = '',
--	@is_graduate_student bit = 0,
--	@is_international bit = 0,		
--	@is_enrolled bit = 0,
--	@is_marked_deleted bit = 0
--) 
--RETURNS @return_table TABLE (table_id int IDENTITY(1, 1) NOT NULL PRIMARY KEY,
--								sysid_enrolmentlevel varchar (50) NULL,
--								sysid_feedetails varchar (50) NULL,
--								sysid_feeparticular varchar (50) NOT NULL,
--								is_level_increase bit NOT NULL DEFAULT (0),
--								is_added_level_fee bit NOT NULL DEFAULT (0),
--								amount decimal (12, 2) NOT NULL,
--								fee_category_id varchar (50) NOT NULL,
--								category_description varchar (100) NOT NULL,
--								particular_description varchar (100) NOT NULL,								
--								is_office_access bit NOT NULL DEFAULT (0),
--								category_no tinyint NOT NULL,
--								additional_fee_id bigint NULL,
--								optional_fee_id bigint NULL,
--								is_additional_fee bit NOT NULL DEFAULT (0),
--								is_optional_fee bit NOT NULL DEFAULT (0),
--								international_percentage float NULL,
--								remarks varchar (100) NULL)
--AS
--BEGIN
--	
--	DECLARE @student_enrolment_level TABLE (table_id int IDENTITY(1, 1) NOT NULL PRIMARY KEY,
--											sysid_enrolmentlevel varchar (50) NOT NULL, 
--											sysid_feelevel varchar (50) NOT NULL, 
--											is_entry_level bit NOT NULL DEFAULT (0), 
--											enrolment_level_no int NOT NULL, 
--											international_percentage float NULL)
--
--	DECLARE @is_entry_level bit
--	DECLARE @cursor_sysid_enrolmentlevel varchar (50)
--	DECLARE @cursor_sysid_feelevel varchar (50)
--	DECLARE @international_percentage float
--	DECLARE @semester_id tinyint
--	DECLARE @gender_flag tinyint
--
--	-- A - is_enrolled
--	-- B - sysid_enrolmentlevel
--	-- C - is_marked_deleted
--
--	--	A	B	C
--	--	==========
--	--	0	0	0	used to get the charges of a level that is candidate for enrolment
--	--	0	0	1	NOT INCLUDED
--	--	0	1	0	NOT INCLUDED
--	--	0	1	1	NOT INCLUDED
--	--	1	0	0	NOT INCLUDED
--	--	1	0	1	NOT INCLUDED
--	--	1	1	0	used to get the current charges of an enrolled level and previous charges of a deleted level
--	--	1	1	1	used to get the current charges of a deleted level
--
--	IF (@is_enrolled = 0) AND (ISNULL(@sysid_enrolmentlevel, '') = '') AND (@is_marked_deleted = 0)			-- (000)
--	BEGIN		
--
--		--gets the student enrolment levels within a certain course group and with year level no. lesser or equal to the sysid_feelevel parameter
--		INSERT INTO @student_enrolment_level(sysid_enrolmentlevel, sysid_feelevel, is_entry_level, enrolment_level_no, international_percentage)
--			SELECT
--				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
--				sel.sysid_feelevel AS sysid_feelevel,
--				sel.is_entry_level AS is_entry_level,
--				sel.enrolment_level_no AS enrolment_level_no,
--				fs.international_percentage AS international_percentage
--			FROM
--				ums.student_enrolment_level AS sel
--			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--			INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--			WHERE
--				(sec.sysid_student = @sysid_student) AND
--				(sel.is_marked_deleted = 0) AND
--				(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--											yli.year_level_no AS year_level_no
--										FROM
--											ums.year_level_information AS yli
--										INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--										WHERE
--											sfl.sysid_feelevel = @sysid_feelevel)) AND	
--				(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--											cg.course_group_id AS course_group_id
--										FROM
--											ums.course_group AS cg
--										INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--										INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--										WHERE
--											sfl.sysid_feelevel = @sysid_feelevel)) AND
--				(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--											sfl.fee_level_no AS fee_level_no
--										FROM
--											ums.school_fee_level AS sfl
--										WHERE
--											sfl.sysid_feelevel = @sysid_feelevel))
--
--		--gets the international percentage based on the entry level
--		SELECT 
--			@international_percentage = t_sel.international_percentage
--		FROM
--			@student_enrolment_level AS t_sel
--		WHERE
--			(t_sel.enrolment_level_no = (SELECT	--get the entry level
--												MAX(t_sel.enrolment_level_no)
--											FROM
--												@student_enrolment_level AS t_sel
--											WHERE
--												t_sel.is_entry_level = 1))
--
--		INSERT INTO @return_table (sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, 
--										category_description, particular_description, is_office_access, category_no, international_percentage)
--			SELECT 
--				sel.sysid_enrolmentlevel,
--				sfd.sysid_feedetails, 
--				sfd.sysid_feeparticular, 
--				0,
--				0,
--				CASE WHEN 
--						((@is_international = 1) AND
--						(NOT @international_percentage IS NULL) AND
--						(NOT @international_percentage <= 0))
--					THEN
--						(sfd.amount * 
--						(1 + (@international_percentage / 100)))
--					ELSE
--						(sfd.amount)
--					END AS amount,
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfd.is_office_access,
--				sfc.category_no,
--				@international_percentage
--			FROM 
--				ums.school_fee_details AS sfd
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sel.enrolment_level_no = (SELECT	--get the entry level
--												MAX(t_sel.enrolment_level_no)
--											FROM
--												@student_enrolment_level AS t_sel
--											WHERE
--												t_sel.is_entry_level = 1)) AND
--				(sfd.is_optional = 0) AND
--				(sfc.category_no IN (1, 2)) -- TUITION FEES AND MISCELLANEOUS FEES
--			ORDER BY
--				sfc.category_no, sfp.particular_description ASC			
--
--		--iterates through each student enrolment levels already taken by the student
--		DECLARE student_enrolment_level_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
--			FOR SELECT
--					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
--					sel.sysid_feelevel AS sysid_feelevel
--				FROM
--					ums.student_enrolment_level AS sel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--				WHERE
--					(sec.sysid_student = @sysid_student) AND
--					(sel.is_marked_deleted = 0) AND
--					(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--												yli.year_level_no AS year_level_no
--											FROM
--												ums.year_level_information AS yli
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND	
--					(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--												cg.course_group_id AS course_group_id
--											FROM
--												ums.course_group AS cg
--											INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND
--					(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--												sfl.fee_level_no AS fee_level_no
--											FROM
--												ums.school_fee_level AS sfl
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND
--					(sel.enrolment_level_no > (SELECT
--													MAX(sel.enrolment_level_no)
--												FROM
--													ums.student_enrolment_level AS sel
--												INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--												INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--												INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--												INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--												WHERE
--													(sec.sysid_student = @sysid_student) AND
--													(sel.is_marked_deleted = 0) AND
--													(sel.is_entry_level = 1) AND			--does not include the entry level
--													(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--																				yli.year_level_no AS year_level_no
--																			FROM
--																				ums.year_level_information AS yli
--																			INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--																			WHERE
--																				sfl.sysid_feelevel = @sysid_feelevel)) AND	
--													(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--																				cg.course_group_id AS course_group_id
--																			FROM
--																				ums.course_group AS cg
--																			INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--																			INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--																			WHERE
--																				sfl.sysid_feelevel = @sysid_feelevel)) AND
--													(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--																				sfl.fee_level_no AS fee_level_no
--																			FROM
--																				ums.school_fee_level AS sfl
--																			WHERE
--																				sfl.sysid_feelevel = @sysid_feelevel))))
--				ORDER BY
--					sel.enrolment_level_no ASC
--
--		OPEN student_enrolment_level_cursor
--
--		FETCH NEXT FROM student_enrolment_level_cursor
--			INTO @cursor_sysid_enrolmentlevel, @cursor_sysid_feelevel
--
--		WHILE @@FETCH_STATUS = 0
--		BEGIN
--
--			--determine if there is a miscellaneous fee that does not exists in the current entry level or it does not already exists on the 
--			--certain level of the student 
--			INSERT INTO @return_table(sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee,
--									amount, fee_category_id, category_description, particular_description, is_office_access, category_no,
--									international_percentage)
--				SELECT 
--					@cursor_sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular, 
--					0,
--					1,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT @international_percentage IS NULL) AND
--							(NOT @international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (@international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END,
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access, 
--					sfc.category_no,
--					@international_percentage
--				FROM 
--					
--					ums.school_fee_details AS sfd
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sfl.sysid_feelevel = @cursor_sysid_feelevel) AND
--					(sfd.is_optional = 0) AND
--					(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--					(NOT sfd.sysid_feeparticular IN (SELECT
--															sysid_feeparticular
--														FROM
--															@return_table))
--				ORDER BY
--					sfc.category_no, sfp.particular_description ASC
--
--
--			--determine if the miscellaneous fee is a level increase
--			UPDATE @return_table SET
--				sysid_enrolmentlevel = @cursor_sysid_enrolmentlevel,
--				sysid_feedetails = sfd.sysid_feedetails,
--				is_level_increase = sfd.is_level_increase,
--				is_office_access = sfd.is_office_access,
--				amount = CASE WHEN 
--								((@is_international = 1) AND
--								(NOT @international_percentage IS NULL) AND
--								(NOT @international_percentage <= 0))
--							THEN
--								(sfd.amount * 
--								(1 + (@international_percentage / 100)))
--							ELSE
--								(sfd.amount)
--							END		
--			FROM
--				@return_table AS rt
--			INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feeparticular = rt.sysid_feeparticular
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id				
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sfl.sysid_feelevel = @cursor_sysid_feelevel) AND
--				(sfd.is_optional = 0) AND
--				(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--				(sfd.is_level_increase = 1)	--THE FEE IS LEVEL INCREASE
--
--			FETCH NEXT FROM student_enrolment_level_cursor
--				INTO @cursor_sysid_enrolmentlevel, @cursor_sysid_feelevel
--
--		END
--
--		CLOSE student_enrolment_level_cursor
--		DEALLOCATE student_enrolment_level_cursor
--
--
--		--#########FOR THE NEWLY SELECTED LEVEL AND IT DOES NOT BELONG TO THE LEVELS TAKEN BY THE STUDENT (SAVE NOT COMMITTED)########################
--		--determine if there is a miscellaneous fee that does not exists in the current entry level or it does not already exists on the 
--		--certain level of the student 
--		INSERT INTO @return_table(sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee,
--								amount, fee_category_id, category_description, particular_description, is_office_access, category_no,
--								international_percentage)
--			SELECT 
--				@cursor_sysid_enrolmentlevel,
--				sfd.sysid_feedetails, 
--				sfd.sysid_feeparticular, 
--				0,
--				1,
--				CASE WHEN 
--						((@is_international = 1) AND
--						(NOT @international_percentage IS NULL) AND
--						(NOT @international_percentage <= 0))
--					THEN
--						(sfd.amount * 
--						(1 + (@international_percentage / 100)))
--					ELSE
--						(sfd.amount)
--					END,
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfd.is_office_access, 
--				sfc.category_no,
--				@international_percentage
--			FROM 
--				
--				ums.school_fee_details AS sfd
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sfl.sysid_feelevel = @sysid_feelevel) AND
--				(sfd.is_optional = 0) AND
--				(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--				(NOT sfd.sysid_feeparticular IN (SELECT
--														sysid_feeparticular
--													FROM
--														@return_table))
--			ORDER BY
--				sfc.category_no, sfp.particular_description ASC
--
--
--		--determine if the miscellaneous fee is a level increase
--		UPDATE @return_table SET
--			sysid_enrolmentlevel = @cursor_sysid_enrolmentlevel,
--			sysid_feedetails = sfd.sysid_feedetails,
--			is_level_increase = sfd.is_level_increase,
--			is_office_access = sfd.is_office_access,
--			amount = CASE WHEN 
--							((@is_international = 1) AND
--							(NOT @international_percentage IS NULL) AND
--							(NOT @international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (@international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END		
--		FROM
--			@return_table AS rt
--		INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feeparticular = rt.sysid_feeparticular
--		INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--		INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--		INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id				
--		WHERE
--			(sfd.is_marked_deleted = 0) AND
--			(sfl.sysid_feelevel = @sysid_feelevel) AND
--			(sfd.is_optional = 0) AND
--			(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--			(sfd.is_level_increase = 1)	--THE FEE IS LEVEL INCREASE
--
--		--################################################################################################################################################
--
--
--		--if the school has an instance that higher levels have the tendency to eliminate a school fee based on an entry level
--		DELETE FROM @return_table WHERE NOT sysid_feeparticular IN (SELECT 
--																		sfd.sysid_feeparticular
--																	FROM 
--																		
--																		ums.school_fee_details AS sfd
--																	INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--																	INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--																	INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--																	WHERE
--																		(sfd.is_marked_deleted = 0) AND
--																		(sfl.sysid_feelevel = @sysid_feelevel) AND
--																		(sfd.is_optional = 0) AND
--																		(sfc.category_no IN (1, 2))) -- TUITION FEES AND MISCELLANEOUS FEES
--		
--
--		--for the other fees, optional fees, and additional fees
--		INSERT INTO @return_table (sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, 
--										category_description, particular_description, is_office_access, category_no, additional_fee_id,
--										optional_fee_id, is_additional_fee, is_optional_fee, international_percentage)
--			SELECT					------------------------------no need for semestral comparison because school fee details is based yearly
--				NULL,									----------no optional fee and additional fee because this level is not enrolled yet
--				sfd.sysid_feedetails, 
--				sfd.sysid_feeparticular, 
--				0,
--				0,
--				CASE WHEN 
--						((@is_international = 1) AND
--						(NOT @international_percentage IS NULL) AND
--						(NOT @international_percentage <= 0))
--					THEN
--						(sfd.amount * 
--						(1 + (@international_percentage / 100)))
--					ELSE
--						(sfd.amount)
--					END AS amount,
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfd.is_office_access,
--				sfc.category_no,
--				NULL,
--				NULL,
--				0,
--				0,
--				@international_percentage
--			FROM 
--				ums.school_fee_details AS sfd
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sfl.sysid_feelevel = @sysid_feelevel) AND
--				(sfd.is_optional = 0) AND
--				((sfd.is_graduation_fee = 1 AND @is_graduate_student = 1) OR (sfd.is_graduation_fee = 0)) AND
--				(sfc.category_no IN (3)) -- OTHER FEES
--			ORDER BY
--				sfc.category_no, sfp.particular_description ASC
--
--		--determine if the fees are included on a certain semester only
--		SELECT 
--			@semester_id = sri.semester_id
--		FROM
--			ums.semester_information AS sri
--		WHERE
--			sri.sysid_semester = @sysid_semester
--
--		IF (NOT @semester_id IS NULL)
--		BEGIN
--
--			DELETE FROM @return_table WHERE (sysid_feeparticular IN (SELECT 
--																			sfd.sysid_feeparticular
--																		FROM 																		
--																			ums.school_fee_details AS sfd
--																		WHERE
--																			(sfd.is_marked_deleted = 0) AND
--																			(sfd.sysid_feelevel = @sysid_feelevel) AND
--																			(((@semester_id = 1) AND (sfd.include_first_semester = 0)) OR
--																			((@semester_id = 2) AND (sfd.include_second_semester = 0)) OR
--																			((@semester_id = 3) AND (sfd.include_summer = 0))))) AND
--											(is_optional_fee = 0) AND
--											(is_additional_fee = 0)
--
--		END
--
--		--determine if the fees are for female or for male
--		SELECT
--			@gender_flag = crf.reference_flag
--		FROM
--			ums.code_reference AS crf
--		INNER JOIN ums.person_information AS pri ON pri.gender_code = crf.code_reference_id
--		INNER JOIN ums.student_information AS si ON si.sysid_person = pri.sysid_person
--		WHERE
--			(si.sysid_student = @sysid_student)
--
--		IF (NOT @gender_flag IS NULL)
--		BEGIN
--
--			DELETE FROM @return_table WHERE (sysid_feeparticular IN (SELECT 
--																			sfd.sysid_feeparticular
--																		FROM 																			
--																			ums.school_fee_details AS sfd
--																		WHERE
--																			(sfd.is_marked_deleted = 0) AND
--																			(sfd.sysid_feelevel = @sysid_feelevel) AND
--																			(((@gender_flag = 1) AND (sfd.include_male = 0)) OR			--male
--																			((@gender_flag = 2) AND (sfd.include_female = 0))))) AND	--female
--											(is_optional_fee = 0) AND
--											(is_additional_fee = 0)
--		END
--	
--	END
--	ELSE IF (@is_enrolled = 1) AND (NOT ISNULL(@sysid_enrolmentlevel, '') = '') AND (@is_marked_deleted = 0)		--	(110)
--	BEGIN
--
--		SELECT @is_entry_level = CASE WHEN ((SELECT 
--													cg.is_semestral AS is_semestral
--												FROM 
--													ums.student_enrolment_level AS sel
--												INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--												INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--												INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--												INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--												WHERE 
--													(sec.sysid_student = @sysid_student) AND
--													(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--													(sel.sysid_feelevel = @sysid_feelevel)) = 0)	-- no marked deleted to get the previous charges of deleted level
--										THEN
--											(SELECT 
--													sel.is_entry_level 
--												FROM 
--													ums.student_enrolment_level AS sel
--												INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--												INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--												INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--												INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--												WHERE 
--													(sec.sysid_student = @sysid_student) AND
--													(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--													(sel.sysid_feelevel = @sysid_feelevel) AND											
--													(cg.is_semestral = 0))			-- no marked deleted to get the previous charges of deleted level
--										ELSE
--											(SELECT 
--													sel.is_entry_level
--												FROM 
--													ums.student_enrolment_level AS sel
--												INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--												INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--												INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--												INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--												WHERE 
--													(sec.sysid_student = @sysid_student) AND
--													(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--													(sel.sysid_feelevel = @sysid_feelevel) AND
--													(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--													(sel.sysid_semester = @sysid_semester) AND
--													(cg.is_semestral = 1))			-- no marked deleted to get the previous charges of deleted level
--										END
--		
--
--		IF (@is_entry_level IS NULL)
--		BEGIN
--			SET @is_entry_level = 0
--		END
--
--		IF (@is_entry_level = 1)
--		BEGIN
--
--			INSERT INTO @return_table (sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, 
--											category_description, particular_description, is_office_access, category_no, additional_fee_id,
--											optional_fee_id, is_additional_fee, is_optional_fee, international_percentage, remarks)
--				SELECT 
--					sel.sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular,
--					0, 
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT fs.international_percentage IS NULL) AND
--							(NOT fs.international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (fs.international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access,
--					sfc.category_no,
--					NULL,
--					NULL,
--					0,
--					0,
--					fs.international_percentage,
--					NULL
--				FROM 
--					ums.school_fee_details AS sfd
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--				INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					((sfd.is_optional = 1 AND sfd.is_entry_level_included = 1) OR (sfd.is_optional = 0)) AND
--					((sfd.is_graduation_fee = 1 AND @is_graduate_student = 1) OR (sfd.is_graduation_fee = 0)) AND
--					(cg.is_semestral = 0)		-- no marked deleted to get the previous charges of deleted level		
--				UNION ALL
--				SELECT 
--					sel.sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular, 
--					0,
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT fs.international_percentage IS NULL) AND
--							(NOT fs.international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (fs.international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description,  
--					sfd.is_office_access,
--					sfc.category_no,
--					NULL,
--					NULL,
--					0,
--					0,
--					fs.international_percentage,
--					NULL
--				FROM 
--					ums.school_fee_details AS sfd
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--				INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--					(sel.sysid_semester = @sysid_semester) AND
--					((sfd.is_optional = 1 AND sfd.is_entry_level_included = 1) OR (sfd.is_optional = 0)) AND
--					((sfd.is_graduation_fee = 1 AND @is_graduate_student = 1) OR (sfd.is_graduation_fee = 0)) AND
--					(cg.is_semestral = 1)		-- no marked deleted to get the previous charges of deleted level
--				UNION ALL			------------------------------------------------insert the student optional fee
--				SELECT
--					sel.sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular,
--					0, 
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT fs.international_percentage IS NULL) AND
--							(NOT fs.international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (fs.international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access,
--					sfc.category_no,
--					NULL,
--					sof.optional_fee_id,
--					0,
--					1,
--					fs.international_percentage,
--					NULL
--				FROM 
--					ums.student_optional_fee AS sof
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feedetails = sof.sysid_feedetails
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id			
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sof.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--				WHERE
--					(sof.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(cg.is_semestral = 0)		-- no marked deleted to get the previous charges of deleted level
--				UNION ALL
--				SELECT
--					sel.sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular,
--					0, 
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT fs.international_percentage IS NULL) AND
--							(NOT fs.international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (fs.international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access,
--					sfc.category_no,
--					NULL,
--					sof.optional_fee_id,
--					0,
--					1,
--					fs.international_percentage,
--					NULL
--				FROM 
--					ums.student_optional_fee AS sof
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feedetails = sof.sysid_feedetails
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id			
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sof.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--				WHERE
--					(sof.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--					(sel.sysid_semester = @sysid_semester) AND
--					(cg.is_semestral = 1)		-- no marked deleted to get the previous charges of deleted level
--				UNION ALL					---------------------------------------------insert the student additional fee
--				SELECT															
--					sel.sysid_enrolmentlevel,									
--					NULL, 
--					sfp.sysid_feeparticular,
--					0, 
--					0,
--					saf.amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfp.is_office_access,
--					sfc.category_no,
--					saf.additional_fee_id,
--					NULL,
--					1,
--					0,
--					NULL AS international_percentage,
--					saf.remarks
--				FROM
--					ums.student_additional_fee AS saf
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = saf.sysid_feeparticular			
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = saf.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--				WHERE
--					(saf.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(cg.is_semestral = 0)		-- no marked deleted to get the previous charges of deleted level
--				UNION ALL
--				SELECT
--					sel.sysid_enrolmentlevel,
--					NULL, 
--					sfp.sysid_feeparticular,
--					0, 
--					0,
--					saf.amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfp.is_office_access,
--					sfc.category_no,
--					saf.additional_fee_id,
--					NULL,
--					1,
--					0,
--					NULL AS international_percentage,
--					saf.remarks
--				FROM
--					ums.student_additional_fee AS saf
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = saf.sysid_feeparticular			
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = saf.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--				WHERE
--					(saf.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--					(sel.sysid_semester = @sysid_semester) AND
--					(cg.is_semestral = 1)		-- no marked deleted to get the previous charges of deleted level			
--				ORDER BY
--					sfc.category_no, sfp.particular_description ASC				
--
--		END
--		ELSE
--		BEGIN
--
--			--gets the student enrolment levels within a certain course group and with year level no. lesser or equal to the sysid_feelevel parameter
--			INSERT INTO @student_enrolment_level(sysid_enrolmentlevel, sysid_feelevel, is_entry_level, enrolment_level_no, international_percentage)
--				SELECT
--					sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
--					sel.sysid_feelevel AS sysid_feelevel,
--					sel.is_entry_level AS is_entry_level,
--					sel.enrolment_level_no AS enrolment_level_no,
--					fs.international_percentage AS international_percentage
--				FROM
--					ums.student_enrolment_level AS sel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--				INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--				WHERE
--					(sec.sysid_student = @sysid_student) AND
--					(sel.is_marked_deleted = 0) AND			--with is_marked_deleted to get the current level and the current entry level
--					(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--												yli.year_level_no AS year_level_no
--											FROM
--												ums.year_level_information AS yli
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND	
--					(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--												cg.course_group_id AS course_group_id
--											FROM
--												ums.course_group AS cg
--											INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND
--					(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--												sfl.fee_level_no AS fee_level_no
--											FROM
--												ums.school_fee_level AS sfl
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel))
--
--			--gets the international percentage based on the entry level
--			SELECT 
--				@international_percentage = t_sel.international_percentage
--			FROM
--				@student_enrolment_level AS t_sel
--			WHERE
--				(t_sel.enrolment_level_no = (SELECT	--get the entry level
--													MAX(t_sel.enrolment_level_no)
--												FROM
--													@student_enrolment_level AS t_sel
--												WHERE
--													t_sel.is_entry_level = 1))
--
--			INSERT INTO @return_table (sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, 
--											category_description, particular_description, is_office_access, category_no, international_percentage)
--				SELECT 
--					sel.sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular, 
--					0,
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT @international_percentage IS NULL) AND
--							(NOT @international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (@international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount,
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access,
--					sfc.category_no,
--					@international_percentage
--				FROM 
--					ums.school_fee_details AS sfd
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sel.enrolment_level_no = (SELECT	--get the entry level
--													MAX(t_sel.enrolment_level_no)
--												FROM
--													@student_enrolment_level AS t_sel
--												WHERE
--													t_sel.is_entry_level = 1)) AND
--					(sfd.is_optional = 0) AND
--					(sfc.category_no IN (1, 2)) -- TUITION FEES AND MISCELLANEOUS FEES
--				ORDER BY
--					sfc.category_no, sfp.particular_description ASC			
--
--			--iterates through each student enrolment levels already taken by the student
--			--which is greater than the entry level specified previously on this code and 
--			--lesser than the enrolment no based on the enrolment level that is used as
--			--parameter for this function
--			DECLARE student_enrolment_level_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
--				FOR SELECT
--						sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
--						sel.sysid_feelevel AS sysid_feelevel
--					FROM
--						ums.student_enrolment_level AS sel
--					INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--					INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--					INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--					WHERE
--						(sec.sysid_student = @sysid_student) AND
--						(sel.is_marked_deleted = 0) AND				--with is_marked_deleted to get the current level and the current entry level
--						(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--													yli.year_level_no AS year_level_no
--												FROM
--													ums.year_level_information AS yli
--												INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--												WHERE
--													sfl.sysid_feelevel = @sysid_feelevel)) AND	
--						(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--													cg.course_group_id AS course_group_id
--												FROM
--													ums.course_group AS cg
--												INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--												INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--												WHERE
--													sfl.sysid_feelevel = @sysid_feelevel)) AND
--						(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--													sfl.fee_level_no AS fee_level_no
--												FROM
--													ums.school_fee_level AS sfl
--												WHERE
--													sfl.sysid_feelevel = @sysid_feelevel)) AND
--						(sel.enrolment_level_no > (SELECT
--														MAX(sel.enrolment_level_no)
--													FROM
--														ums.student_enrolment_level AS sel
--													INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--													INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--													INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--													INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--													WHERE
--														(sec.sysid_student = @sysid_student) AND
--														(sel.is_marked_deleted = 0) AND
--														(sel.is_entry_level = 1) AND			--does not include the entry level
--														(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--																					yli.year_level_no AS year_level_no
--																				FROM
--																					ums.year_level_information AS yli
--																				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--																				WHERE
--																					sfl.sysid_feelevel = @sysid_feelevel)) AND	
--														(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--																					cg.course_group_id AS course_group_id
--																				FROM
--																					ums.course_group AS cg
--																				INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--																				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--																				WHERE
--																					sfl.sysid_feelevel = @sysid_feelevel)) AND
--														(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--																					sfl.fee_level_no AS fee_level_no
--																				FROM
--																					ums.school_fee_level AS sfl
--																				WHERE
--																					sfl.sysid_feelevel = @sysid_feelevel))))
--					ORDER BY
--						sel.enrolment_level_no ASC
--
--			OPEN student_enrolment_level_cursor
--
--			FETCH NEXT FROM student_enrolment_level_cursor
--				INTO @cursor_sysid_enrolmentlevel, @cursor_sysid_feelevel
--
--			WHILE @@FETCH_STATUS = 0
--			BEGIN
--
--				--determine if there is a miscellaneous fee that does not exists in the current entry level or it does not already exists on the 
--				--certain level of the student 
--				INSERT INTO @return_table(sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee,
--										amount, fee_category_id, category_description, particular_description, is_office_access, category_no,
--										international_percentage)
--					SELECT 
--						@cursor_sysid_enrolmentlevel,
--						sfd.sysid_feedetails, 
--						sfd.sysid_feeparticular, 
--						0,
--						1,
--						CASE WHEN 
--								((@is_international = 1) AND
--								(NOT @international_percentage IS NULL) AND
--								(NOT @international_percentage <= 0))
--							THEN
--								(sfd.amount * 
--								(1 + (@international_percentage / 100)))
--							ELSE
--								(sfd.amount)
--							END,
--						sfp.fee_category_id,
--						sfc.category_description, 
--						sfp.particular_description, 
--						sfd.is_office_access, 
--						sfc.category_no,
--						@international_percentage
--					FROM 
--						
--						ums.school_fee_details AS sfd
--					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--					INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--					INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--					WHERE
--						(sfd.is_marked_deleted = 0) AND
--						(sfl.sysid_feelevel = @cursor_sysid_feelevel) AND
--						(sfd.is_optional = 0) AND
--						(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--						(NOT sfd.sysid_feeparticular IN (SELECT
--																sysid_feeparticular
--															FROM
--																@return_table))
--					ORDER BY
--						sfc.category_no, sfp.particular_description ASC
--
--
--				--determine if the miscellaneous fee is a level increase
--				UPDATE @return_table SET
--					sysid_enrolmentlevel = @cursor_sysid_enrolmentlevel,
--					sysid_feedetails = sfd.sysid_feedetails,
--					is_level_increase = sfd.is_level_increase,
--					is_office_access = sfd.is_office_access,
--					amount = CASE WHEN 
--									((@is_international = 1) AND
--									(NOT @international_percentage IS NULL) AND
--									(NOT @international_percentage <= 0))
--								THEN
--									(sfd.amount * 
--									(1 + (@international_percentage / 100)))
--								ELSE
--									(sfd.amount)
--								END		
--				FROM
--					@return_table AS rt
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feeparticular = rt.sysid_feeparticular
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id				
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sfl.sysid_feelevel = @cursor_sysid_feelevel) AND
--					(sfd.is_optional = 0) AND
--					(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--					(sfd.is_level_increase = 1)	--THE FEE IS LEVEL INCREASE
--
--				
--				FETCH NEXT FROM student_enrolment_level_cursor
--					INTO @cursor_sysid_enrolmentlevel, @cursor_sysid_feelevel
--
--			END
--
--			CLOSE student_enrolment_level_cursor
--			DEALLOCATE student_enrolment_level_cursor	
--
--			IF EXISTS (SELECT sysid_enrolmentlevel FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel AND is_marked_deleted = 1)
--			BEGIN
--
--				--IF THE LEVEL IS DELETED AND THE FUNCTION IS USED TO GET THE PREVIOUS CHARGES
--				--determine if there is a miscellaneous fee that does not exists in the current entry level or it does not already exists on the 
--				--certain level of the student 
--				INSERT INTO @return_table(sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee,
--										amount, fee_category_id, category_description, particular_description, is_office_access, category_no,
--										international_percentage)
--					SELECT 
--						@cursor_sysid_enrolmentlevel,
--						sfd.sysid_feedetails, 
--						sfd.sysid_feeparticular, 
--						0,
--						1,
--						CASE WHEN 
--								((@is_international = 1) AND
--								(NOT @international_percentage IS NULL) AND
--								(NOT @international_percentage <= 0))
--							THEN
--								(sfd.amount * 
--								(1 + (@international_percentage / 100)))
--							ELSE
--								(sfd.amount)
--							END,
--						sfp.fee_category_id,
--						sfc.category_description, 
--						sfp.particular_description, 
--						sfd.is_office_access, 
--						sfc.category_no,
--						@international_percentage
--					FROM 
--						
--						ums.school_fee_details AS sfd
--					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--					INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--					INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--					WHERE
--						(sfd.is_marked_deleted = 0) AND
--						(sfl.sysid_feelevel = @sysid_feelevel) AND
--						(sfd.is_optional = 0) AND
--						(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--						(NOT sfd.sysid_feeparticular IN (SELECT
--																sysid_feeparticular
--															FROM
--																@return_table))
--					ORDER BY
--						sfc.category_no, sfp.particular_description ASC
--
--
--				--determine if the miscellaneous fee is a level increase
--				UPDATE @return_table SET
--					sysid_enrolmentlevel = @cursor_sysid_enrolmentlevel,
--					sysid_feedetails = sfd.sysid_feedetails,
--					is_level_increase = sfd.is_level_increase,
--					is_office_access = sfd.is_office_access,
--					amount = CASE WHEN 
--									((@is_international = 1) AND
--									(NOT @international_percentage IS NULL) AND
--									(NOT @international_percentage <= 0))
--								THEN
--									(sfd.amount * 
--									(1 + (@international_percentage / 100)))
--								ELSE
--									(sfd.amount)
--								END		
--				FROM
--					@return_table AS rt
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feeparticular = rt.sysid_feeparticular
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id				
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sfl.sysid_feelevel = @sysid_feelevel) AND
--					(sfd.is_optional = 0) AND
--					(sfc.category_no IN (1, 2)) AND -- TUITION FEES AND MISCELLANEOUS FEES
--					(sfd.is_level_increase = 1)	--THE FEE IS LEVEL INCREASE
--
--
--			END
--
--			--if the school has an instance that higher levels have the tendency to eliminate a school fee based on an entry level
--			DELETE FROM @return_table WHERE NOT sysid_feeparticular IN (SELECT 
--																			sfd.sysid_feeparticular
--																		FROM 
--																			
--																			ums.school_fee_details AS sfd
--																		INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--																		INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--																		INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--																		WHERE
--																			(sfd.is_marked_deleted = 0) AND
--																			(sfl.sysid_feelevel = @sysid_feelevel) AND
--																			(sfd.is_optional = 0) AND
--																			(sfc.category_no IN (1, 2))) -- TUITION FEES AND MISCELLANEOUS FEES
--
--			--for the other fees, optional fees, and additional fees
--			INSERT INTO @return_table (sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, 
--											category_description, particular_description, is_office_access, category_no, additional_fee_id,
--											optional_fee_id, is_additional_fee, is_optional_fee, international_percentage, remarks)
--				SELECT					------------------------------no need for semestral comparison because school fee details is based yearly
--					NULL,				
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular, 
--					0,
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT @international_percentage IS NULL) AND
--							(NOT @international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (@international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount,
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access,
--					sfc.category_no,
--					NULL,
--					NULL,
--					0,
--					0,
--					@international_percentage,
--					NULL
--				FROM 
--					ums.school_fee_details AS sfd
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sfl.sysid_feelevel = @sysid_feelevel) AND
--					(sfd.is_optional = 0) AND
--					((sfd.is_graduation_fee = 1 AND @is_graduate_student = 1) OR (sfd.is_graduation_fee = 0)) AND
--					(sfc.category_no IN (3)) -- OTHER FEES
--				UNION ALL 			------------------------------------------------insert the student optional fee
--				SELECT
--					sel.sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular,
--					0, 
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT @international_percentage IS NULL) AND
--							(NOT @international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (@international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount,
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access,
--					sfc.category_no,
--					NULL,
--					sof.optional_fee_id,
--					0,
--					1,
--					@international_percentage,
--					NULL
--				FROM 
--					ums.student_optional_fee AS sof
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feedetails = sof.sysid_feedetails
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id			
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sof.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				WHERE
--					(sof.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(cg.is_semestral = 0)			-- no marked deleted to get the previous charges of deleted level
--				UNION ALL
--				SELECT
--					sel.sysid_enrolmentlevel,
--					sfd.sysid_feedetails, 
--					sfd.sysid_feeparticular,
--					0, 
--					0,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT @international_percentage IS NULL) AND
--							(NOT @international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (@international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END AS amount,
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfd.is_office_access,
--					sfc.category_no,
--					NULL,
--					sof.optional_fee_id,
--					0,
--					1,
--					@international_percentage,
--					NULL
--				FROM 
--					ums.student_optional_fee AS sof
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feedetails = sof.sysid_feedetails
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id			
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sof.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				WHERE
--					(sof.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--					(sel.sysid_semester = @sysid_semester) AND
--					(cg.is_semestral = 1)			-- no marked deleted to get the previous charges of deleted level
--				UNION ALL					---------------------------------------------insert the student additional fee
--				SELECT															
--					sel.sysid_enrolmentlevel,									
--					NULL, 
--					sfp.sysid_feeparticular,
--					0, 
--					0,
--					saf.amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfp.is_office_access,
--					sfc.category_no,
--					saf.additional_fee_id,
--					NULL,
--					1,
--					0,
--					NULL AS international_percentage,
--					saf.remarks
--				FROM
--					ums.student_additional_fee AS saf
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = saf.sysid_feeparticular			
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = saf.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--				WHERE
--					(saf.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(cg.is_semestral = 0)				-- no marked deleted to get the previous charges of deleted level
--				UNION ALL
--				SELECT
--					sel.sysid_enrolmentlevel,
--					NULL, 
--					sfp.sysid_feeparticular,
--					0, 
--					0,
--					saf.amount, 
--					sfp.fee_category_id,
--					sfc.category_description, 
--					sfp.particular_description, 
--					sfp.is_office_access,
--					sfc.category_no,
--					saf.additional_fee_id,
--					NULL,
--					1,
--					0,
--					NULL AS international_percentage,
--					saf.remarks
--				FROM
--					ums.student_additional_fee AS saf
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = saf.sysid_feeparticular			
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id	
--				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = saf.sysid_enrolmentlevel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel	
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--				WHERE
--					(saf.is_for_withdrawn_charge = (SELECT is_marked_deleted FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel)) AND
--					(sec.sysid_student = @sysid_student) AND
--					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--					(sel.sysid_feelevel = @sysid_feelevel) AND
--					(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--					(sel.sysid_semester = @sysid_semester) AND
--					(cg.is_semestral = 1)			-- no marked deleted to get the previous charges of deleted level
--				ORDER BY
--					sfc.category_no, sfp.particular_description ASC
--
--				--determine if the optional fee is a level increase.
--				--optional fees are added by the user manually that is why it cannot be iterated with regards to fees based on a level.
--				--this is also needed on a scenario where updating a school fee "is_level_increase" will be after a student has already been 
--				--loaded with optional fee.
--				UPDATE @return_table SET
--					sysid_enrolmentlevel = @sysid_enrolmentlevel,
--					sysid_feedetails = sfd.sysid_feedetails,
--					is_level_increase = sfd.is_level_increase,
--					is_office_access = sfd.is_office_access,
--					amount = CASE WHEN 
--									((@is_international = 1) AND
--									(NOT @international_percentage IS NULL) AND
--									(NOT @international_percentage <= 0))
--								THEN
--									(sfd.amount * 
--									(1 + (@international_percentage / 100)))
--								ELSE
--									(sfd.amount)
--								END		
--				FROM
--					@return_table AS rt
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feeparticular = rt.sysid_feeparticular
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id				
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sfl.sysid_feelevel = @sysid_feelevel) AND
--					(sfd.is_optional = 1) AND
--					(sfc.category_no IN (1, 2, 3, 4)) AND -- TUITION FEES, MISCELLANEOUS FEES, OTHER FEES, AND LABORATORY FEES
--					(sfd.is_level_increase = 1)	--THE FEE IS LEVEL INCREASE
--
--		END
--
--		--determine if the fees are included on a certain semester only
--		SELECT 
--			@semester_id = sri.semester_id
--		FROM
--			ums.semester_information AS sri
--		WHERE
--			sri.sysid_semester = @sysid_semester
--
--		IF (NOT @semester_id IS NULL)
--		BEGIN
--
--			DELETE FROM @return_table WHERE (sysid_feeparticular IN (SELECT 
--																			sfd.sysid_feeparticular
--																		FROM 
--																			
--																			ums.school_fee_details AS sfd
--																		WHERE
--																			(sfd.is_marked_deleted = 0) AND
--																			(sfd.sysid_feelevel = @sysid_feelevel) AND
--																			(((@semester_id = 1) AND (sfd.include_first_semester = 0)) OR
--																			((@semester_id = 2) AND (sfd.include_second_semester = 0)) OR
--																			((@semester_id = 3) AND (sfd.include_summer = 0))))) AND
--											(is_optional_fee = 0) AND
--											(is_additional_fee = 0)
--
--		END
--
--		--determine if the fees are for female or for male
--		SELECT
--			@gender_flag = crf.reference_flag
--		FROM
--			ums.code_reference AS crf
--		INNER JOIN ums.person_information AS pri ON pri.gender_code = crf.code_reference_id
--		INNER JOIN ums.student_information AS si ON si.sysid_person = pri.sysid_person
--		WHERE
--			(si.sysid_student = @sysid_student)
--
--		IF (NOT @gender_flag IS NULL)
--		BEGIN
--
--			DELETE FROM @return_table WHERE (sysid_feeparticular IN (SELECT 
--																			sfd.sysid_feeparticular
--																		FROM 
--																			
--																			ums.school_fee_details AS sfd
--																		WHERE
--																			(sfd.is_marked_deleted = 0) AND
--																			(sfd.sysid_feelevel = @sysid_feelevel) AND
--																			(((@gender_flag = 1) AND (sfd.include_male = 0)) OR			--male
--																			((@gender_flag = 2) AND (sfd.include_female = 0))))) AND	--female
--											(is_optional_fee = 0) AND
--											(is_additional_fee = 0)
--		END
--
--	END
--	ELSE IF (@is_enrolled = 1) AND (NOT ISNULL(@sysid_enrolmentlevel, '') = '') AND (@is_marked_deleted = 1)			--- (111)
--	BEGIN
--
--		--for the other fees, optional fees, and additional fees
--		INSERT INTO @return_table (sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, 
--										category_description, particular_description, is_office_access, category_no, additional_fee_id,
--										optional_fee_id, is_additional_fee, is_optional_fee, international_percentage, remarks)			
--			SELECT							---------------------------------------------insert the student additional fee													
--				sel.sysid_enrolmentlevel,									
--				NULL, 
--				sfp.sysid_feeparticular,
--				0, 
--				0,
--				saf.amount, 
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfp.is_office_access,
--				sfc.category_no,
--				saf.additional_fee_id,
--				NULL,
--				1,
--				0,
--				NULL AS international_percentage,
--				saf.remarks
--			FROM
--				ums.student_additional_fee AS saf
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = saf.sysid_feeparticular			
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id	
--			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = saf.sysid_enrolmentlevel
--			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel	
--			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--			WHERE
--				(saf.is_for_withdrawn_charge = 0) AND
--				(sec.sysid_student = @sysid_student) AND
--				(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--				(sel.sysid_feelevel = @sysid_feelevel) AND
--				(sel.is_marked_deleted = 1) AND
--				(cg.is_semestral = 0)				
--			UNION ALL
--			SELECT
--				sel.sysid_enrolmentlevel,
--				NULL, 
--				sfp.sysid_feeparticular,
--				0, 
--				0,
--				saf.amount, 
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfp.is_office_access,
--				sfc.category_no,
--				saf.additional_fee_id,
--				NULL,
--				1,
--				0,
--				NULL AS international_percentage,
--				saf.remarks
--			FROM
--				ums.student_additional_fee AS saf
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = saf.sysid_feeparticular			
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id	
--			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = saf.sysid_enrolmentlevel
--			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel	
--			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id	
--			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id	
--			WHERE
--				(saf.is_for_withdrawn_charge = 0) AND
--				(sec.sysid_student = @sysid_student) AND
--				(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
--				(sel.sysid_feelevel = @sysid_feelevel) AND
--				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--				(sel.sysid_semester = @sysid_semester) AND
--				(sel.is_marked_deleted = 1) AND
--				(cg.is_semestral = 1)			
--			ORDER BY
--				sfc.category_no, sfp.particular_description ASC
--
--	END
--
--	RETURN 
--
--END
--GO
--------------------------------------------------------



-- ################################################END TABLE "school_fee_details" OBJECTS######################################################




-- ################################################TABLE "student_additional_fee" OBJECTS######################################################
-- verifies if the student_additional_fee table exists
IF OBJECT_ID('ums.student_additional_fee', 'U') IS NOT NULL
	DROP TABLE ums.student_additional_fee
GO

CREATE TABLE ums.student_additional_fee 			
(
	additional_fee_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Additional_Fee_Additional_Fee_ID_PK PRIMARY KEY (additional_fee_id),
	sysid_enrolmentlevel varchar (50) NOT NULL
		CONSTRAINT Student_Additional_Fee_SysID_EnrolmentLevel_FK FOREIGN KEY REFERENCES ums.student_enrolment_level(sysid_enrolmentlevel) ON UPDATE NO ACTION,
	sysid_feeparticular varchar (50) NOT NULL
		CONSTRAINT Student_Additional_Fee_SysID_FeeParticular_FK FOREIGN KEY REFERENCES ums.school_fee_particular(sysid_feeparticular) ON UPDATE NO ACTION,

	amount decimal (12, 2) NOT NULL,

	is_for_withdrawn_charge bit NOT NULL DEFAULT (0),
	
	remarks varchar (100) NULL,

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Additional_Fee_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Additional_Fee_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Additional_Fee_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_additional_fee table 
CREATE INDEX Student_Additional_Fee_Additional_Fee_ID_Index
	ON ums.student_additional_fee (additional_fee_id DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentAdditionalFee" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentAdditionalFee')
   DROP PROCEDURE ums.InsertStudentAdditionalFee
GO

CREATE PROCEDURE ums.InsertStudentAdditionalFee

	@sysid_enrolmentlevel varchar (50) = '',
	@sysid_feeparticular varchar (50) = '',	
	@amount decimal (12, 2) = 0,
	@remarks varchar (100) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT		-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															WHERE
																(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester  AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															WHERE
																(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
																(cg.is_semestral = 1)),
															@sysid_enrolmentlevel,
															(SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel),
															0,
															1,
															0) = 0))) AND			
		(ums.IsMarkedDeletedSchoolFeeParticular(@sysid_feeparticular) = 0) 
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_additional_fee
		(
			sysid_enrolmentlevel,
			sysid_feeparticular,
			amount,
			remarks,

			created_by
		)
		VALUES
		(
			@sysid_enrolmentlevel,
			@sysid_feeparticular,
			@amount,
			@remarks,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student additional fee', 'Student Additional Fee'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentAdditionalFee TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentAdditionalFee" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentAdditionalFee')
   DROP PROCEDURE ums.UpdateStudentAdditionalFee
GO

CREATE PROCEDURE ums.UpdateStudentAdditionalFee

	@additional_fee_id bigint = 0,
	@sysid_feeparticular varchar (50) = '',
	@amount decimal (12, 2) = 0,	
	@remarks varchar (100) = '',

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT		-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_additional_fee AS saf ON saf.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(saf.additional_fee_id = @additional_fee_id) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_additional_fee AS saf ON saf.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(saf.additional_fee_id = @additional_fee_id) AND
																(cg.is_semestral = 1)),
															(SELECT sysid_enrolmentlevel FROM ums.student_additional_fee WHERE additional_fee_id = @additional_fee_id),
															(SELECT
																	sel.sysid_enrolmentcourse
																FROM
																	ums.student_enrolment_level AS sel
																INNER JOIN ums.student_additional_fee AS saf ON saf.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
																WHERE
																	saf.additional_fee_id = @additional_fee_id),
															0,
															1,
															0) = 0))) AND
		(ums.IsForWithdrawnChargeStudentAdditional(@additional_fee_id) = 0) AND			
		(ums.IsMarkedDeletedSchoolFeeParticular(@sysid_feeparticular) = 0) 
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_additional_fee SET
			sysid_feeparticular = @sysid_feeparticular,
			amount = @amount,
			remarks = @remarks,

			edited_by = @edited_by
		WHERE
			additional_fee_id = @additional_fee_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student additional fee', 'Student Additional Fee'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentAdditionalFee TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentAdditionalFee" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentAdditionalFee')
   DROP PROCEDURE ums.DeleteStudentAdditionalFee
GO

CREATE PROCEDURE ums.DeleteStudentAdditionalFee

	@additional_fee_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT		-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_additional_fee AS saf ON saf.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(saf.additional_fee_id = @additional_fee_id) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_additional_fee AS saf ON saf.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(saf.additional_fee_id = @additional_fee_id) AND
																(cg.is_semestral = 1)),
															(SELECT sysid_enrolmentlevel FROM ums.student_additional_fee WHERE additional_fee_id = @additional_fee_id),
															(SELECT
																	sel.sysid_enrolmentcourse
																FROM
																	ums.student_enrolment_level AS sel
																INNER JOIN ums.student_additional_fee AS saf ON saf.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
																WHERE
																	saf.additional_fee_id = @additional_fee_id),
															0,
															1,
															0) = 0))) AND
		(ums.IsForWithdrawnChargeStudentAdditional(@additional_fee_id) = 0)
	BEGIN

		IF EXISTS (SELECT additional_fee_id FROM ums.student_additional_fee WHERE additional_fee_id = @additional_fee_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_additional_fee SET
				edited_by = @deleted_by
			WHERE
				additional_fee_id = @additional_fee_id

			DELETE FROM ums.student_additional_fee WHERE additional_fee_id = @additional_fee_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student additional fee', 'Student Additional Fee'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentAdditionalFee TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsForWithdrawnChargeStudentAdditional" function already exist
IF OBJECT_ID (N'ums.IsForWithdrawnChargeStudentAdditional') IS NOT NULL
   DROP FUNCTION ums.IsForWithdrawnChargeStudentAdditional
GO

CREATE FUNCTION ums.IsForWithdrawnChargeStudentAdditional
(	
	@additional_fee_id bigint
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0

	IF EXISTS (SELECT additional_fee_id FROM ums.student_additional_fee WHERE additional_fee_id = @additional_fee_id AND
																		is_for_withdrawn_charge = 1)
	BEGIN
		SET @result = 1
	END
	
	RETURN @result
END
GO
------------------------------------------------------

-- ################################################END TABLE "student_additional_fee" OBJECTS######################################################






-- ################################################TABLE "student_optional_fee" OBJECTS#######################################################
-- verifies if the student_optional_fee table exists
IF OBJECT_ID('ums.student_optional_fee', 'U') IS NOT NULL
	DROP TABLE ums.student_optional_fee
GO

CREATE TABLE ums.student_optional_fee 			
(
	optional_fee_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Optional_Fee_Optional_Fee_ID_PK PRIMARY KEY (optional_fee_id),
	sysid_enrolmentlevel varchar (50) NOT NULL
		CONSTRAINT Student_Optional_Fee_SysID_EnrolmentLevel_FK FOREIGN KEY REFERENCES ums.student_enrolment_level(sysid_enrolmentlevel) ON UPDATE NO ACTION,
	sysid_feedetails varchar (50) NOT NULL
		CONSTRAINT Student_Optional_Fee_SysID_FeeDetails_FK FOREIGN KEY REFERENCES ums.school_fee_details(sysid_feedetails) ON UPDATE NO ACTION,

	is_for_withdrawn_charge bit NOT NULL DEFAULT (0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Optional_Fee_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Optional_Fee_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Optional_Fee_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_optional_fee table 
CREATE INDEX Student_Optional_Fee_Optional_Fee_ID_Index
	ON ums.student_optional_fee (optional_fee_id DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentOptionalFee" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentOptionalFee')
   DROP PROCEDURE ums.InsertStudentOptionalFee
GO

CREATE PROCEDURE ums.InsertStudentOptionalFee

	@sysid_enrolmentlevel varchar (50) = '',
	@sysid_feedetails varchar (50) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1) OR 
		((ums.IsOfficeUserSystemUserInfo(@created_by) = 1) AND 
		(ums.IsUserSameDepartmentCourseInfo((SELECT
													sec.course_id						
												FROM
													ums.student_enrolment_course AS sec
												INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
												WHERE
													(sec.is_current_course = 1) AND
													(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)), @created_by) = 1) AND
		(ums.IsOfficeAccessSchoolFeeParticular(@sysid_feedetails) = 1))) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT		-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															WHERE
																(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															WHERE
																(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
																(cg.is_semestral = 1)),
															@sysid_enrolmentlevel,
															(SELECT sysid_enrolmentcourse FROM ums.student_enrolment_level WHERE sysid_enrolmentlevel = @sysid_enrolmentlevel),
															1,
															0,
															0) = 0))) AND
		(ums.IsOptionalSchoolFeeParticular(@sysid_feedetails) = 1)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_optional_fee
		(
			sysid_enrolmentlevel,
			sysid_feedetails,
			created_by
		)
		VALUES
		(
			@sysid_enrolmentlevel,
			@sysid_feedetails,
			@created_by
		)			
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student optional fee', 'Student Optional Fee'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentOptionalFee TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentOptionalFee" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentOptionalFee')
   DROP PROCEDURE ums.DeleteStudentOptionalFee
GO

CREATE PROCEDURE ums.DeleteStudentOptionalFee

	@optional_fee_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1) OR
		((ums.IsOfficeUserSystemUserInfo(@deleted_by) = 1) AND 
		(ums.IsUserSameDepartmentCourseInfo((SELECT
													sec.course_id						
												FROM
													ums.student_enrolment_course AS sec
												INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
												INNER JOIN ums.student_optional_fee AS sof ON sof.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
												WHERE
													(sec.is_current_course = 1) AND
													(sof.optional_fee_id = @optional_fee_id)), @deleted_by) = 1))) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT			-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_optional_fee AS sof ON sof.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(sof.optional_fee_id = @optional_fee_id) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_optional_fee AS sof ON sof.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(sof.optional_fee_id = @optional_fee_id) AND
																(cg.is_semestral = 1)),
															(SELECT sysid_enrolmentlevel FROM ums.student_optional_fee WHERE optional_fee_id = @optional_fee_id),
															(SELECT
																	sel.sysid_enrolmentcourse
																FROM
																	ums.student_enrolment_level AS sel
																INNER JOIN ums.student_optional_fee AS sof ON sof.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
																WHERE
																	sof.optional_fee_id = @optional_fee_id),
															1,
															0,
															0) = 0))) AND
		(ums.IsForWithdrawnChargeStudentOptional(@optional_fee_id) = 0)
	BEGIN

		IF EXISTS (SELECT optional_fee_id FROM ums.student_optional_fee WHERE optional_fee_id = @optional_fee_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_optional_fee SET
				edited_by = @deleted_by
			WHERE
				optional_fee_id = @optional_fee_id

			DELETE FROM ums.student_optional_fee WHERE optional_fee_id = @optional_fee_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student additional fee', 'Student Additional Fee'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentOptionalFee TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentFeeLevelSemesterForOptionalFeeDetailsStudentOptionalFee" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentFeeLevelSemesterForOptionalFeeDetailsStudentOptionalFee')
   DROP PROCEDURE ums.SelectBySysIDStudentFeeLevelSemesterForOptionalFeeDetailsStudentOptionalFee
GO

CREATE PROCEDURE ums.SelectBySysIDStudentFeeLevelSemesterForOptionalFeeDetailsStudentOptionalFee

	@sysid_student varchar (50) = '',
	@sysid_feelevel varchar (50) = '',
	@sysid_semester varchar (50) = '',
	@is_international bit = 0,
	@system_user_id varchar (50) = ''
		
AS

	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1)		
	BEGIN
				
		SELECT
			sysid_feedetails,
			sysid_feeparticular,
			is_level_increase,
			is_added_level_fee,
			amount,
			fee_category_id,
			category_description,
			particular_description,
			is_office_access,
			category_no,
			international_percentage
		FROM
			ums.GetBySysIDStudentFeeLevelSemesterForOptionalFeeDetails(@sysid_student, @sysid_feelevel, @sysid_semester, @is_international)
		ORDER BY
			category_no, particular_description ASC	

	END	
	ELSE IF (ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)
	BEGIN
			
		SELECT
			sysid_feedetails,
			sysid_feeparticular,
			is_level_increase,
			is_added_level_fee,
			amount,
			fee_category_id,
			category_description,
			particular_description,
			is_office_access,
			category_no,
			international_percentage
		FROM
			ums.GetBySysIDStudentFeeLevelSemesterForOptionalFeeDetails(@sysid_student, @sysid_feelevel, @sysid_semester, @is_international)
		WHERE
			(is_office_access = 1)
		ORDER BY
			category_no, particular_description ASC	
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student optional fee', 'Student Optional Fee'		
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentFeeLevelSemesterForOptionalFeeDetailsStudentOptionalFee TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsForWithdrawnChargeStudentOptional" function already exist
IF OBJECT_ID (N'ums.IsForWithdrawnChargeStudentOptional') IS NOT NULL
   DROP FUNCTION ums.IsForWithdrawnChargeStudentOptional
GO

CREATE FUNCTION ums.IsForWithdrawnChargeStudentOptional
(	
	@optional_fee_id bigint
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0

	IF EXISTS (SELECT optional_fee_id FROM ums.student_optional_fee WHERE optional_fee_id = @optional_fee_id AND
																		is_for_withdrawn_charge = 1)
	BEGIN
		SET @result = 1
	END
	
	RETURN @result
END
GO
------------------------------------------------------

--was moved to SERVER SOLUTIONS [ 8 ] TRIGGERS AND PROCEDURES DEPENDENT TO OTHER TABLES because of students information needing the sysid_person
--which is not known at this point of sql statement

---- verifies if the "GetBySysIDStudentFeeLevelSemesterForOptionalFeeDetails" function already exist
--IF OBJECT_ID (N'ums.GetBySysIDStudentFeeLevelSemesterForOptionalFeeDetails') IS NOT NULL
--   DROP FUNCTION ums.GetBySysIDStudentFeeLevelSemesterForOptionalFeeDetails
--GO
--
--CREATE FUNCTION ums.GetBySysIDStudentFeeLevelSemesterForOptionalFeeDetails		
--(	
--	@sysid_student varchar (50) = '',
--	@sysid_feelevel varchar (50) = '',
--	@sysid_semester varchar (50) = '',
--	@is_international bit = 0
--) 
--RETURNS @return_table TABLE (table_id int IDENTITY(1, 1) NOT NULL PRIMARY KEY,
--								sysid_feedetails varchar (50) NOT NULL,
--								sysid_feeparticular varchar (50) NOT NULL,
--								is_level_increase bit NOT NULL DEFAULT (0),
--								is_added_level_fee bit NOT NULL DEFAULT (0),
--								amount decimal (12, 2) NOT NULL,
--								fee_category_id varchar (50) NOT NULL,
--								category_description varchar (100) NOT NULL,
--								particular_description varchar (100) NOT NULL,
--								is_office_access bit NOT NULL DEFAULT (0),
--								category_no tinyint NOT NULL,
--								international_percentage float NULL)
--AS
--BEGIN
--
--	DECLARE @student_enrolment_level TABLE (table_id int IDENTITY(1, 1) NOT NULL PRIMARY KEY,
--											sysid_enrolmentlevel varchar (50) NOT NULL, 
--											sysid_feelevel varchar (50) NOT NULL, 
--											is_entry_level bit NOT NULL DEFAULT (0), 
--											enrolment_level_no int NOT NULL, 
--											international_percentage float NULL)
--	
--	DECLARE @is_entry_level bit
--	DECLARE @cursor_sysid_feelevel varchar (50)	
--	DECLARE @international_percentage float
--	DECLARE @semester_id tinyint
--	DECLARE @gender_flag tinyint	
--
--	SELECT @is_entry_level = CASE WHEN ((SELECT TOP 1
--												cg.is_semestral AS is_semestral
--											FROM 
--												ums.student_enrolment_level AS sel
--											INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--											INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--											INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--											WHERE 
--												(sec.sysid_student = @sysid_student) AND
--												(sel.sysid_feelevel = @sysid_feelevel) AND
--												(sel.is_marked_deleted = 0)
--											ORDER BY
--												sel.enrolment_level_no DESC) = 0)
--									THEN
--										(SELECT TOP 1
--												sel.is_entry_level 
--											FROM 
--												ums.student_enrolment_level AS sel
--											INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--											INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--											INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--											WHERE 
--												(sec.sysid_student = @sysid_student) AND
--												(sel.sysid_feelevel = @sysid_feelevel) AND
--												(sel.is_marked_deleted = 0) AND
--												(cg.is_semestral = 0)
--											ORDER BY
--												sel.enrolment_level_no DESC)
--									ELSE
--										(SELECT TOP 1
--												sel.is_entry_level
--											FROM 
--												ums.student_enrolment_level AS sel
--											INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--											INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--											INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--											WHERE 
--												(sec.sysid_student = @sysid_student) AND
--												(sel.sysid_feelevel = @sysid_feelevel) AND
--												(sel.is_marked_deleted = 0) AND
--												(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--												(sel.sysid_semester = @sysid_semester) AND
--												(cg.is_semestral = 1)
--											ORDER BY
--												sel.enrolment_level_no DESC)
--									END
--	
--
--	IF (@is_entry_level IS NULL)
--	BEGIN
--		SET @is_entry_level = 0
--	END
--
--	IF (@is_entry_level = 1)
--	BEGIN
--
--		INSERT INTO @return_table (sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, category_description, 
--											particular_description, is_office_access, category_no, international_percentage)
--			SELECT 
--				sfd.sysid_feedetails, 
--				sfd.sysid_feeparticular,
--				0, 
--				0,
--				CASE WHEN 
--						((@is_international = 1) AND
--						(NOT fs.international_percentage IS NULL) AND
--						(NOT fs.international_percentage <= 0))
--					THEN
--						(sfd.amount * 
--						(1 + (fs.international_percentage / 100)))
--					ELSE
--						(sfd.amount)
--					END AS amount,
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfd.is_office_access,
--				sfc.category_no,
--				fs.international_percentage
--			FROM 
--				ums.school_fee_details AS sfd
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
--			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--			INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sec.sysid_student = @sysid_student) AND
--				(sel.sysid_feelevel = @sysid_feelevel) AND
--				(sel.is_marked_deleted = 0) AND
--				(sfd.is_optional = 1) AND
--				(cg.is_semestral = 0)				
--			UNION ALL
--			SELECT 
--				sfd.sysid_feedetails, 
--				sfd.sysid_feeparticular, 
--				0,
--				0,
--				CASE WHEN 
--						((@is_international = 1) AND
--						(NOT fs.international_percentage IS NULL) AND
--						(NOT fs.international_percentage <= 0))
--					THEN
--						(sfd.amount * 
--						(1 + (fs.international_percentage / 100)))
--					ELSE
--						(sfd.amount)
--					END AS amount,
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfd.is_office_access, 
--				sfc.category_no,
--				fs.international_percentage	
--			FROM 
--				ums.school_fee_details AS sfd
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
--			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--			INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sec.sysid_student = @sysid_student) AND
--				(sel.sysid_feelevel = @sysid_feelevel) AND
--				(sel.is_marked_deleted = 0) AND
--				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
--				(sel.sysid_semester = @sysid_semester) AND
--				(sfd.is_optional = 1) AND
--				(cg.is_semestral = 1)
--			ORDER BY
--				sfc.category_no, sfp.particular_description ASC
--
--	END
--	ELSE
--	BEGIN
--
--		--gets the student enrolment levels within a certain course group and with year level no. lesser or equal to the sysid_feelevel parameter
--		INSERT INTO @student_enrolment_level(sysid_enrolmentlevel, sysid_feelevel, is_entry_level, enrolment_level_no, international_percentage)
--			SELECT
--				sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
--				sel.sysid_feelevel AS sysid_feelevel,
--				sel.is_entry_level AS is_entry_level,
--				sel.enrolment_level_no AS enrolment_level_no,
--				fs.international_percentage AS international_percentage
--			FROM
--				ums.student_enrolment_level AS sel
--			INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--			INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--			INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--			INNER JOIN ums.finance_standard AS fs ON fs.sysid_financestd = sel.sysid_financestd
--			WHERE
--				(sec.sysid_student = @sysid_student) AND
--				(sel.is_marked_deleted = 0) AND
--				(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--											yli.year_level_no AS year_level_no
--										FROM
--											ums.year_level_information AS yli
--										INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--										WHERE
--											sfl.sysid_feelevel = @sysid_feelevel)) AND	
--				(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--											cg.course_group_id AS course_group_id
--										FROM
--											ums.course_group AS cg
--										INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--										INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--										WHERE
--											sfl.sysid_feelevel = @sysid_feelevel)) AND
--				(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--											sfl.fee_level_no AS fee_level_no
--										FROM
--											ums.school_fee_level AS sfl
--										WHERE
--											sfl.sysid_feelevel = @sysid_feelevel))
--
--		--gets the international percentage based on the entry level
--		SELECT 
--			@international_percentage = t_sel.international_percentage
--		FROM
--			@student_enrolment_level AS t_sel
--		WHERE
--			(t_sel.enrolment_level_no = (SELECT	--get the entry level
--												MAX(t_sel.enrolment_level_no)
--											FROM
--												@student_enrolment_level AS t_sel
--											WHERE
--												t_sel.is_entry_level = 1))
--
--		INSERT INTO @return_table (sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, category_description, 
--										particular_description, is_office_access, category_no, international_percentage)
--			SELECT 
--				sfd.sysid_feedetails, 
--				sfd.sysid_feeparticular, 
--				0,
--				0,
--				CASE WHEN 
--						((@is_international = 1) AND
--						(NOT @international_percentage IS NULL) AND
--						(NOT @international_percentage <= 0))
--					THEN
--						(sfd.amount * 
--						(1 + (@international_percentage / 100)))
--					ELSE
--						(sfd.amount)
--					END AS amount,
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfd.is_office_access, 
--				sfc.category_no,
--				@international_percentage
--			FROM 
--				ums.school_fee_details AS sfd
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sel.enrolment_level_no = (SELECT	--get the entry level
--												MAX(t_sel.enrolment_level_no)
--											FROM
--												@student_enrolment_level AS t_sel
--											WHERE
--												t_sel.is_entry_level = 1)) AND
--				(sfd.is_optional = 1) AND
--				(sfc.category_no IN (1, 2, 4)) -- TUITION FEES, MISCELLANEOUS, AND LABORATORY FEES
--			ORDER BY
--				sfc.category_no, sfp.particular_description ASC
--
--		--iterates through each student enrolment levels
--		DECLARE student_enrolment_level_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
--			FOR SELECT
--					sel.sysid_feelevel AS sysid_feelevel
--				FROM
--					ums.student_enrolment_level AS sel
--				INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--				INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--				INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--				WHERE
--					(sec.sysid_student = @sysid_student) AND
--					(sel.is_marked_deleted = 0) AND
--					(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--												yli.year_level_no AS year_level_no
--											FROM
--												ums.year_level_information AS yli
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND	
--					(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--												cg.course_group_id AS course_group_id
--											FROM
--												ums.course_group AS cg
--											INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--											INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND
--					(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--												sfl.fee_level_no AS fee_level_no
--											FROM
--												ums.school_fee_level AS sfl
--											WHERE
--												sfl.sysid_feelevel = @sysid_feelevel)) AND
--					(sel.enrolment_level_no > (SELECT
--													MAX(sel.enrolment_level_no)
--												FROM
--													ums.student_enrolment_level AS sel
--												INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
--												INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
--												INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
--												INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
--												WHERE
--													(sec.sysid_student = @sysid_student) AND
--													(sel.is_marked_deleted = 0) AND
--													(sel.is_entry_level = 1) AND			--does not include the entry level
--													(yli.year_level_no <= (SELECT		--get the year level that is lesser or equal to the year level no of the sysid_feelevel parameter
--																				yli.year_level_no AS year_level_no
--																			FROM
--																				ums.year_level_information AS yli
--																			INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--																			WHERE
--																				sfl.sysid_feelevel = @sysid_feelevel)) AND	
--													(cg.course_group_id = (SELECT		--get the enrolment levels that belongs to the course group the same with the sysid_feelevel parameter
--																				cg.course_group_id AS course_group_id
--																			FROM
--																				ums.course_group AS cg
--																			INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
--																			INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
--																			WHERE
--																				sfl.sysid_feelevel = @sysid_feelevel)) AND
--													(sfl.fee_level_no <= (SELECT		--get the school fee level that is lesser or equal to the fee level no of the sysid_feelevel parameter
--																				sfl.fee_level_no AS fee_level_no
--																			FROM
--																				ums.school_fee_level AS sfl
--																			WHERE
--																				sfl.sysid_feelevel = @sysid_feelevel))))
--				ORDER BY
--					sel.enrolment_level_no ASC
--
--		OPEN student_enrolment_level_cursor
--
--		FETCH NEXT FROM student_enrolment_level_cursor
--			INTO @cursor_sysid_feelevel
--
--		WHILE @@FETCH_STATUS = 0
--		BEGIN
--
--			--determine if the miscellaneous fee does not exists in the current entry level
--			INSERT INTO @return_table (sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, category_description, 
--										particular_description, is_office_access, category_no, international_percentage)
--				SELECT
--					sfd.sysid_feedetails,
--					sfd.sysid_feeparticular,
--					0,
--					1,
--					CASE WHEN 
--							((@is_international = 1) AND
--							(NOT @international_percentage IS NULL) AND
--							(NOT @international_percentage <= 0))
--						THEN
--							(sfd.amount * 
--							(1 + (@international_percentage / 100)))
--						ELSE
--							(sfd.amount)
--						END,
--					sfp.fee_category_id,
--					sfc.category_description,
--					sfp.particular_description,
--					sfd.is_office_access,
--					sfc.category_no,
--					@international_percentage
--				FROM 						
--					ums.school_fee_details AS sfd
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sfl.sysid_feelevel = @cursor_sysid_feelevel) AND
--					(sfd.is_optional = 1) AND
--					(sfc.category_no IN (1, 2, 4)) AND -- TUITION FEES, MISCELLANEOUS, AND LABORATORY FEES
--					(NOT sfd.sysid_feeparticular IN (SELECT
--															sysid_feeparticular
--														FROM
--															@return_table))
--				ORDER BY
--					sfc.category_no, sfp.particular_description ASC
--
--				--determine if the tuition, miscellaneous, and laboratory fee is a level increase
--				UPDATE @return_table SET
--					sysid_feedetails = sfd.sysid_feedetails,
--					is_level_increase = sfd.is_level_increase,
--					amount = CASE WHEN 
--									((@is_international = 1) AND
--									(NOT @international_percentage IS NULL) AND
--									(NOT @international_percentage <= 0))
--								THEN
--									(sfd.amount * 
--									(1 + (@international_percentage / 100)))
--								ELSE
--									(sfd.amount)
--								END				
--
--				FROM
--					@return_table AS rt
--				INNER JOIN ums.school_fee_details AS sfd ON sfd.sysid_feeparticular = rt.sysid_feeparticular
--				INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--				INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--				INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--				WHERE
--					(sfd.is_marked_deleted = 0) AND
--					(sfl.sysid_feelevel = @cursor_sysid_feelevel) AND
--					(sfd.is_optional = 1) AND
--					(sfc.category_no IN (1, 2, 4)) AND -- TUITION FEES, MISCELLANEOUS, AND LABORATORY FEES
--					(sfd.is_level_increase = 1)	--THE FEE IS LEVEL INCREASE
--			
--			FETCH NEXT FROM student_enrolment_level_cursor
--				INTO @cursor_sysid_feelevel
--
--		END
--
--		CLOSE student_enrolment_level_cursor
--		DEALLOCATE student_enrolment_level_cursor
--
--		--if the school has an instance that higher levels have the tendency to eliminate a school fee based on an entry level
--		DELETE FROM @return_table WHERE NOT sysid_feeparticular IN (SELECT 
--																		sfd.sysid_feeparticular
--																	FROM 						
--																		ums.school_fee_details AS sfd
--																	INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--																	INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--																	INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--																	WHERE
--																		(sfd.is_marked_deleted = 0) AND
--																		(sfl.sysid_feelevel = @sysid_feelevel) AND
--																		(sfd.is_optional = 1) AND
--																		(sfc.category_no IN (1, 2, 4))) -- TUITION FEES, MISCELLANEOUS, AND LABORATORY FEES
--
--
--		INSERT INTO @return_table (sysid_feedetails, sysid_feeparticular, is_level_increase, is_added_level_fee, amount, fee_category_id, category_description, 
--										particular_description, is_office_access, category_no, international_percentage)
--			SELECT 
--				sfd.sysid_feedetails, 
--				sfd.sysid_feeparticular, 
--				0,
--				0,
--				CASE WHEN 
--						((@is_international = 1) AND
--						(NOT @international_percentage IS NULL) AND
--						(NOT @international_percentage <= 0))
--					THEN
--						(sfd.amount * 
--						(1 + (@international_percentage / 100)))
--					ELSE
--						(sfd.amount)
--					END AS amount,
--				sfp.fee_category_id,
--				sfc.category_description, 
--				sfp.particular_description, 
--				sfd.is_office_access,
--				sfc.category_no,
--				@international_percentage
--			FROM 
--				ums.school_fee_details AS sfd
--			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sfd.sysid_feelevel
--			INNER JOIN ums.school_fee_particular AS sfp ON sfp.sysid_feeparticular = sfd.sysid_feeparticular
--			INNER JOIN ums.school_fee_category AS sfc ON sfc.fee_category_id = sfp.fee_category_id
--			WHERE
--				(sfd.is_marked_deleted = 0) AND
--				(sfl.sysid_feelevel = @sysid_feelevel) AND
--				(sfd.is_optional = 1) AND
--				(sfc.category_no IN (3)) -- OTHER FEES
--			ORDER BY
--				sfc.category_no, sfp.particular_description ASC
--
--	END
--
--	--determine if the fees are included on a certain semester only
--	SELECT 
--		@semester_id = sri.semester_id
--	FROM
--		ums.semester_information AS sri
--	WHERE
--		sri.sysid_semester = @sysid_semester
--
--	IF (NOT @semester_id IS NULL)
--	BEGIN
--
--		DELETE FROM @return_table WHERE (sysid_feeparticular IN (SELECT 
--																		sfd.sysid_feeparticular
--																	FROM 
--																		ums.school_fee_details AS sfd
--																	WHERE
--																		(sfd.is_marked_deleted = 0) AND
--																		(sfd.is_optional = 1) AND
--																		(sfd.sysid_feelevel = @sysid_feelevel) AND
--																		(((@semester_id = 1) AND (sfd.include_first_semester = 0)) OR
--																		((@semester_id = 2) AND (sfd.include_second_semester = 0)) OR
--																		((@semester_id = 3) AND (sfd.include_summer = 0)))))
--
--	END
--
--	--determine if the fees are for female or for male
--	SELECT
--		@gender_flag = crf.reference_flag
--	FROM
--		ums.code_reference AS crf
--	INNER JOIN ums.person_information AS pri ON pri.gender_code = crf.code_reference_id
--	INNER JOIN ums.student_information AS si ON si.sysid_person = pri.sysid_person
--	WHERE
--		(si.sysid_student = @sysid_student)
--
--	IF (NOT @gender_flag IS NULL)
--	BEGIN
--
--		DELETE FROM @return_table WHERE (sysid_feeparticular IN (SELECT 
--																		sfd.sysid_feeparticular
--																	FROM 
--																		ums.school_fee_details AS sfd
--																	WHERE
--																		(sfd.is_marked_deleted = 0) AND
--																		(sfd.is_optional = 1) AND
--																		(sfd.sysid_feelevel = @sysid_feelevel) AND
--																		(((@gender_flag = 1) AND (sfd.include_male = 0)) OR			--male
--																		((@gender_flag = 2) AND (sfd.include_female = 0)))))		--female
--	END
--
--	RETURN 
--
--END
--GO
--------------------------------------------------------

-- ################################################TABLE "student_optional_fee" OBJECTS######################################################





-- ################################################TABLE "accounting_category" OBJECTS######################################################
-- verifies if the accounting_category table exists
IF OBJECT_ID('ums.accounting_category', 'U') IS NOT NULL
	DROP TABLE ums.accounting_category
GO

CREATE TABLE ums.accounting_category 			
(
	accounting_category_id varchar (50) NOT NULL 
		CONSTRAINT Accounting_Category_Accounting_Category_ID_PK PRIMARY KEY (accounting_category_id)
		CONSTRAINT Accounting_Category_Accounting_Category_ID_CK CHECK (accounting_category_id LIKE 'ACID%'),
	category_description varchar (100) NOT NULL
		CONSTRAINT Accounting_Category_Category_Description_UQ UNIQUE (category_description),
	category_no tinyint NOT NULL
		CONSTRAINT Accounting_Category_Category_No_UQ UNIQUE (category_no),

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Accounting_Category_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- verifies that the trigger "Accounting_Category_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.Accounting_Category_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.Accounting_Category_Trigger_Instead_Update
GO

CREATE TRIGGER ums.Accounting_Category_Trigger_Instead_Update
	ON  ums.accounting_category
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Update an accounting category', 'Accounting Category'
	
GO
-------------------------------------------------------------------------

-- verifies that the trigger "Accounting_Category_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.Accounting_Category_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.Accounting_Category_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.Accounting_Category_Trigger_Instead_Delete
	ON  ums.accounting_category
	INSTEAD OF DELETE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Delete an accounting category', 'Accounting Category'
	
GO
-------------------------------------------------------------------------

-- verifies if the procedure "SelectAccountingCategory" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectAccountingCategory')
   DROP PROCEDURE ums.SelectAccountingCategory
GO

CREATE PROCEDURE ums.SelectAccountingCategory
	
	@system_user_id varchar(50) = ''
	
AS

	IF ums.IsActiveSystemUserInfo(@system_user_id) = 1
	BEGIN
		
		SELECT
			acg.accounting_category_id AS accounting_category_id,
			acg.category_description AS category_description,
			acg.category_no AS category_no			
		FROM
			ums.accounting_category AS acg
		ORDER BY acg.category_no ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query an accounting category', 'Accounting Category'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectAccountingCategory TO db_umsusers
GO
-------------------------------------------------------------


-- ################################################END TABLE "accounting_category" OBJECTS###################################################





-- ################################################TABLE "chart_of_accounts" OBJECTS######################################################
-- verifies if the chart_of_accounts table exists
IF OBJECT_ID('ums.chart_of_accounts', 'U') IS NOT NULL
	DROP TABLE ums.chart_of_accounts
GO

CREATE TABLE ums.chart_of_accounts 			
(
	sysid_account varchar (50) NOT NULL 
		CONSTRAINT Chart_Of_Accounts_SysID_Account_PK PRIMARY KEY (sysid_account)
		CONSTRAINT Chart_Of_Accounts_SysID_Account_CK CHECK (sysid_account LIKE 'SYSCOA%'),	
	accounting_category_id varchar (50) NOT NULL
		CONSTRAINT Chart_Of_Accounts_Accounting_Category_ID_FK FOREIGN KEY REFERENCES ums.accounting_category(accounting_category_id) ON UPDATE NO ACTION,
	account_code varchar (50) NOT NULL
		CONSTRAINT Chart_Of_Accounts_Account_Code_UQ UNIQUE (account_code, summary_account),
	account_name varchar (150) NOT NULL,
	account_description varchar (MAX) NULL,
	company_policy_procedure varchar (MAX) NULL,
	summary_account varchar (50) NULL
		CONSTRAINT Chart_Of_Accounts_Summary_Account_FK FOREIGN KEY REFERENCES ums.chart_of_accounts(sysid_account) ON UPDATE NO ACTION
		CONSTRAINT Chart_Of_Accounts_Summary_Account_UQ UNIQUE (summary_account, account_code),

	is_debit_side_increase bit NOT NULL DEFAULT (0),
	is_active_account bit NOT NULL DEFAULT (0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Chart_Of_Accounts_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Chart_Of_Accounts_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Chart_Of_Accounts_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the chart_of_accounts table 
CREATE INDEX Chart_Of_Accounts_SysID_Account_Index
	ON ums.chart_of_accounts (sysid_account ASC)
GO
------------------------------------------------------------------

--verifies that the trigger "Chart_Of_Accounts_Trigger_Insert" already exist
IF OBJECT_ID ('ums.Chart_Of_Accounts_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.Chart_Of_Accounts_Trigger_Insert
GO

CREATE TRIGGER ums.Chart_Of_Accounts_Trigger_Insert
	ON  ums.chart_of_accounts
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_account varchar (50)
	DECLARE @accounting_category_id varchar (50)
	DECLARE @account_code varchar (50)
	DECLARE @account_name varchar (150)
	DECLARE @account_description varchar (MAX)
	DECLARE @company_policy_procedure varchar (MAX)
	DECLARE @summary_account varchar (50)
	DECLARE @is_debit_side_increase bit
	DECLARE @is_active_account bit	

	DECLARE @created_by varchar (50)

	DECLARE @debit_side_string varchar (50)
	DECLARE @active_string varchar (50)
	
	SELECT 
		@sysid_account = i.sysid_account,
		@accounting_category_id = i.accounting_category_id,
		@account_code = i.account_code,
		@account_name = i.account_name,
		@account_description = i.account_description,
		@company_policy_procedure = i.company_policy_procedure,
		@summary_account = i.summary_account,
		@is_debit_side_increase = i.is_debit_side_increase,
		@is_active_account = i.is_active_account,

		@created_by = i.created_by
	FROM INSERTED AS i

	IF @is_debit_side_increase = 1
	BEGIN
		SET @debit_side_string = 'YES'
	END
	ELSE
	BEGIN
		SET @debit_side_string = 'NO'
	END

	IF @is_active_account = 1
	BEGIN
		SET @active_string = 'YES'
	END
	ELSE
	BEGIN
		SET @active_string = 'NO'
	END

	SET @transaction_done = 'CREATED a new account in the chart of accounts ' + 
							'[Account ID: ' + ISNULL(@sysid_account, '') +
							'][Accounting Category: ' + ISNULL((SELECT category_description FROM ums.accounting_category WHERE accounting_category_id = @accounting_category_id), '') +
							'][Account Code: ' + ISNULL(@account_code, '') +
							'][Account Name: ' + ISNULL(@account_name, '') +
							'][Account Description: ' + ISNULL(@account_description, '') +
							'][Company Policy/Procedure: ' + ISNULL(@company_policy_procedure, '') +
							'][Summary Account: ' + ISNULL((SELECT
																account_code + ' - ' + account_name
															FROM
																ums.chart_of_accounts
															WHERE
																sysid_account = @summary_account), '') +
							'][Is Debit Side Increase: ' + ISNULL(@debit_side_string, '') +
							'][Is Active Account: ' + ISNULL(@active_string, '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
-------------------------------------------------------------------

--verifies that the trigger "Chart_Of_Accounts_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.Chart_Of_Accounts_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.Chart_Of_Accounts_Trigger_Instead_Update
GO

CREATE TRIGGER ums.Chart_Of_Accounts_Trigger_Instead_Update
	ON  ums.chart_of_accounts
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_account varchar (50)
	DECLARE @accounting_category_id varchar (50)
	DECLARE @account_code varchar (50)
	DECLARE @account_name varchar (150)
	DECLARE @account_description varchar (MAX)
	DECLARE @company_policy_procedure varchar (MAX)
	DECLARE @summary_account varchar (50)
	DECLARE @is_debit_side_increase bit
	DECLARE @is_active_account bit	

	DECLARE @edited_by varchar (50)
	
	DECLARE @accounting_category_id_b varchar (50)
	DECLARE @account_code_b varchar (50)
	DECLARE @account_name_b varchar (150)
	DECLARE @account_description_b varchar (MAX)
	DECLARE @company_policy_procedure_b varchar (MAX)
	DECLARE @summary_account_b varchar (50)
	DECLARE @is_debit_side_increase_b bit
	DECLARE @is_active_account_b bit
	
	DECLARE @active_string varchar (50)
	DECLARE @active_string_b varchar (50)
	DECLARE @debit_side_string varchar (50)
	DECLARE @debit_side_string_b varchar (50)

	DECLARE @has_update bit

	DECLARE chart_of_accounts_update_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
		FOR SELECT i.sysid_account, i.accounting_category_id, i.account_code, i.account_name, i.account_description,
					i.company_policy_procedure, i.summary_account, i.is_debit_side_increase, i.is_active_account, i.edited_by
				FROM INSERTED AS i

	OPEN chart_of_accounts_update_cursor

	FETCH NEXT FROM chart_of_accounts_update_cursor
		INTO @sysid_account, @accounting_category_id, @account_code, @account_name, @account_description,
					@company_policy_procedure, @summary_account, @is_debit_side_increase, @is_active_account, @edited_by

	WHILE @@FETCH_STATUS = 0
	BEGIN

		SELECT 
			@accounting_category_id_b = coa.accounting_category_id,
			@account_code_b = coa.account_code,
			@account_name_b = coa.account_name,
			@account_description_b = coa.account_description,
			@company_policy_procedure_b = coa.company_policy_procedure,
			@summary_account_b = coa.summary_account,
			@is_debit_side_increase_b = coa.is_debit_side_increase,
			@is_active_account_b = coa.is_active_account
		FROM 
			ums.chart_of_accounts AS coa
		WHERE 
			coa.sysid_account = @sysid_account

		SET @transaction_done = ''
		SET @has_update = 0

		IF NOT ISNULL(@accounting_category_id COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@accounting_category_id_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Accounting Category Before: ' + ISNULL((SELECT category_description FROM ums.accounting_category WHERE accounting_category_id = @accounting_category_id_b), '') + ']' +
														'[Accounting Category After: ' + ISNULL((SELECT category_description FROM ums.accounting_category WHERE accounting_category_id = @accounting_category_id), '') + ']'
			SET @has_update = 1
		END

		IF NOT ISNULL(@account_code COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@account_code_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Account Code Before: ' + ISNULL(@account_code_b, '') + ']' +
														'[Account Code After: ' + ISNULL(@account_code, '') + ']'
			SET @has_update = 1
		END
		ELSE
		BEGIN
			SET @transaction_done = @transaction_done + '[Account Code: ' + ISNULL(@account_code, '') + ']'
		END

		IF NOT ISNULL(@account_name COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@account_name_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Account Name Before: ' + ISNULL(@account_name_b, '') + ']' +
														'[Account Name After: ' + ISNULL(@account_name, '') + ']'
			SET @has_update = 1
		END
		ELSE
		BEGIN
			SET @transaction_done = @transaction_done + '[Account Name: ' + ISNULL(@account_name, '') + ']'
		END

		IF NOT ISNULL(@account_description COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@account_description_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Account Description Before: ' + ISNULL(@account_description_b, '') + ']' +
														'[Account Description After: ' + ISNULL(@account_description, '') + ']'
			SET @has_update = 1
		END

		IF NOT ISNULL(@company_policy_procedure COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@company_policy_procedure_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Company Policy/Procedure Before: ' + ISNULL(@company_policy_procedure_b, '') + ']' +
														'[Company Policy/Procedure After: ' + ISNULL(@company_policy_procedure, '') + ']'
			SET @has_update = 1
		END

		IF NOT ISNULL(@summary_account COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@summary_account_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Summary Account Before: ' + ISNULL((SELECT
																									account_code + ' - ' + account_name
																								FROM
																									ums.chart_of_accounts
																								WHERE
																									sysid_account = @summary_account_b), '') + ']' +
														'[Summary Account After: ' + ISNULL((SELECT
																									account_code + ' - ' + account_name
																								FROM
																									ums.chart_of_accounts
																								WHERE
																									sysid_account = @summary_account), '') + ']'
			SET @has_update = 1
		END

		IF NOT @is_debit_side_increase = @is_debit_side_increase_b
		BEGIN

			IF @is_debit_side_increase = 1
			BEGIN
				SET @debit_side_string = 'YES'
			END
			ELSE
			BEGIN
				SET @debit_side_string = 'NO'
			END

			IF @is_debit_side_increase_b = 1
			BEGIN
				SET @debit_side_string_b = 'YES'
			END
			ELSE
			BEGIN
				SET @debit_side_string_b = 'NO'
			END

			SET @transaction_done = @transaction_done + '[Is Debit Side Increase Before: ' + ISNULL(@debit_side_string_b, '') + ']' +
														'[Is Debit Side Increase After: ' + ISNULL(@debit_side_string, '') +  ']'
			SET @has_update = 1
		END	


		IF NOT @is_active_account = @is_active_account_b
		BEGIN

			IF @is_active_account = 1
			BEGIN
				SET @active_string = 'YES'
			END
			ELSE
			BEGIN
				SET @active_string = 'NO'
			END

			IF @is_active_account_b = 1
			BEGIN
				SET @active_string_b = 'YES'
			END
			ELSE
			BEGIN
				SET @active_string_b = 'NO'
			END

			SET @transaction_done = @transaction_done + '[Is Active Account Before: ' + ISNULL(@active_string_b, '') + ']' +
														'[Is Active Account After: ' + ISNULL(@active_string, '') +  ']'
			SET @has_update = 1
		END	

		IF @has_update = 1
		BEGIN

			UPDATE ums.chart_of_accounts SET
				accounting_category_id = @accounting_category_id,
				account_code = @account_code,
				account_name = @account_name,
				account_description = @account_description,
				company_policy_procedure = @company_policy_procedure,
				summary_account = @summary_account,
				is_debit_side_increase = @is_debit_side_increase,
				is_active_account = @is_active_account,

				edited_on = GETDATE(),
				edited_by = @edited_by
			WHERE
				sysid_account = @sysid_account

			SET @transaction_done = 'UPDATED an account in the chart of accounts ' + 
									'[Account ID: ' + ISNULL(@sysid_account, '') +
									']' + @transaction_done

			IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
			BEGIN
				SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @edited_by
			END
					
			EXECUTE ums.InsertTransactionLog @edited_by, @network_information, @transaction_done	

		END

		FETCH NEXT FROM chart_of_accounts_update_cursor
			INTO @sysid_account, @accounting_category_id, @account_code, @account_name, @account_description,
						@company_policy_procedure, @summary_account, @is_debit_side_increase, @is_active_account, @edited_by

	END

	CLOSE chart_of_accounts_update_cursor
	DEALLOCATE chart_of_accounts_update_cursor

GO
-----------------------------------------------------------------

-- verifies that the trigger "Chart_Of_Accounts_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.Chart_Of_Accounts_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.Chart_Of_Accounts_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.Chart_Of_Accounts_Trigger_Instead_Delete
	ON  ums.chart_of_accounts
	INSTEAD OF DELETE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Delete a chart of accounts', 'Chart Of Accounts'
	
GO
-------------------------------------------------------------------------


-- verifies if the procedure "InsertChartOfAccounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertChartOfAccounts')
   DROP PROCEDURE ums.InsertChartOfAccounts
GO

CREATE PROCEDURE ums.InsertChartOfAccounts

	@sysid_account varchar (50) = '',
	@accounting_category_id varchar (50) = '',
	@account_code varchar (50) = '',
	@account_name varchar (150) = '',
	@account_description varchar (MAX) = '',
	@company_policy_procedure varchar (MAX) = '',
	@summary_account varchar (50) = '',
	@is_debit_side_increase bit = 0,
	@is_active_account bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@created_by) = 1)) AND
		(ums.IsValidCategoryBySummaryAccountChartOfAcc(@accounting_category_id, @summary_account) = 1)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		IF (NOT @summary_account IS NULL)
		BEGIN
			SELECT @is_debit_side_increase = is_debit_side_increase FROM ums.chart_of_accounts WHERE sysid_account = @summary_account
		END

		INSERT INTO ums.chart_of_accounts
		(
			sysid_account,
			accounting_category_id,
			account_code,
			account_name,
			account_description,
			company_policy_procedure,
			summary_account,
			is_debit_side_increase,
			is_active_account,

			created_by
		)
		VALUES
		(
			@sysid_account,
			@accounting_category_id,
			@account_code,
			@account_name,
			@account_description,
			@company_policy_procedure,
			@summary_account,
			@is_debit_side_increase,
			@is_active_account,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a chart of accounts', 'Chart Of Accounts'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertChartOfAccounts TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateChartOfAccounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateChartOfAccounts')
   DROP PROCEDURE ums.UpdateChartOfAccounts
GO

CREATE PROCEDURE ums.UpdateChartOfAccounts

	@sysid_account varchar (50) = '',
	@accounting_category_id varchar (50) = '',
	@account_code varchar (50) = '',
	@account_name varchar (150) = '',
	@account_description varchar (MAX) = '',
	@company_policy_procedure varchar (MAX) = '',
	@summary_account varchar (50) = '',
	@is_debit_side_increase bit = 0,
	@is_active_account bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsValidCategoryBySummaryAccountChartOfAcc(@accounting_category_id, @summary_account) = 1)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		IF (NOT @summary_account IS NULL)
		BEGIN
			SELECT @is_debit_side_increase = is_debit_side_increase FROM ums.chart_of_accounts WHERE sysid_account = @summary_account
		END

		UPDATE ums.chart_of_accounts SET
			accounting_category_id = @accounting_category_id,
			account_code = @account_code,
			account_name = @account_name,
			account_description = @account_description,
			company_policy_procedure = @company_policy_procedure,
			summary_account = @summary_account,
			is_debit_side_increase = @is_debit_side_increase,
			is_active_account = @is_active_account,

			edited_by = @edited_by
		WHERE
			sysid_account = @sysid_account
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a chart of accounts', 'Chart Of Accounts'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateChartOfAccounts TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectChartOfAccounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectChartOfAccounts')
   DROP PROCEDURE ums.SelectChartOfAccounts
GO

CREATE PROCEDURE ums.SelectChartOfAccounts
	
	@query_string varchar (50) = '',
	@summary_account varchar (50) = '',
	@accounting_category_id_list nvarchar (MAX) = '',
	@is_active_account bit = 0,

	@system_user_id varchar(50) = ''
	
AS

	-- A - '*'
	-- B - Summary Account
	-- C - Accounting Category ID List

	--	A	B	C	
	-- ============
	--	0	0	0
	--	0	0	1
	--	0	1	0
	--	0	1	1
	--	1	0	0
	--	1	0	1
	--	1	1	0	
	--	1	1	1

	
	IF (ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@system_user_id) = 1)
	BEGIN

		SELECT @query_string = '%' + RTRIM(LTRIM(@query_string)) + '%'

		IF (NOT ISNULL(@query_string, '') = '%*%') AND (ISNULL(@summary_account, '') = '') AND		-- (000)
				(ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				((coa.account_code LIKE @query_string) OR 
				((REPLACE(coa.account_code, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_name LIKE @query_string) OR 
				((REPLACE(coa.account_name, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_description LIKE @query_string) OR 
				((REPLACE(coa.account_description, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.company_policy_procedure LIKE @query_string) OR 
				((REPLACE(coa.company_policy_procedure, ' ', '')) LIKE REPLACE(@query_string, ' ', ''))) AND
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code

		END
		ELSE IF (NOT ISNULL(@query_string, '') = '%*%') AND (ISNULL(@summary_account, '') = '') AND		-- (001)
				(NOT ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			INNER JOIN ums.IterateListToTable (@accounting_category_id_list, ',') AS acidl_list ON acidl_list.var_str = acg.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				((coa.account_code LIKE @query_string) OR 
				((REPLACE(coa.account_code, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_name LIKE @query_string) OR 
				((REPLACE(coa.account_name, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_description LIKE @query_string) OR 
				((REPLACE(coa.account_description, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.company_policy_procedure LIKE @query_string) OR 
				((REPLACE(coa.company_policy_procedure, ' ', '')) LIKE REPLACE(@query_string, ' ', ''))) AND
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code

		END
		ELSE IF (NOT ISNULL(@query_string, '') = '%*%') AND (NOT ISNULL(@summary_account, '') = '') AND		-- (010)
				(ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				((coa.account_code LIKE @query_string) OR 
				((REPLACE(coa.account_code, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_name LIKE @query_string) OR 
				((REPLACE(coa.account_name, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_description LIKE @query_string) OR 
				((REPLACE(coa.account_description, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.company_policy_procedure LIKE @query_string) OR 
				((REPLACE(coa.company_policy_procedure, ' ', '')) LIKE REPLACE(@query_string, ' ', ''))) AND
				(coa.summary_account = @summary_account) AND
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code

		END
		ELSE IF (NOT ISNULL(@query_string, '') = '%*%') AND (NOT ISNULL(@summary_account, '') = '') AND		-- (011)
				(NOT ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			INNER JOIN ums.IterateListToTable (@accounting_category_id_list, ',') AS acidl_list ON acidl_list.var_str = acg.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				((coa.account_code LIKE @query_string) OR 
				((REPLACE(coa.account_code, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_name LIKE @query_string) OR 
				((REPLACE(coa.account_name, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_description LIKE @query_string) OR 
				((REPLACE(coa.account_description, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.company_policy_procedure LIKE @query_string) OR 
				((REPLACE(coa.company_policy_procedure, ' ', '')) LIKE REPLACE(@query_string, ' ', ''))) AND
				(coa.summary_account = @summary_account) AND
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code

		END
		ELSE IF (ISNULL(@query_string, '') = '%*%') AND (ISNULL(@summary_account, '') = '') AND		-- (100)
				(ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code
	
		END
		ELSE IF (ISNULL(@query_string, '') = '%*%') AND (ISNULL(@summary_account, '') = '') AND		-- (101)
				(NOT ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			INNER JOIN ums.IterateListToTable (@accounting_category_id_list, ',') AS acidl_list ON acidl_list.var_str = acg.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code

		END
		ELSE IF (ISNULL(@query_string, '') = '%*%') AND (NOT ISNULL(@summary_account, '') = '') AND		-- (110)
				(ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				(coa.summary_account = @summary_account) AND
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code

		END
		ELSE IF (ISNULL(@query_string, '') = '%*%') AND (NOT ISNULL(@summary_account, '') = '') AND		-- (111)
				(NOT ISNULL(@accounting_category_id_list, '') = '')
		BEGIN

			SELECT
				coa.sysid_account AS sysid_account,
				coa.account_code AS account_code,
				coa.account_name AS account_name,
				coa.is_debit_side_increase AS is_debit_side_increase,
				coa.is_active_account AS is_active_account,

				--coa.accounting_category_id
				acg.accounting_category_id AS accounting_category_id,
				acg.category_description AS category_description,

				--coa.summary_account
				summary_coa.sysid_account AS sysid_account_summary,
				summary_coa.account_code AS account_code_summary,
				summary_coa.account_name AS account_name_summary,
				summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
				summary_coa.is_active_account AS is_active_account_summary,

				--summary_coa.accounting_category_id
				summary_acg.accounting_category_id AS accounting_category_id_summary,
				summary_acg.category_description AS category_description_summary
			FROM
				ums.chart_of_accounts AS coa
			INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
			INNER JOIN ums.IterateListToTable (@accounting_category_id_list, ',') AS acidl_list ON acidl_list.var_str = acg.accounting_category_id
			LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
			LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
			WHERE
				(coa.summary_account = @summary_account) AND
				(coa.is_active_account = @is_active_account)
			ORDER BY
				coa.account_code

		END

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a chart of accounts', 'Chart Of Accounts'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectChartOfAccounts TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDAccountChartOfAccounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDAccountChartOfAccounts')
   DROP PROCEDURE ums.SelectBySysIDAccountChartOfAccounts
GO

CREATE PROCEDURE ums.SelectBySysIDAccountChartOfAccounts

	@sysid_account varchar (50) = '',

	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT
			coa.sysid_account AS sysid_account,
			coa.account_code AS account_code,
			coa.account_name AS account_name,
			coa.account_description AS account_description,
			coa.company_policy_procedure AS company_policy_procedure,
			coa.is_debit_side_increase AS is_debit_side_increase,
			coa.is_active_account AS is_active_account,

			--coa.accounting_category_id
			acg.accounting_category_id AS accounting_category_id,
			acg.category_description AS category_description,

			--coa.summary_account
			summary_coa.sysid_account AS sysid_account_summary,
			summary_coa.account_code AS account_code_summary,
			summary_coa.account_name AS account_name_summary,
			summary_coa.account_description AS account_description_summary,
			summary_coa.company_policy_procedure AS company_policy_procedure_summary,
			summary_coa.is_debit_side_increase AS is_debit_side_increase_summary,
			summary_coa.is_active_account AS is_active_account_summary,

			--summary_coa.accounting_category_id
			summary_acg.accounting_category_id AS accounting_category_id_summary,
			summary_acg.category_description AS category_description_summary
		FROM
			ums.chart_of_accounts AS coa
		INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
		LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
		LEFT JOIN ums.accounting_category AS summary_acg ON summary_acg.accounting_category_id = summary_coa.accounting_category_id
		WHERE
			(coa.sysid_account = @sysid_account)
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a chart of accounts', 'Chart Of Accounts'		
	END
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDAccountChartOfAccounts TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountChartOfAccounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountChartOfAccounts')
   DROP PROCEDURE ums.GetCountChartOfAccounts
GO

CREATE PROCEDURE ums.GetCountChartOfAccounts

	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT COUNT(sysid_account) FROM ums.chart_of_accounts
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a chart of accounts', 'Chart Of Accounts'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountChartOfAccounts TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDChartOfAccount" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDChartOfAccount')
   DROP PROCEDURE ums.IsExistsSysIDChartOfAccount
GO

CREATE PROCEDURE ums.IsExistsSysIDChartOfAccount

	@sysid_account varchar (50) = '',

	@system_user_id varchar (50) = ''	
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsSysIDChartOfAcc(@sysid_account)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a chart of account', 'Chart Of Account'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDChartOfAccount TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsValidCategoryBySummaryAccountChartOfAccount" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsValidCategoryBySummaryAccountChartOfAccount')
   DROP PROCEDURE ums.IsValidCategoryBySummaryAccountChartOfAccount
GO

CREATE PROCEDURE ums.IsValidCategoryBySummaryAccountChartOfAccount

	@accounting_category_id varchar (50) = '',
	@summary_account varchar (50) = '',

	@system_user_id varchar (50) = ''	
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsValidCategoryBySummaryAccountChartOfAcc(@accounting_category_id, @summary_account)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a chart of account', 'Chart Of Account'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsValidCategoryBySummaryAccountChartOfAccount TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsAccountCodeChartOfAccount" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsAccountCodeChartOfAccount')
   DROP PROCEDURE ums.IsExistsAccountCodeChartOfAccount
GO

CREATE PROCEDURE ums.IsExistsAccountCodeChartOfAccount

	@sysid_account varchar (50) = '',
	@account_code varchar (50) = '',
	@summary_account varchar (50) = '',

	@system_user_id varchar (50) = ''	
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsBookkeeperSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsAccountCodeChartOfAcc(@sysid_account, @account_code, @summary_account)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a chart of account', 'Chart Of Account'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsAccountCodeChartOfAccount TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDChartOfAcc" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDChartOfAcc') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDChartOfAcc
GO

CREATE FUNCTION ums.IsExistsSysIDChartOfAcc
(	
	@sysid_account varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_account FROM ums.chart_of_accounts WHERE sysid_account = @sysid_account)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsValidCategoryBySummaryAccountChartOfAcc" function already exist
IF OBJECT_ID (N'ums.IsValidCategoryBySummaryAccountChartOfAcc') IS NOT NULL
   DROP FUNCTION ums.IsValidCategoryBySummaryAccountChartOfAcc
GO

CREATE FUNCTION ums.IsValidCategoryBySummaryAccountChartOfAcc
(	
	@accounting_category_id varchar (50) = '',
	@summary_account varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF (@summary_account IS NULL) OR
		(EXISTS (SELECT 
					sysid_account 
				FROM 
					ums.chart_of_accounts AS coa
				INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
				WHERE 
					(sysid_account = @summary_account) AND
					(acg.category_no <= (SELECT category_no FROM ums.accounting_category WHERE accounting_category_id = @accounting_category_id))))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsAccountCodeChartOfAcc" function already exist
IF OBJECT_ID (N'ums.IsExistsAccountCodeChartOfAcc') IS NOT NULL
   DROP FUNCTION ums.IsExistsAccountCodeChartOfAcc
GO

CREATE FUNCTION ums.IsExistsAccountCodeChartOfAcc
(	
	@sysid_account varchar (50) = '',
	@account_code varchar (50) = '',
	@summary_account varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_account FROM ums.chart_of_accounts WHERE NOT sysid_account = @sysid_account AND 
															((REPLACE(account_code, ' ', '')) LIKE REPLACE(@account_code, ' ', '')) AND
															((REPLACE(ISNULL(summary_account, ''), ' ', '')) LIKE REPLACE(ISNULL(@summary_account, ''), ' ', '')))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- ################################################END TABLE "chart_of_accounts" OBJECTS######################################################





-- ################################################TABLE "student_payments" OBJECTS######################################################
-- verifies if the student_payments table exists
IF OBJECT_ID('ums.student_payments', 'U') IS NOT NULL
	DROP TABLE ums.student_payments
GO

CREATE TABLE ums.student_payments 			
(
	payment_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Payments_Payment_ID_PK PRIMARY KEY (payment_id),
	sysid_student varchar (50) NOT NULL
		CONSTRAINT Student_Payments_SysID_Student_FK FOREIGN KEY REFERENCES ums.student_information(sysid_student) ON UPDATE NO ACTION,
	payment_date datetime NOT NULL
		CONSTRAINT Student_Payments_Payment_Date_CK CHECK (CONVERT(varchar, payment_date, 109) LIKE '%12:00:00:000AM'),
	receipt_date datetime NOT NULL
		CONSTRAINT Student_Payments_Receipt_Date_CK CHECK (CONVERT(varchar, receipt_date, 109) LIKE '%12:00:00:000AM'),
	receipt_no varchar (50) NOT NULL
		CONSTRAINT Student_Payments_Receipt_No_UQ UNIQUE (receipt_no),
	remarks varchar (100) NULL,

	is_downpayment bit NOT NULL DEFAULT(0),

	amount decimal (12, 2) NOT NULL,
	discount_amount decimal (12, 2) NULL,
	amount_tendered decimal (12, 2) NULL,

	bank varchar (50) NULL,
	check_no varchar (50) NULL,

	sysid_account_credit varchar (50) NOT NULL
		CONSTRAINT Student_Payments_SysID_Account_Credit_FK FOREIGN KEY REFERENCES ums.chart_of_accounts(sysid_account) ON UPDATE NO ACTION,
	is_miscellaneous_income bit NOT NULL DEFAULT(0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Payments_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Payments_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Payments_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_payments table 
CREATE INDEX Student_Payments_Payment_ID_Index
	ON ums.student_payments (payment_id DESC)
GO
------------------------------------------------------------------

-- create an index of the student_payments table 
CREATE INDEX Student_Payments_Receipt_Date_Index
	ON ums.student_payments (receipt_date DESC)
GO
------------------------------------------------------------------

-- create an index of the student_payments table 
CREATE INDEX Student_Payments_Created_On_Index
	ON ums.student_payments (created_on DESC)
GO
------------------------------------------------------------------

-- create an index of the student_payments table 
CREATE INDEX Student_Payments_Created_By_Index
	ON ums.student_payments (created_by DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentPayments" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentPayments')
   DROP PROCEDURE ums.InsertStudentPayments
GO

CREATE PROCEDURE ums.InsertStudentPayments

	@sysid_student varchar (50) = '',
	@payment_date datetime,
	@receipt_date datetime,
	@receipt_no varchar (50) = '',
	@remarks varchar (100) = '',
	@is_downpayment bit = 0,
	@amount decimal (12, 2) = 0,
	@discount_amount decimal (12, 2) = 0,
	@amount_tendered decimal (12, 2) = 0,
	@bank varchar (50) = '',
	@check_no varchar (50) = '',
	@sysid_account_credit varchar (50) = '',
	@is_miscellaneous_income bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(@receipt_date, GETDATE()) = 0) AND
		(ums.IsExistsReceiptNoStudentPay(NULL, @receipt_no) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_payments
		(
			sysid_student,
			payment_date,
			receipt_date,
			receipt_no,
			remarks,
			is_downpayment,
			amount,
			discount_amount,
			amount_tendered,
			bank,
			check_no,
			sysid_account_credit,
			is_miscellaneous_income,

			created_by
		)
		VALUES
		(
			@sysid_student,
			@payment_date,
			@receipt_date,
			@receipt_no,
			@remarks,
			@is_downpayment,
			@amount,
			@discount_amount,
			@amount_tendered,
			@bank,
			@check_no,
			@sysid_account_credit,
			@is_miscellaneous_income,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student payments', 'Student Payments'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentPayments TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentPayments" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentPayments')
   DROP PROCEDURE ums.UpdateStudentPayments
GO

CREATE PROCEDURE ums.UpdateStudentPayments

	@payment_id bigint = 0,
	@payment_date datetime,
	@receipt_date datetime,
	@receipt_no varchar (50) = '',
	@remarks varchar (100) = '',
	@is_downpayment bit = 0,
	@amount decimal (12, 2) = 0,
	@discount_amount decimal (12, 2) = 0,
	@amount_tendered decimal (12, 2) = 0,
	@bank varchar (50) = '',
	@check_no varchar (50) = '',
	@sysid_account_credit varchar (50) = '',
	@is_miscellaneous_income bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(@receipt_date, (SELECT
																	created_on
																FROM
																	ums.student_payments
																WHERE
																	(payment_id = @payment_id))) = 0) AND
		(ums.IsExistsReceiptNoStudentPay(@payment_id, @receipt_no) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_payments SET
			payment_date = @payment_date,
			receipt_date = @receipt_date,
			receipt_no = @receipt_no,
			remarks = @remarks,
			is_downpayment = @is_downpayment,
			amount = @amount,
			discount_amount = @discount_amount,			
			amount_tendered = @amount_tendered,
			bank = @bank,
			check_no = @check_no,
			sysid_account_credit = @sysid_account_credit,
			is_miscellaneous_income = @is_miscellaneous_income,

			edited_by = @edited_by
		WHERE
			payment_id = @payment_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student payments', 'Student Payments'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentPayments TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentPayments" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentPayments')
   DROP PROCEDURE ums.DeleteStudentPayments
GO

CREATE PROCEDURE ums.DeleteStudentPayments

	@payment_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, 
												(SELECT
														created_on
													FROM
														ums.student_payments
													WHERE
														(payment_id = @payment_id))) = 0)
	BEGIN

		IF EXISTS (SELECT payment_id FROM ums.student_payments WHERE payment_id = @payment_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_payments SET
				edited_by = @deleted_by
			WHERE
				payment_id = @payment_id

			DELETE FROM ums.student_payments WHERE payment_id = @payment_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student payments', 'Student Payments'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentPayments TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsPaymentBySysIDStudentDateStartEndStudentPayments" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsPaymentBySysIDStudentDateStartEndStudentPayments')
   DROP PROCEDURE ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPayments
GO

CREATE PROCEDURE ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPayments

	@sysid_student varchar (50) = '',
	@date_start datetime,
	@date_end datetime,

	@system_user_id varchar (50) = ''	
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)  OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsStudentDataControllerSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN

		DECLARE @is_exists_payment bit

		SELECT @is_exists_payment = ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPay(@sysid_student, @date_start, @date_end)

		IF (@is_exists_payment = 0)
		BEGIN

			DECLARE	@sysid_student_list nvarchar (MAX)
			DECLARE	@exclude_sysid_enrolmentlevel_list nvarchar (MAX)
			DECLARE	@date_ending datetime

			SET @sysid_student_list = @sysid_student
			SET @exclude_sysid_enrolmentlevel_list = NULL
			SET @date_ending = DATEADD(dd, -1, @date_start)


			--NOTE: IF THIS PROCEDURE IS UPDATED, COPY THE UPDATED CODES IN THE PROCEDURE SelectBySysIDStudentListDateEndingBalanceCarriedForwardStudentLoad##################
			--THIS IS DUE TO "AN INSERT EXEC statement cannot be nested." error so multiple calling of procedure cannot be done.

			DECLARE @balance_forward_table TABLE (table_id int IDENTITY (1, 1) NOT NULL PRIMARY KEY,
											sysid_student varchar (50) NOT NULL,
											amount decimal (12, 2) NOT NULL)

			DECLARE @student_level_table TABLE (table_id int IDENTITY(1, 1) NOT NULL PRIMARY KEY,
											sysid_student varchar (50) NULL,
											sysid_enrolmentlevel varchar (50) NULL,
											sysid_feelevel varchar (50) NULL,
											sysid_semester varchar (50) NULL,
											is_graduate_student bit NOT NULL DEFAULT (0),
											is_international bit NOT NULL DEFAULT (0),
											is_marked_deleted bit NOT NULL DEFAULT (0),
											enrolment_level_no int NOT NULL DEFAULT (0))

			DECLARE @school_fee_details_table TABLE (table_id int IDENTITY(1, 1) NOT NULL PRIMARY KEY,
											return_table_id int NOT NULL DEFAULT (0),
											sysid_student varchar (50) NOT NULL,
											sysid_enrolmentlevel varchar (50) NULL,
											sysid_feedetails varchar (50) NULL,
											sysid_feeparticular varchar (50) NULL,
											is_level_increase bit NOT NULL DEFAULT (0),
											is_added_level_fee bit NOT NULL DEFAULT (0),
											amount decimal (12, 2) NOT NULL,
											fee_category_id varchar (50) NOT NULL,
											category_description varchar (100) NOT NULL,
											particular_description varchar (100) NOT NULL,
											is_office_access bit NOT NULL DEFAULT (0),			
											category_no tinyint NOT NULL,
											additional_fee_id bigint NULL,
											optional_fee_id bigint NULL,
											is_additional_fee bit NOT NULL DEFAULT (0),
											is_optional_fee bit NOT NULL DEFAULT (0),
											is_per_year_tuition_fee bit NOT NULL DEFAULT (0),
											is_per_unit_tuition_fee bit NOT NULL DEFAULT (0),
											is_fixed_amount_tuition_fee bit NOT NULL DEFAULT (0),
											is_special_class_tuition_fee bit NOT NULL DEFAULT (0),
											international_percentage float NULL,
											remarks varchar (100) NULL)

			DECLARE @sysid_enrolmentlevel varchar (50)
			DECLARE @sysid_feelevel varchar (50)
			DECLARE @sysid_semester varchar (50)
			DECLARE @is_graduate_student bit
			DECLARE @is_international bit
			DECLARE @is_marked_deleted bit

			DECLARE @total_student_balance_forwarded decimal (12, 2)
			DECLARE @total_tuition decimal (12, 2)
			DECLARE @total_reimbursements decimal (12, 2)
			DECLARE @total_credit_memo decimal (12, 2)
			DECLARE @total_payments decimal (12, 2)
			DECLARE @total_discounts decimal (12, 2)

			IF (NOT ISNULL(@exclude_sysid_enrolmentlevel_list, '') = '')
			BEGIN

				INSERT INTO @student_level_table (sysid_student, sysid_enrolmentlevel, sysid_feelevel, sysid_semester, is_graduate_student, 
						is_international, is_marked_deleted, enrolment_level_no)
					SELECT
						ssl_list.var_str AS sysid_student,
						sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
						sel.sysid_feelevel AS sysid_feelevel,
						sel.sysid_semester AS sysid_semester,
						sel.is_graduate_student AS is_graduate_student,
						sel.is_international AS is_international,
						sel.is_marked_deleted AS is_marked_deleted,
						sel.enrolment_level_no AS enrolment_level_no
					FROM
						ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list	
					INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_student = ssl_list.var_str
					INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
					INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
					INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
					INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
					INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
					LEFT JOIN ums.IterateListToTable (@exclude_sysid_enrolmentlevel_list, ',') AS esel_list ON esel_list.var_str = sel.sysid_enrolmentlevel
					INNER JOIN
						(

							SELECT
								inner_sec.sysid_student AS sysid_student,
								inner_sy.year_id AS year_id
							FROM
								ums.student_enrolment_course AS inner_sec
							INNER JOIN ums.student_enrolment_level AS inner_sel ON inner_sel.sysid_enrolmentcourse = inner_sec.sysid_enrolmentcourse
							INNER JOIN ums.IterateListToTable (@exclude_sysid_enrolmentlevel_list, ',') AS inner_esel_list ON 
											inner_esel_list.var_str = inner_sel.sysid_enrolmentlevel
							INNER JOIN ums.school_fee_level AS inner_sfl ON inner_sfl.sysid_feelevel = inner_sel.sysid_feelevel
							INNER JOIN ums.school_fee_information AS inner_sfi ON inner_sfi.sysid_schoolfee = inner_sfl.sysid_schoolfee
							INNER JOIN ums.school_year AS inner_sy ON inner_sy.year_id = inner_sfi.year_id

						) AS filter_sel ON filter_sel.sysid_student = ssl_list.var_str
					WHERE
						(cg.is_semestral = 0) AND			--no is_marked_deleted because deleted levels might have additional fees to be added in the balance
						(NOT sy.date_start > @date_ending) AND
						(NOT sy.year_id = filter_sel.year_id) AND
						(esel_list.var_str IS NULL)
					UNION ALL
					SELECT
						ssl_list.var_str AS sysid_student,
						sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
						sel.sysid_feelevel AS sysid_feelevel,
						sel.sysid_semester AS sysid_semester,
						sel.is_graduate_student AS is_graduate_student,
						sel.is_international AS is_international,
						sel.is_marked_deleted AS is_marked_deleted,
						sel.enrolment_level_no AS enrolment_level_no
					FROM
						ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list	
					INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_student = ssl_list.var_str
					INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
					INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
					INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
					INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
					LEFT JOIN ums.IterateListToTable (@exclude_sysid_enrolmentlevel_list, ',') AS esel_list ON esel_list.var_str = sel.sysid_enrolmentlevel
					INNER JOIN
						(

							SELECT
								inner_sec.sysid_student AS sysid_student,
								inner_sel.sysid_semester AS sysid_semester
							FROM
								ums.student_enrolment_course AS inner_sec
							INNER JOIN ums.student_enrolment_level AS inner_sel ON inner_sel.sysid_enrolmentcourse = inner_sec.sysid_enrolmentcourse
							INNER JOIN ums.IterateListToTable (@exclude_sysid_enrolmentlevel_list, ',') AS inner_esel_list ON 
											inner_esel_list.var_str = inner_sel.sysid_enrolmentlevel

						) AS filter_sel ON filter_sel.sysid_student = ssl_list.var_str
					WHERE
						(cg.is_semestral = 1) AND			--no is_marked_deleted because deleted levels might have additional fees to be added in the balance
						(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
						(NOT sri.date_start > @date_ending) AND
						(NOT filter_sel.sysid_semester IS NULL AND NOT filter_sel.sysid_semester = '') AND
						(NOT sri.sysid_semester = filter_sel.sysid_semester) AND
						(esel_list.var_str IS NULL)
					UNION ALL
					SELECT	--------------FOR ENROLMENT LEVELS THAT HAS BEEN ENROLLED/DELETED ON THE SAME SCHOOL YEAR/SEMESTER OF THE EXCLUDED LEVEL----------------------
						ssl_list.var_str AS sysid_student,								--this will include in the balance carried forward any additional fee
						sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,				--that has been created for the withdrawn/deleted level that is of the same
						sel.sysid_feelevel AS sysid_feelevel,							--year/semester based on the excluded levels
						sel.sysid_semester AS sysid_semester,
						sel.is_graduate_student AS is_graduate_student,
						sel.is_international AS is_international,
						sel.is_marked_deleted AS is_marked_deleted,
						sel.enrolment_level_no AS enrolment_level_no
					FROM
						ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list	
					INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_student = ssl_list.var_str
					INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
					INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
					INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
					INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
					INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
					LEFT JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
					LEFT JOIN ums.IterateListToTable (@exclude_sysid_enrolmentlevel_list, ',') AS esel_list ON esel_list.var_str = sel.sysid_enrolmentlevel	
					INNER JOIN
						(

							SELECT
								inner_sec.sysid_student AS sysid_student,
								inner_sel.sysid_semester AS sysid_semester,
								inner_sel.is_marked_deleted AS is_marked_deleted,
								inner_sel.enrolment_level_no AS enrolment_level_no,
								inner_sy.year_id AS year_id,
								inner_cg.is_semestral AS is_semestral
							FROM
								ums.student_enrolment_course AS inner_sec
							INNER JOIN ums.student_enrolment_level AS inner_sel ON inner_sel.sysid_enrolmentcourse = inner_sec.sysid_enrolmentcourse
							INNER JOIN ums.IterateListToTable (@exclude_sysid_enrolmentlevel_list, ',') AS inner_esel_list ON 
											inner_esel_list.var_str = inner_sel.sysid_enrolmentlevel
							INNER JOIN ums.school_fee_level AS inner_sfl ON inner_sfl.sysid_feelevel = inner_sel.sysid_feelevel
							INNER JOIN ums.school_fee_information AS inner_sfi ON inner_sfi.sysid_schoolfee = inner_sfl.sysid_schoolfee
							INNER JOIN ums.school_year AS inner_sy ON inner_sy.year_id = inner_sfi.year_id
							INNER JOIN ums.year_level_information AS inner_yli ON inner_yli.year_level_id = inner_sfl.year_level_id
							INNER JOIN ums.course_group AS inner_cg ON inner_cg.course_group_id = inner_yli.course_group_id

						) AS filter_sel ON filter_sel.sysid_student = ssl_list.var_str
					WHERE
						(esel_list.var_str IS NULL) AND		--no is_marked_deleted because deleted levels might have additional fees to be added in the balance
						(((filter_sel.is_semestral = 0) AND	--yearly
						((sy.year_id = filter_sel.year_id) OR
						((NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
						(sri.year_id = filter_sel.year_id)))) OR						
						(((NOT filter_sel.sysid_semester IS NULL AND NOT filter_sel.sysid_semester = '') AND --semestral
													(filter_sel.is_semestral = 1)) AND 
						(((NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
						(sri.sysid_semester = filter_sel.sysid_semester)) OR
						((cg.is_semestral = 0) AND (sy.year_id = filter_sel.year_id)))))
					ORDER BY
						enrolment_level_no ASC

			END
			ELSE		--THE LEVEL IS A CANDIDATE FOR ENROLMENT
			BEGIN

				INSERT INTO @student_level_table (sysid_student, sysid_enrolmentlevel, sysid_feelevel, sysid_semester, is_graduate_student, 
						is_international, is_marked_deleted, enrolment_level_no)
					SELECT
						ssl_list.var_str AS sysid_student,
						sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
						sel.sysid_feelevel AS sysid_feelevel,
						sel.sysid_semester AS sysid_semester,
						sel.is_graduate_student AS is_graduate_student,
						sel.is_international AS is_international,
						sel.is_marked_deleted AS is_marked_deleted,
						sel.enrolment_level_no AS enrolment_level_no
					FROM
						ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list	
					INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_student = ssl_list.var_str
					INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
					INNER JOIN ums.school_fee_information AS sfi ON sfi.sysid_schoolfee = sfl.sysid_schoolfee
					INNER JOIN ums.school_year AS sy ON sy.year_id = sfi.year_id
					INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
					INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
					WHERE
						(cg.is_semestral = 0) AND			--no is_marked_deleted because deleted levels might have additional fees to be added in the balance
						(NOT sy.date_start > @date_ending)
	--					((NOT sy.date_start > @date_ending) OR									--is commented because of the "Student Balances Prooflist" which if the report is generated
	--					(DATEADD(dd, 1, @date_ending) BETWEEN sy.date_start AND sy.date_end))	--for second sem and the student has an enrolment record for summer,
																								--the enrolment record for summer will be included even if the 
																								--date ending is on march 31 because of the DATEADD function.
					UNION ALL
					SELECT
						ssl_list.var_str AS sysid_student,
						sel.sysid_enrolmentlevel AS sysid_enrolmentlevel,
						sel.sysid_feelevel AS sysid_feelevel,
						sel.sysid_semester AS sysid_semester,
						sel.is_graduate_student AS is_graduate_student,
						sel.is_international AS is_international,
						sel.is_marked_deleted AS is_marked_deleted,
						sel.enrolment_level_no AS enrolment_level_no
					FROM
						ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list	
					INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_student = ssl_list.var_str
					INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentcourse = sec.sysid_enrolmentcourse
					INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
					INNER JOIN ums.semester_information AS sri ON sri.sysid_semester = sel.sysid_semester
					INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
					INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
					WHERE
						(cg.is_semestral = 1) AND			--no is_marked_deleted because deleted levels might have additional fees to be added in the balance
						(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
						(NOT sri.date_start > @date_ending)
	--					((NOT sri.date_start > @date_ending) OR									--is commented because of the "Student Balances Prooflist" which if the report is generated
	--					(DATEADD(dd, 1, @date_ending) BETWEEN sri.date_start AND sri.date_end))	--for second sem and the student has an enrolment record for summer,
																								--the enrolment record for summer will be included even if the 
																								--date ending is on march 31 because of the DATEADD function.
					ORDER BY
						enrolment_level_no ASC

			END

			DECLARE student_level_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
				FOR SELECT slt.sysid_student, slt.sysid_enrolmentlevel, slt.sysid_feelevel, slt.sysid_semester, slt.is_graduate_student, 
						slt.is_international, slt.is_marked_deleted	
					FROM 			
						@student_level_table AS slt

			OPEN student_level_cursor

			FETCH NEXT FROM student_level_cursor
				INTO @sysid_student, @sysid_enrolmentlevel, @sysid_feelevel, @sysid_semester, @is_graduate_student, @is_international, @is_marked_deleted

			WHILE @@FETCH_STATUS = 0
			BEGIN	

				INSERT INTO @school_fee_details_table (return_table_id, sysid_student, sysid_enrolmentlevel, sysid_feedetails, sysid_feeparticular, 
						is_level_increase, is_added_level_fee, amount, fee_category_id, category_description, particular_description,  is_office_access, category_no, 
						additional_fee_id, optional_fee_id, is_additional_fee, is_optional_fee, is_per_year_tuition_fee, is_per_unit_tuition_fee, 
						is_fixed_amount_tuition_fee, is_special_class_tuition_fee, international_percentage, remarks)
				EXECUTE 
						ums.SelectBySysIDStudentFeeLevelSemesterSchoolFeeDetailsStudentLoad @sysid_student, @sysid_enrolmentlevel, @sysid_feelevel, @sysid_semester, 
											@is_graduate_student, @is_international, 1, @is_marked_deleted, 0, @system_user_id
				
				
				FETCH NEXT FROM student_level_cursor
					INTO @sysid_student, @sysid_enrolmentlevel, @sysid_feelevel, @sysid_semester, @is_graduate_student, @is_international, @is_marked_deleted


			END

			CLOSE student_level_cursor
			DEALLOCATE student_level_cursor

			DECLARE student_list_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
				FOR SELECT ssl_list.var_str
					FROM 			
						ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list

			OPEN student_list_cursor

			FETCH NEXT FROM student_list_cursor
				INTO @sysid_student

			WHILE @@FETCH_STATUS = 0
			BEGIN	

				SELECT @total_tuition = CASE WHEN
												((NOT SUM(sfdt.amount) = 0) AND (NOT SUM(sfdt.amount) IS NULL))
											THEN
												(SUM(sfdt.amount))
											ELSE
												(0)
											END
										FROM
											@school_fee_details_table AS sfdt 
										WHERE
											((sfdt.sysid_feeparticular IS NULL) OR ((NOT sfdt.sysid_feeparticular IS NULL) AND (((sfdt.category_no IN (1)) AND
											(sfdt.is_per_year_tuition_fee = 1 OR sfdt.is_per_unit_tuition_fee = 1 OR
												sfdt.is_fixed_amount_tuition_fee = 1 OR sfdt.is_special_class_tuition_fee = 1)) OR
											(NOT sfdt.category_no IN (1))))) AND
											(sfdt.sysid_student = @sysid_student)

				
				SELECT @total_reimbursements = CASE WHEN
												((NOT SUM(srb.amount) = 0) AND (NOT SUM(srb.amount) IS NULL))
											THEN
												(SUM(srb.amount))
											ELSE
												(0)
											END
										FROM
											ums.student_reimbursements AS srb
										WHERE
											((srb.reimbursement_date IS NULL) OR ((NOT srb.reimbursement_date IS NULL) AND (NOT srb.reimbursement_date > @date_ending))) AND
											(srb.sysid_student = @sysid_student)

				SELECT @total_credit_memo = CASE WHEN
												((NOT SUM(scm.amount) = 0) AND (NOT SUM(scm.amount) IS NULL))
											THEN
												(SUM(scm.amount))
											ELSE
												(0)
											END
										FROM
											ums.student_credit_memo AS scm
										WHERE
											((scm.memo_date IS NULL) OR ((NOT scm.memo_date IS NULL) AND (NOT scm.memo_date > @date_ending))) AND
											(scm.sysid_student = @sysid_student)


				SELECT @total_payments = CASE WHEN
												((NOT SUM(stp.amount) = 0) AND (NOT SUM(stp.amount) IS NULL))
											THEN
												((SUM(stp.amount)) + (SUM(stp.discount_amount)))
											ELSE
												(0)
											END
										FROM
											ums.student_payments AS stp 
										WHERE
											((stp.payment_date IS NULL) OR ((NOT stp.payment_date IS NULL) AND (NOT stp.payment_date > @date_ending))) AND
											(stp.sysid_student = @sysid_student)

				SELECT @total_discounts = CASE WHEN
												((NOT SUM(std.amount) = 0) AND (NOT SUM(std.amount) IS NULL))
											THEN
												(SUM(std.amount))
											ELSE
												(0)
											END
										FROM
											ums.student_discounts AS std
										INNER JOIN ums.student_scholarship AS sts ON sts.sysid_studentscholarship = std.sysid_studentscholarship
										INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sts.sysid_enrolmentlevel
										INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
										WHERE
											(((sts.is_marked_deleted IS NULL) OR ((NOT sts.is_marked_deleted IS NULL) AND (sts.is_marked_deleted = 0))) AND 
											((std.discount_date IS NULL) OR ((NOT std.discount_date IS NULL) AND (NOT std.discount_date > @date_ending)))) AND
											(sec.sysid_student = @sysid_student)

				SELECT @total_student_balance_forwarded = CASE WHEN
												((NOT SUM(sbf.amount) = 0) AND (NOT SUM(sbf.amount) IS NULL))
											THEN
												(SUM(sbf.amount))
											ELSE
												(0)
											END
										FROM
											ums.student_balance_forwarded AS sbf
										WHERE
											(sbf.sysid_student = @sysid_student)


				INSERT INTO @balance_forward_table (sysid_student, amount) VALUES (@sysid_student, 
					((@total_tuition + @total_reimbursements + @total_student_balance_forwarded) - (@total_payments + @total_credit_memo + @total_discounts)))
				
				
				FETCH NEXT FROM student_list_cursor
					INTO @sysid_student

			END

			CLOSE student_list_cursor
			DEALLOCATE student_list_cursor

			IF (EXISTS (SELECT table_id FROM @balance_forward_table WHERE amount < -1))
			BEGIN
				SET @is_exists_payment = 1
			END

		END

		SELECT @is_exists_payment
		RETURN @is_exists_payment

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student payments', 'Student Payments'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPayments TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsReceiptNoStudentPayments" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsReceiptNoStudentPayments')
   DROP PROCEDURE ums.IsExistsReceiptNoStudentPayments
GO

CREATE PROCEDURE ums.IsExistsReceiptNoStudentPayments

	@payment_id bigint = 0,
	@receipt_no varchar (50) = '',

	@system_user_id varchar (50) = ''	
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1)  OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsReceiptNoStudentPay(@payment_id, @receipt_no)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student payments', 'Student Payments'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsReceiptNoStudentPayments TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsPaymentBySysIDStudentDateStartEndStudentPay" function already exist
IF OBJECT_ID (N'ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPay') IS NOT NULL
   DROP FUNCTION ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPay
GO

CREATE FUNCTION ums.IsExistsPaymentBySysIDStudentDateStartEndStudentPay
(	
	@sysid_student varchar (50) = '',
	@date_start datetime,
	@date_end datetime
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF (((EXISTS (SELECT 
						stp.payment_id AS transaction_id
					FROM 
						ums.student_payments AS stp
					WHERE 
						(stp.sysid_student = @sysid_student) AND 
						(stp.payment_date BETWEEN @date_start AND @date_end) AND
						(NOT stp.amount <= 0) AND
						(stp.is_downpayment = 1)
					UNION ALL
					SELECT
						srb.reimbursement_id AS transaction_id
					FROM
						ums.student_reimbursements AS srb
					WHERE
						(srb.sysid_student = @sysid_student) AND 
						(srb.reimbursement_date BETWEEN @date_start AND @date_end) AND
						(NOT srb.amount <= 0) AND
						(srb.is_downpayment = 1)
					UNION ALL
					SELECT
						scm.memo_id AS transaction_id
					FROM
						ums.student_credit_memo AS scm
					WHERE
						(scm.sysid_student = @sysid_student) AND 
						(scm.memo_date BETWEEN @date_start AND @date_end) AND
						(NOT scm.amount <= 0) AND
						(scm.is_downpayment = 1)
					UNION ALL
					SELECT
						std.discount_id AS transaction_id
					FROM
						ums.student_discounts AS std
					INNER JOIN ums.student_scholarship AS sts ON sts.sysid_studentscholarship = std.sysid_studentscholarship
					INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sts.sysid_enrolmentlevel
					INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
					WHERE
						(sec.sysid_student = @sysid_student) AND 
						(std.discount_date BETWEEN @date_start AND @date_end) AND
						(NOT std.amount <= 0) AND
						(std.is_downpayment = 1)
					UNION ALL
					SELECT
						spn.promissory_note_id AS transaction_id
					FROM
						ums.student_promissory_note AS spn
					WHERE
						(spn.sysid_student = @sysid_student) AND 
						(spn.note_received_date BETWEEN @date_start AND @date_end) AND
						(spn.is_downpayment = 1))) AND 
		((NOT ISNULL(@sysid_student, '') = '') AND (NOT ISNULL(@date_start, '') = '') AND (NOT ISNULL(@date_end, '') = ''))) OR
		(EXISTS (SELECT sysid_student FROM ums.student_information WHERE sysid_student = @sysid_student AND is_no_downpayment_required = 1)))
					
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result

END
GO
------------------------------------------------------

-- verifies if the "IsExistsReceiptNoStudentPay" function already exist
IF OBJECT_ID (N'ums.IsExistsReceiptNoStudentPay') IS NOT NULL
   DROP FUNCTION ums.IsExistsReceiptNoStudentPay
GO

CREATE FUNCTION ums.IsExistsReceiptNoStudentPay
(	
	@payment_id bigint = 0,
	@receipt_no varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF (EXISTS (SELECT 
					payment_id 
				FROM 
					ums.student_payments 
				WHERE 
					((REPLACE(receipt_no, ' ', '')) LIKE REPLACE(@receipt_no, ' ', '')) AND
					(NOT payment_id = @payment_id)
				UNION ALL
				SELECT
					receipt_no
				FROM
					ums.cancelled_receipt_no
				WHERE
					((REPLACE(receipt_no, ' ', '')) LIKE REPLACE(@receipt_no, ' ', ''))
				UNION ALL
				SELECT
					receipt_no
				FROM
					ums.miscellaneous_income
				WHERE
					((REPLACE(receipt_no, ' ', '')) LIKE REPLACE(@receipt_no, ' ', '')) AND
					(NOT payment_id = @payment_id)))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------


-- ################################################END TABLE "student_payments" OBJECTS######################################################





-- ################################################TABLE "scholarship_information" OBJECTS######################################################
-- verifies if the scholarship_information table exists
IF OBJECT_ID('ums.scholarship_information', 'U') IS NOT NULL
	DROP TABLE ums.scholarship_information
GO

CREATE TABLE ums.scholarship_information 			
(
	sysid_scholarship varchar (50) NOT NULL 
		CONSTRAINT Scholarship_Information_SysID_Scholarship_PK PRIMARY KEY (sysid_scholarship)
		CONSTRAINT Scholarship_Information_SysID_Scholarship_CK CHECK (sysid_scholarship LIKE 'SYSSPI%'),
	course_group_id varchar (50) NOT NULL
		CONSTRAINT Scholarship_Information_Course_Group_ID_FK FOREIGN KEY REFERENCES ums.course_group(course_group_id) ON UPDATE NO ACTION
		CONSTRAINT Scholarship_Information_Course_Group_ID_UQ UNIQUE (course_group_id, department_id, scholarship_description),
	department_id varchar (50) NOT NULL
		CONSTRAINT Scholarship_Information_Department_ID_FK FOREIGN KEY REFERENCES ums.department_information(department_id) ON UPDATE NO ACTION
		CONSTRAINT Scholarship_Information_Department_ID_UQ UNIQUE (department_id, course_group_id, scholarship_description),
	scholarship_description varchar (100) NOT NULL
		CONSTRAINT Scholarship_Information_Scholarship_Description_UQ UNIQUE (scholarship_description, course_group_id, department_id),

	is_non_academic bit NOT NULL DEFAULT (0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Scholarship_Information_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Scholarship_Information_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Scholarship_Information_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the scholarship_information table 
CREATE INDEX Scholarship_Information_SysID_Scholarship_Index
	ON ums.scholarship_information (sysid_scholarship ASC)
GO
------------------------------------------------------------------

--verifies that the trigger "Scholarship_Information_Trigger_Insert" already exist
IF OBJECT_ID ('ums.Scholarship_Information_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.Scholarship_Information_Trigger_Insert
GO

CREATE TRIGGER ums.Scholarship_Information_Trigger_Insert
	ON  ums.scholarship_information
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_scholarship varchar (50)
	DECLARE @course_group_id varchar (50)
	DECLARE @department_id varchar (50)
	DECLARE @scholarship_description varchar (100)	
	DECLARE @is_non_academic bit 
	DECLARE @created_by varchar (50)

	DECLARE @non_academic varchar (50)
	
	SELECT 
		@sysid_scholarship = i.sysid_scholarship,
		@course_group_id = i.course_group_id,
		@department_id = i.department_id,
		@scholarship_description = i.scholarship_description,
		@is_non_academic = i.is_non_academic,
		@created_by = i.created_by
	FROM INSERTED AS i

	IF @is_non_academic = 1
	BEGIN
		SET @non_academic = 'YES'
	END
	ELSE
	BEGIN
		SET @non_academic = 'NO'
	END

	SET @transaction_done = 'CREATED a new scholarship information ' + 
							'[Scholarship ID: ' + ISNULL(@sysid_scholarship, '') +
							'][Course Group: ' + ISNULL((SELECT group_description FROM ums.course_group WHERE course_group_id = @course_group_id), '') +
							'][Department: ' + ISNULL((SELECT department_name FROM ums.department_information WHERE department_id = @department_id), '') +
							'][Description: ' + ISNULL(@scholarship_description, '') +
							'][Is Non-academic: ' + ISNULL(@non_academic, '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
-----------------------------------------------------------------

--verifies that the trigger "Scholarship_Information_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.Scholarship_Information_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.Scholarship_Information_Trigger_Instead_Update
GO

CREATE TRIGGER ums.Scholarship_Information_Trigger_Instead_Update
	ON  ums.scholarship_information
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @sysid_scholarship varchar (50)
	DECLARE @department_id varchar (50)
	DECLARE @scholarship_description varchar (100)	
	DECLARE @is_non_academic bit 
	DECLARE @edited_by varchar (50)

	DECLARE @department_id_b varchar (50)
	DECLARE @scholarship_description_b varchar (100)
	DECLARE @is_non_academic_b bit

	DECLARE @non_academic varchar (50)
	DECLARE @non_academic_b varchar (50)

	DECLARE @has_update bit
	
	SELECT 
		@sysid_scholarship = i.sysid_scholarship,
		@department_id = i.department_id,
		@scholarship_description = i.scholarship_description,
		@is_non_academic = i.is_non_academic,
		@edited_by = i.edited_by
	FROM INSERTED AS i

	SELECT
		@department_id_b = department_id,
		@scholarship_description_b = scholarship_description,
		@is_non_academic_b = is_non_academic
	FROM 
		ums.scholarship_information
	WHERE
		sysid_scholarship = @sysid_scholarship

	SET @transaction_done = ''
	SET @has_update = 0

	IF NOT ISNULL(@department_id, '') = ISNULL(@department_id_b, '')
	BEGIN
		SET @transaction_done = @transaction_done + '[Department Before: ' + ISNULL((SELECT department_name FROM ums.department_information WHERE department_id = @department_id_b), '') + ']' +
													'[Department After: ' + ISNULL((SELECT department_name FROM ums.department_information WHERE department_id = @department_id), '') + ']'
		SET @has_update = 1
	END

	IF NOT ISNULL(@scholarship_description COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@scholarship_description_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
	BEGIN
		SET @transaction_done = @transaction_done + '[Description Before: ' + ISNULL(@scholarship_description_b, '') + ']' +
													'[Description After: ' + ISNULL(@scholarship_description, '') + ']'
		SET @has_update = 1
	END
	ELSE
	BEGIN
		SET @transaction_done = @transaction_done + '[Description: ' + ISNULL(@scholarship_description, '') + ']'
	END

	IF NOT @is_non_academic = @is_non_academic_b
	BEGIN

		IF @is_non_academic = 1
		BEGIN
			SET @non_academic = 'YES'
		END
		ELSE
		BEGIN
			SET @non_academic = 'NO'
		END

		IF @is_non_academic_b = 1
		BEGIN
			SET @non_academic_b = 'YES'
		END
		ELSE
		BEGIN
			SET @non_academic_b = 'NO'
		END

		SET @transaction_done = @transaction_done + '[Is Non-academic Before: ' + ISNULL(@non_academic_b, '') + ']' +
													'[Is Non-academic After: ' + ISNULL(@non_academic, '') + ']'
		SET @has_update = 1

	END	

	IF @has_update = 1
	BEGIN

		UPDATE ums.scholarship_information SET
			department_id = @department_id,
			scholarship_description = @scholarship_description,
			is_non_academic = @is_non_academic,
			edited_on = GETDATE(),
			edited_by = @edited_by
		WHERE
			sysid_scholarship = @sysid_scholarship

		SET @transaction_done = 'UPDATED a scholarship information ' + 
								'[Scholarship ID: ' + ISNULL(@sysid_scholarship, '') + ']' + @transaction_done

		IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
		BEGIN
			SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @edited_by
		END
				
		EXECUTE ums.InsertTransactionLog @edited_by, @network_information, @transaction_done

	END		

GO
-----------------------------------------------------------------

-- verifies that the trigger "Scholarship_Information_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.Scholarship_Information_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.Scholarship_Information_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.Scholarship_Information_Trigger_Instead_Delete
	ON  ums.scholarship_information
	INSTEAD OF DELETE
	NOT FOR REPLICATION
AS 

	EXECUTE ums.ShowErrorMsg 'Delete a scholarship information', 'Scholarship Information'
	
GO
-------------------------------------------------------------------------

-- verifies if the procedure "InsertScholarshipInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertScholarshipInformation')
   DROP PROCEDURE ums.InsertScholarshipInformation
GO

CREATE PROCEDURE ums.InsertScholarshipInformation

	@sysid_scholarship varchar (50) = '',
	@course_group_id varchar (50) = '',
	@department_id varchar (50) = '',
	@scholarship_description varchar (100) = '',
	@is_non_academic bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@created_by) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@created_by) = 1))
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.scholarship_information
		(
			sysid_scholarship,
			course_group_id,
			department_id,
			scholarship_description,
			is_non_academic,
			created_by
		)
		VALUES
		(
			@sysid_scholarship,
			@course_group_id,
			@department_id,
			@scholarship_description,
			@is_non_academic,
			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new scholarship information', 'Scholarship Information'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertScholarshipInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateScholarshipInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateScholarshipInformation')
   DROP PROCEDURE ums.UpdateScholarshipInformation
GO

CREATE PROCEDURE ums.UpdateScholarshipInformation

	@sysid_scholarship varchar (50) = '',
	@department_id varchar (50) = '',
	@scholarship_description varchar (100) = '',
	@is_non_academic bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@edited_by) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@edited_by) = 1))
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.scholarship_information SET
			department_id = @department_id,
			scholarship_description = @scholarship_description,
			is_non_academic = @is_non_academic,
			edited_by = @edited_by
		WHERE
			sysid_scholarship = @sysid_scholarship
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a scholarship information', 'Scholarship Information'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateScholarshipInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectScholarshipInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectScholarshipInformation')
   DROP PROCEDURE ums.SelectScholarshipInformation
GO

CREATE PROCEDURE ums.SelectScholarshipInformation
	
	@system_user_id varchar(50) = ''
	
AS

	IF (ums.IsActiveSystemUserInfo(@system_user_id) = 1)
	BEGIN
		
		SELECT
			spi.sysid_scholarship AS sysid_scholarship,
			spi.course_group_id AS course_group_id,
			spi.department_id AS department_id,
			spi.scholarship_description AS scholarship_description,
			spi.is_non_academic AS is_non_academic,
			cg.group_description AS group_description,
			di.department_name AS department_name,
			di.acronym AS department_acronym
		FROM
			ums.scholarship_information AS spi
		INNER JOIN ums.course_group AS cg ON cg.course_group_id = spi.course_group_id
		INNER JOIN ums.department_information AS di ON di.department_id = spi.department_id
		ORDER BY 
			spi.scholarship_description ASC

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query scholarship information', 'Scholarship Information'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectScholarshipInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountScholarshipInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountScholarshipInformation')
   DROP PROCEDURE ums.GetCountScholarshipInformation
GO

CREATE PROCEDURE ums.GetCountScholarshipInformation

	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT COUNT(sysid_scholarship) FROM ums.scholarship_information
				
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a scholarship information', 'Scholarship Information'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountScholarshipInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDScholarshipInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDScholarshipInformation')
   DROP PROCEDURE ums.IsExistsSysIDScholarshipInformation
GO

CREATE PROCEDURE ums.IsExistsSysIDScholarshipInformation

	@sysid_scholarship varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsSysIDScholarshipInfo(@sysid_scholarship)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a scholarship information', 'Scholarship Information'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDScholarshipInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsScholarshipDescriptionScholarshipInformation" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsScholarshipDescriptionScholarshipInformation')
   DROP PROCEDURE ums.IsExistsScholarshipDescriptionScholarshipInformation
GO

CREATE PROCEDURE ums.IsExistsScholarshipDescriptionScholarshipInformation

	@sysid_scholarship varchar (50) = '',
	@course_group_id varchar (50) = '',
	@department_id varchar (50) = '',
	@scholarship_description varchar (100) = '',
	@system_user_id varchar (50) = ''	
		
AS
	
	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsScholarshipDescriptionScholarshipInfo(@sysid_scholarship, @course_group_id, @department_id, @scholarship_description)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a scholarship information', 'Scholarship Information'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsScholarshipDescriptionScholarshipInformation TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDScholarshipInfo" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDScholarshipInfo') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDScholarshipInfo
GO

CREATE FUNCTION ums.IsExistsSysIDScholarshipInfo
(	
	@sysid_scholarship varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_scholarship FROM ums.scholarship_information WHERE sysid_scholarship = @sysid_scholarship)
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsScholarshipDescriptionScholarshipInfo" function already exist
IF OBJECT_ID (N'ums.IsExistsScholarshipDescriptionScholarshipInfo') IS NOT NULL
   DROP FUNCTION ums.IsExistsScholarshipDescriptionScholarshipInfo
GO

CREATE FUNCTION ums.IsExistsScholarshipDescriptionScholarshipInfo
(	
	@sysid_scholarship varchar (50) = '',
	@course_group_id varchar (50) = '',
	@department_id varchar (50) = '',
	@scholarship_description varchar (100) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_scholarship FROM ums.scholarship_information WHERE (NOT sysid_scholarship = @sysid_scholarship) AND 
															(course_group_id = @course_group_id) AND
															(department_id = @department_id) AND
															((REPLACE(scholarship_description, ' ', '')) LIKE REPLACE(@scholarship_description, ' ', '')))
	BEGIN
		SET @result = 1
	END	
	
	RETURN @result
END
GO
------------------------------------------------------

-- ################################################END TABLE "scholarship_information" OBJECTS######################################################





-- ################################################TABLE "student_scholarship" OBJECTS######################################################
-- verifies if the student_scholarship table exists
IF OBJECT_ID('ums.student_scholarship', 'U') IS NOT NULL
	DROP TABLE ums.student_scholarship
GO

CREATE TABLE ums.student_scholarship 			
(
	sysid_studentscholarship varchar (50) NOT NULL
		CONSTRAINT Student_Scholarship_SysID_StudentScholarship_PK PRIMARY KEY (sysid_studentscholarship)
		CONSTRAINT Student_Scholarship_SysID_StudentScholarship_CK CHECK (sysid_studentscholarship LIKE 'SYSSSC%'),
	sysid_scholarship varchar (50) NOT NULL 
		CONSTRAINT Student_Scholarship_SysID_Scholarship_FK FOREIGN KEY REFERENCES ums.scholarship_information(sysid_scholarship) ON UPDATE NO ACTION,
	sysid_enrolmentlevel varchar (50) NOT NULL
		CONSTRAINT Student_Scholarship_SysID_EnrolmentLevel_FK FOREIGN KEY REFERENCES ums.student_enrolment_level(sysid_enrolmentlevel) ON UPDATE NO ACTION,

	is_marked_deleted bit NOT NULL DEFAULT (0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Scholarship_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Scholarship_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Scholarship_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_scholarship table 
CREATE INDEX Student_Scholarship_SysID_StudentScholarship_Index
	ON ums.student_scholarship (sysid_studentscholarship DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentScholarship" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentScholarship')
   DROP PROCEDURE ums.InsertStudentScholarship
GO

CREATE PROCEDURE ums.InsertStudentScholarship

	@sysid_studentscholarship varchar (50) = '',
	@sysid_scholarship varchar (50) = '',
	@sysid_enrolmentlevel varchar (50) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR 
		(((ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@created_by) = 1) OR 
		(ums.IsCollegeRegistrarSystemUserInfo(@created_by) = 1) OR
		(ums.IsCashierSystemUserInfo(@created_by) = 1) OR 
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND 
		((ums.IsRecordLockByYearSemesterIDNoAddMonths((SELECT
															sfi.year_id AS year_semester_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														WHERE
															(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
															(cg.is_semestral = 0) 
														UNION
														SELECT
															sel.sysid_semester AS year_semester_id
														FROM
															ums.student_enrolment_level AS sel
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														WHERE
															(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
															(cg.is_semestral = 1))) = 0) OR
		 (ums.IsRecordLockByYearSemesterID((SELECT
															sfi.year_id AS year_semester_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														WHERE
															(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
															(cg.is_semestral = 0) 
														UNION
														SELECT
															sel.sysid_semester AS year_semester_id
														FROM
															ums.student_enrolment_level AS sel
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														WHERE
															(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
															(cg.is_semestral = 1))) = 0)))) AND
		(ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholar(@sysid_studentscholarship, @sysid_scholarship, @sysid_enrolmentlevel) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_scholarship
		(
			sysid_studentscholarship,
			sysid_scholarship,
			sysid_enrolmentlevel,
			created_by
		)
		VALUES
		(
			@sysid_studentscholarship,
			@sysid_scholarship,
			@sysid_enrolmentlevel,
			@created_by
		)
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student scholarship', 'Student Scholarship'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentScholarship TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentScholarship" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentScholarship')
   DROP PROCEDURE ums.UpdateStudentScholarship
GO

CREATE PROCEDURE ums.UpdateStudentScholarship

	@sysid_studentscholarship varchar (50) = '',
	@sysid_scholarship varchar (50) = '',

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR 
		(((ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@edited_by) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@edited_by) = 1) OR
		(ums.IsCashierSystemUserInfo(@edited_by) = 1) OR 
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND 
		((ums.IsRecordLockByYearSemesterIDNoAddMonths((SELECT
															sfi.year_id AS year_semester_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 0) 
														UNION
														SELECT
															sel.sysid_semester AS year_semester_id
														FROM
															ums.student_enrolment_level AS sel
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 1))) = 0) OR
		(ums.IsRecordLockByYearSemesterID((SELECT
															sfi.year_id AS year_semester_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 0) 
														UNION
														SELECT
															sel.sysid_semester AS year_semester_id
														FROM
															ums.student_enrolment_level AS sel
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 1))) = 0)))) AND
		(ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholar(@sysid_studentscholarship,
																		(SELECT
																				sysid_scholarship
																			FROM 
																				ums.student_scholarship 
																			WHERE 
																				sysid_studentscholarship = @sysid_studentscholarship), 
																		(SELECT
																				sysid_enrolmentlevel
																			FROM 
																				ums.student_scholarship 
																			WHERE 
																				sysid_studentscholarship = @sysid_studentscholarship)) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_scholarship SET
			sysid_scholarship = @sysid_scholarship,
			edited_by = @edited_by
		WHERE
			sysid_studentscholarship = @sysid_studentscholarship
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student scholarship', 'Student Scholarship'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentScholarship TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentScholarship" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentScholarship')
   DROP PROCEDURE ums.DeleteStudentScholarship
GO

CREATE PROCEDURE ums.DeleteStudentScholarship

	@sysid_studentscholarship varchar (50) = '',

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR 
		(((ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR 
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND 
		((ums.IsRecordLockByYearSemesterIDNoAddMonths((SELECT
															sfi.year_id AS year_semester_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 0) 
														UNION
														SELECT
															sel.sysid_semester AS year_semester_id
														FROM
															ums.student_enrolment_level AS sel
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 1))) = 0) OR
		(ums.IsRecordLockByYearSemesterID((SELECT
															sfi.year_id AS year_semester_id
														FROM
															ums.school_fee_information AS sfi
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
														INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 0) 
														UNION
														SELECT
															sel.sysid_semester AS year_semester_id
														FROM
															ums.student_enrolment_level AS sel
														INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
														INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
														INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
														INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
														WHERE
															(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
															(cg.is_semestral = 1))) = 0))))
	BEGIN

		IF EXISTS (SELECT sysid_studentscholarship FROM ums.student_scholarship WHERE sysid_studentscholarship = @sysid_studentscholarship)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_scholarship SET
				edited_by = @deleted_by
			WHERE
				sysid_studentscholarship = @sysid_studentscholarship

			DELETE FROM ums.student_scholarship WHERE sysid_studentscholarship = @sysid_studentscholarship

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student scholarship', 'Student Scholarship'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentScholarship TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDEnrolmentLevelStudentScholarship" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDEnrolmentLevelStudentScholarship')
   DROP PROCEDURE ums.SelectBySysIDEnrolmentLevelStudentScholarship
GO

CREATE PROCEDURE ums.SelectBySysIDEnrolmentLevelStudentScholarship
	
	@sysid_enrolmentlevel varchar (50) = '',

	@system_user_id varchar(50) = ''
	
AS

	IF ums.IsActiveSystemUserInfo(@system_user_id) = 1 
	BEGIN

		DECLARE @date_start datetime
		DECLARE @date_end datetime

		IF ((SELECT
					cg.is_semestral AS is_semestral
				FROM
					ums.course_group AS cg
				INNER JOIN ums.year_level_information AS yli ON yli.course_group_id = cg.course_group_id
				INNER JOIN ums.school_fee_level AS sfl ON sfl.year_level_id = yli.year_level_id
				INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
				WHERE
					(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)) = 1)
		BEGIN

			SELECT
				@date_start = sri.date_start,
				@date_end = sri.date_end
			FROM
				ums.semester_information AS sri
			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_semester = sri.sysid_semester
			WHERE
				(NOT sel.sysid_semester IS NULL AND NOT sel.sysid_semester = '') AND
				(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)

		END
		ELSE
		BEGIN

			SELECT
				@date_start = sy.date_start,
				@date_end = sy.date_end
			FROM
				ums.school_year AS sy
			INNER JOIN ums.school_fee_information AS sfi ON sfi.year_id = sy.year_id
			INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
			INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
			WHERE
				(sel.sysid_semester IS NULL OR sel.sysid_semester = '') AND
				(sel.sysid_enrolmentlevel = @sysid_enrolmentlevel)
		END
			

		SELECT
			sts.sysid_studentscholarship AS sysid_studentscholarship,
			sec.sysid_student AS sysid_student,
			sts.sysid_scholarship AS sysid_scholarship,
			sci.scholarship_description AS scholarship_description,
			sci.is_non_academic AS is_non_academic,
			di.department_name AS department_name,
			di.acronym AS department_acronym,
			std.discount_id AS discount_id,
			std.discount_date AS reflected_date,
			std.created_on AS received_date,
			std.remarks AS remarks,
			std.amount AS amount,
			std.is_downpayment AS is_downpayment,
			CASE WHEN (std.discount_date BETWEEN @date_start AND @date_end)
				THEN
					('true')
				ELSE
					('false')
				END AS is_included_in_post
		FROM
			ums.student_scholarship AS sts
		INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sts.sysid_enrolmentlevel
		INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
		INNER JOIN ums.scholarship_information AS sci ON sci.sysid_scholarship = sts.sysid_scholarship
		INNER JOIN ums.department_information AS di ON di.department_id = sci.department_id
		INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
		WHERE
			(sts.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
			(sts.is_marked_deleted = 0)
		UNION ALL
		SELECT
			sts.sysid_studentscholarship AS sysid_studentscholarship,
			sec.sysid_student AS sysid_student,
			sts.sysid_scholarship AS sysid_scholarship,
			sci.scholarship_description AS scholarship_description,
			sci.is_non_academic AS is_non_academic,
			di.department_name AS department_name,
			di.acronym AS department_acronym,
			NULL AS discount_id,
			NULL AS reflected_date,
			NULL AS received_date,
			NULL AS remarks,
			NULL AS amount,
			'false' AS is_downpayment,
			'true' AS is_included_in_post
		FROM
			ums.student_scholarship AS sts
		INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sts.sysid_enrolmentlevel
		INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
		INNER JOIN ums.scholarship_information AS sci ON sci.sysid_scholarship = sts.sysid_scholarship
		INNER JOIN ums.department_information AS di ON di.department_id = sci.department_id
		LEFT JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
		WHERE
			(sts.sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
			(sts.is_marked_deleted = 0) AND
			(std.discount_id IS NULL)
		ORDER BY
			scholarship_description, department_name ASC	

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student scholarship', 'Student Scholarship'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDEnrolmentLevelStudentScholarship TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "GetCountStudentScholarship" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'GetCountStudentScholarship')
   DROP PROCEDURE ums.GetCountStudentScholarship
GO

CREATE PROCEDURE ums.GetCountStudentScholarship

	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT COUNT(sysid_studentscholarship) FROM ums.student_scholarship
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student scholarship', 'Student Scholarship'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.GetCountStudentScholarship TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDStudentScholarshipStudentScholarship" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDStudentScholarshipStudentScholarship')
   DROP PROCEDURE ums.IsExistsSysIDStudentScholarshipStudentScholarship
GO

CREATE PROCEDURE ums.IsExistsSysIDStudentScholarshipStudentScholarship

	@sysid_studentscholarship varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsSysIDStudentScholarshipStudentScholar(@sysid_studentscholarship)
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student scholarship', 'Student Scholarship'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDStudentScholarshipStudentScholarship TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholarship" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholarship')
   DROP PROCEDURE ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholarship
GO

CREATE PROCEDURE ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholarship

	@sysid_studentscholarship varchar (50) = '',
	@sysid_scholarship varchar (50) = '',
	@sysid_enrolmentlevel varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholar(@sysid_studentscholarship, @sysid_scholarship, @sysid_enrolmentlevel)
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student scholarship', 'Student Scholarship'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholarship TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDStudentScholarshipStudentScholar" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDStudentScholarshipStudentScholar') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDStudentScholarshipStudentScholar
GO

CREATE FUNCTION ums.IsExistsSysIDStudentScholarshipStudentScholar
(	
	@sysid_studentscholarship varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_studentscholarship FROM ums.student_scholarship WHERE sysid_studentscholarship = @sysid_studentscholarship)
	BEGIN
		SET @result = 1
	END
	
	RETURN @result
END
GO
------------------------------------------------------

-- verifies if the "IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholar" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholar') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholar
GO

CREATE FUNCTION ums.IsExistsSysIDStudentScholarshipEnrolmentLevelStudentScholar
(	
	@sysid_studentscholarship varchar (50) = '',
	@sysid_scholarship varchar (50) = '',
	@sysid_enrolmentlevel varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT sysid_studentscholarship FROM ums.student_scholarship WHERE (NOT sysid_studentscholarship = @sysid_studentscholarship) AND
															(sysid_scholarship = @sysid_scholarship) AND
															(sysid_enrolmentlevel = @sysid_enrolmentlevel) AND
															(is_marked_deleted = 0))
	BEGIN
		SET @result = 1
	END
		
	RETURN @result
END
GO
------------------------------------------------------



-- ################################################END TABLE "student_scholarship" OBJECTS######################################################






-- ################################################TABLE "student_discounts" OBJECTS######################################################
-- verifies if the student_discounts table exists
IF OBJECT_ID('ums.student_discounts', 'U') IS NOT NULL
	DROP TABLE ums.student_discounts
GO

CREATE TABLE ums.student_discounts 			
(
	discount_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Discounts_Discount_ID_PK PRIMARY KEY (discount_id),
	sysid_studentscholarship varchar (50) NOT NULL
		CONSTRAINT Student_Discounts_SysID_StudentScholarship_FK FOREIGN KEY REFERENCES ums.student_scholarship(sysid_studentscholarship) ON UPDATE NO ACTION,
	discount_date datetime NOT NULL
		CONSTRAINT Student_Discounts_Discount_Date_CK CHECK (CONVERT(varchar, discount_date, 109) LIKE '%12:00:00:000AM'),	
	remarks varchar (100) NULL,

	amount decimal (12, 2) NOT NULL,

	is_downpayment bit NOT NULL DEFAULT(0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Discounts_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Discounts_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Discounts_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_discounts table 
CREATE INDEX Student_Discounts_Discount_ID_Index
	ON ums.student_discounts (discount_id DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentDiscounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentDiscounts')
   DROP PROCEDURE ums.InsertStudentDiscounts
GO

CREATE PROCEDURE ums.InsertStudentDiscounts

	@sysid_studentscholarship varchar (50) = '',
	@discount_date datetime,
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT		-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																(sts.sysid_studentscholarship = @sysid_studentscholarship) AND
																(cg.is_semestral = 1)),
															(SELECT 
																sel.sysid_enrolmentlevel
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																sts.sysid_studentscholarship = @sysid_studentscholarship),
															(SELECT 
																sel.sysid_enrolmentcourse
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															WHERE
																sts.sysid_studentscholarship = @sysid_studentscholarship),
															0,
															0,
															1) = 0))) AND
		EXISTS (SELECT sy.year_id FROM ums.school_year AS sy WHERE (@discount_date BETWEEN sy.date_start AND sy.date_end))
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_discounts
		(
			sysid_studentscholarship,
			discount_date,
			remarks,
			amount,
			is_downpayment,

			created_by
		)
		VALUES
		(
			@sysid_studentscholarship,
			@discount_date,
			@remarks,
			@amount,
			@is_downpayment,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student discounts', 'Student Discounts'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentDiscounts TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentDiscounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentDiscounts')
   DROP PROCEDURE ums.UpdateStudentDiscounts
GO

CREATE PROCEDURE ums.UpdateStudentDiscounts

	@discount_id bigint = 0,
	@discount_date datetime,
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT		-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																(std.discount_id = @discount_id) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																(std.discount_id = @discount_id) AND
																(cg.is_semestral = 1)),
															(SELECT 
																sel.sysid_enrolmentlevel
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																std.discount_id = @discount_id),
															(SELECT 
																sel.sysid_enrolmentcourse
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																std.discount_id = @discount_id),
															0,
															0,
															1) = 0))) AND
		EXISTS (SELECT sy.year_id FROM ums.school_year AS sy WHERE (@discount_date BETWEEN sy.date_start AND sy.date_end))
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_discounts SET
			discount_date = @discount_date,
			remarks = @remarks,
			amount = @amount,
			is_downpayment = @is_downpayment,

			edited_by = @edited_by
		WHERE
			discount_id = @discount_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student discounts', 'Student Discounts'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentDiscounts TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentDiscounts" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentDiscounts')
   DROP PROCEDURE ums.DeleteStudentDiscounts
GO

CREATE PROCEDURE ums.DeleteStudentDiscounts

	@discount_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR 
		(((ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockForOptionalAdditionalDiscountFee((SELECT		-- checking if the student enrolment level is marked deleted is included in this function
																sfi.year_id AS year_semester_id
															FROM
																ums.school_fee_information AS sfi
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_schoolfee = sfi.sysid_schoolfee
															INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_feelevel = sfl.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																(std.discount_id = @discount_id) AND
																(cg.is_semestral = 0)
															UNION ALL
															SELECT 
																sel.sysid_semester AS year_semester_id
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.school_fee_level AS sfl ON sfl.sysid_feelevel = sel.sysid_feelevel
															INNER JOIN ums.year_level_information AS yli ON yli.year_level_id = sfl.year_level_id
															INNER JOIN ums.course_group AS cg ON cg.course_group_id = yli.course_group_id
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																(std.discount_id = @discount_id) AND
																(cg.is_semestral = 1)),
															(SELECT 
																sel.sysid_enrolmentlevel
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																std.discount_id = @discount_id),
															(SELECT 
																sel.sysid_enrolmentcourse
															FROM
																ums.student_enrolment_level AS sel
															INNER JOIN ums.student_scholarship AS sts ON sts.sysid_enrolmentlevel = sel.sysid_enrolmentlevel
															INNER JOIN ums.student_discounts AS std ON std.sysid_studentscholarship = sts.sysid_studentscholarship
															WHERE
																std.discount_id = @discount_id),
															0,
															0,
															1) = 0)))
	BEGIN

		IF EXISTS (SELECT discount_id FROM ums.student_discounts WHERE discount_id = @discount_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_discounts SET
				edited_by = @deleted_by
			WHERE
				discount_id = @discount_id

			DELETE FROM ums.student_discounts WHERE discount_id = @discount_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Deleted a student discounts', 'Student Discounts'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentDiscounts TO db_umsusers
GO
-------------------------------------------------------------

-- ################################################END TABLE "student_discounts" OBJECTS######################################################




-- ################################################TABLE "student_reimbursements" OBJECTS######################################################
-- verifies if the student_reimbursements table exists
IF OBJECT_ID('ums.student_reimbursements', 'U') IS NOT NULL
	DROP TABLE ums.student_reimbursements
GO

CREATE TABLE ums.student_reimbursements 			
(
	reimbursement_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Reimbursements_Reimbursement_ID_PK PRIMARY KEY (reimbursement_id),
	sysid_student varchar (50) NOT NULL
		CONSTRAINT Student_Reimbursements_SysID_Student_FK FOREIGN KEY REFERENCES ums.student_information(sysid_student) ON UPDATE NO ACTION,
	reimbursement_date datetime NOT NULL
		CONSTRAINT Student_Reimbursements_Reimbursement_Date_CK CHECK (CONVERT(varchar, reimbursement_date, 109) LIKE '%12:00:00:000AM'),
	remarks varchar (100) NULL,

	amount decimal (12, 2) NOT NULL,

	is_downpayment bit NOT NULL DEFAULT(0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Reimbursements_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Reimbursements_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Reimbursements_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_reimbursements table 
CREATE INDEX Student_Reimbursements_Reimbursement_ID_Index
	ON ums.student_reimbursements (reimbursement_id DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentReimbursements" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentReimbursements')
   DROP PROCEDURE ums.InsertStudentReimbursements
GO

CREATE PROCEDURE ums.InsertStudentReimbursements

	@sysid_student varchar (50) = '',
	@reimbursement_date datetime,
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, GETDATE()) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_reimbursements
		(
			sysid_student,
			reimbursement_date,
			remarks,
			amount,
			is_downpayment,

			created_by
		)
		VALUES
		(
			@sysid_student,
			@reimbursement_date,
			@remarks,
			@amount,
			@is_downpayment,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student reimbursements', 'Student Reimbursements'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentReimbursements TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentReimbursements" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentReimbursements')
   DROP PROCEDURE ums.UpdateStudentReimbursements
GO

CREATE PROCEDURE ums.UpdateStudentReimbursements

	@reimbursement_id bigint = 0,
	@reimbursement_date datetime,
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, (SELECT 
															created_on
														FROM
															ums.student_reimbursements
														WHERE
															(reimbursement_id = @reimbursement_id))) = 0)

	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_reimbursements SET
			reimbursement_date = @reimbursement_date,
			remarks = @remarks,
			amount = @amount,
			is_downpayment = @is_downpayment,

			edited_by = @edited_by
		WHERE
			reimbursement_id = @reimbursement_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student reimbursements', 'Student Reimbursements'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentReimbursements TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentReimbursements" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentReimbursements')
   DROP PROCEDURE ums.DeleteStudentReimbursements
GO

CREATE PROCEDURE ums.DeleteStudentReimbursements

	@reimbursement_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, 
												(SELECT 
														created_on
													FROM
														ums.student_reimbursements
													WHERE
														(reimbursement_id = @reimbursement_id))) = 0)

	BEGIN

		IF EXISTS (SELECT * FROM ums.student_reimbursements WHERE reimbursement_id = @reimbursement_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_reimbursements SET
				edited_by = @deleted_by
			WHERE
				reimbursement_id = @reimbursement_id

			DELETE FROM ums.student_reimbursements WHERE reimbursement_id = @reimbursement_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student reimbursements', 'Student Reimbursements'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentReimbursements TO db_umsusers
GO
-------------------------------------------------------------


-- ################################################END TABLE "student_reimbursements" OBJECTS######################################################





-- ################################################TABLE "student_credit_memo" OBJECTS######################################################
-- verifies if the student_credit_memo table exists
IF OBJECT_ID('ums.student_credit_memo', 'U') IS NOT NULL
	DROP TABLE ums.student_credit_memo
GO

CREATE TABLE ums.student_credit_memo 			
(
	memo_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Credit_Memo_Memo_ID_PK PRIMARY KEY (memo_id),
	sysid_student varchar (50) NOT NULL
		CONSTRAINT Student_Credit_Memo_SysID_Student_FK FOREIGN KEY REFERENCES ums.student_information(sysid_student) ON UPDATE NO ACTION,
	memo_date datetime NOT NULL
		CONSTRAINT Student_Credit_Memo_Memo_Date_CK CHECK (CONVERT(varchar, memo_date, 109) LIKE '%12:00:00:000AM'),
	remarks varchar (100) NULL,

	amount decimal (12, 2) NOT NULL,

	is_downpayment bit NOT NULL DEFAULT(0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Credit_Memo_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Credit_Memo_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Credit_Memo_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_credit_memo table 
CREATE INDEX Student_Credit_Memo_Memo_ID_Index
	ON ums.student_credit_memo (memo_id DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentCreditMemo" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentCreditMemo')
   DROP PROCEDURE ums.InsertStudentCreditMemo
GO

CREATE PROCEDURE ums.InsertStudentCreditMemo

	@sysid_student varchar (50) = '',
	@memo_date datetime,
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, GETDATE()) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_credit_memo
		(
			sysid_student,
			memo_date,
			remarks,
			amount,
			is_downpayment,

			created_by
		)
		VALUES
		(
			@sysid_student,
			@memo_date,
			@remarks,
			@amount,
			@is_downpayment,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student credit memo', 'Student Credit Memo'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentCreditMemo TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentCreditMemo" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentCreditMemo')
   DROP PROCEDURE ums.UpdateStudentCreditMemo
GO

CREATE PROCEDURE ums.UpdateStudentCreditMemo

	@memo_id bigint = 0,
	@memo_date datetime,
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, (SELECT 
															created_on
														FROM
															ums.student_credit_memo
														WHERE
															(memo_id = @memo_id))) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_credit_memo SET
			memo_date = @memo_date,
			remarks = @remarks,
			amount = @amount,
			is_downpayment = @is_downpayment,

			edited_by = @edited_by
		WHERE
			memo_id = @memo_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student credit memo', 'Student Credit Memo'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentCreditMemo TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentCreditMemo" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentCreditMemo')
   DROP PROCEDURE ums.DeleteStudentCreditMemo
GO

CREATE PROCEDURE ums.DeleteStudentCreditMemo

	@memo_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, 
												(SELECT 
														created_on
													FROM
														ums.student_credit_memo
													WHERE
														(memo_id = @memo_id))) = 0)
	BEGIN

		IF EXISTS (SELECT memo_id FROM ums.student_credit_memo WHERE memo_id = @memo_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_credit_memo SET
				edited_by = @deleted_by
			WHERE
				memo_id = @memo_id

			DELETE FROM ums.student_credit_memo WHERE memo_id = @memo_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student credit memo', 'Student Credit Memo'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentCreditMemo TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentListDateStartEndStudentPaymentsDiscountsReimbursement" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentListDateStartEndStudentPaymentsDiscountsReimbursement')
   DROP PROCEDURE ums.SelectBySysIDStudentListDateStartEndStudentPaymentsDiscountsReimbursement
GO

CREATE PROCEDURE ums.SelectBySysIDStudentListDateStartEndStudentPaymentsDiscountsReimbursement
	
	@sysid_student_list nvarchar (MAX) = '',
	@date_start datetime,
	@date_end datetime,

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsOfficeUserSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsCollegeRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsHighSchoolGradeSchoolRegistrarSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsStudentDataControllerSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsSecretaryVpOfAcademicAffairsSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT
			srb.reimbursement_id AS payment_discount_reimbursement_id,
			srb.sysid_student AS sysid_student,
			srb.reimbursement_date AS reflected_date,
			NULL AS receipt_date,
			srb.created_on AS received_date,
			NULL AS receipt_no,
			srb.remarks AS remarks_discount_reimbursement_description,
			srb.is_downpayment AS is_downpayment,
			srb.amount AS amount,
			NULL AS discount_amount,
			NULL AS amount_tendered,
			NULL AS bank,
			NULL AS check_no,
			'false' AS is_miscellaneous_income,
			'false' AS is_payment,
			'false' AS is_discount,
			'true' AS is_reimbursement,
			'false' AS is_credit_memo,
			'false' AS is_balance_forwarded,
			CASE WHEN (srb.reimbursement_date BETWEEN @date_start AND @date_end)
				THEN
					('true')
				ELSE
					('false')
				END AS is_included_in_post,
			NULL AS sysid_account_credit,
			NULL AS account_code,
			NULL AS account_name
		FROM
			ums.student_reimbursements AS srb
		INNER JOIN ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list ON ssl_list.var_str = srb.sysid_student
		WHERE
			(srb.reimbursement_date BETWEEN @date_start AND @date_end) OR
			(srb.created_on BETWEEN @date_start AND @date_end)
		UNION ALL
		SELECT
			scm.memo_id AS payment_discount_reimbursement_id,
			scm.sysid_student AS sysid_student,
			scm.memo_date AS reflected_date,
			NULL AS receipt_date,
			scm.created_on AS received_date,
			NULL AS receipt_no,
			scm.remarks AS remarks_discount_reimbursement_description,
			scm.is_downpayment AS is_downpayment,
			scm.amount AS amount,
			NULL AS discount_amount,
			NULL AS amount_tendered,
			NULL AS bank,
			NULL AS check_no,
			'false' AS is_miscellaneous_income,
			'false' AS is_payment,
			'false' AS is_discount,
			'false' AS is_reimbursement,
			'true' AS is_credit_memo,
			'false' AS is_balance_forwarded,
			CASE WHEN (scm.memo_date BETWEEN @date_start AND @date_end)
				THEN
					('true')
				ELSE
					('false')
				END AS is_included_in_post,
			NULL AS sysid_account_credit,
			NULL AS account_code,
			NULL AS account_name
		FROM
			ums.student_credit_memo AS scm
		INNER JOIN ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list ON ssl_list.var_str = scm.sysid_student
		WHERE
			(scm.memo_date BETWEEN @date_start AND @date_end) OR
			(scm.created_on BETWEEN @date_start AND @date_end)
		UNION ALL
		SELECT
			std.discount_id AS payment_discount_reimbursement_id,
			sec.sysid_student AS sysid_student,
			std.discount_date AS reflected_date,
			NULL AS receipt_date,
			std.created_on AS received_date,
			NULL AS receipt_no,
			sci.scholarship_description AS remarks_discount_reimbursement_description,
			std.is_downpayment AS is_downpayment,
			std.amount AS amount,
			NULL AS discount_amount,
			NULL AS amount_tendered,
			NULL AS bank,
			NULL AS check_no,
			'false' AS is_miscellaneous_income,
			'false' AS is_payment,
			'true' AS is_discount,
			'false' AS is_reimbursement,
			'false' AS is_credit_memo,
			'false' AS is_balance_forwarded,
			CASE WHEN (std.discount_date BETWEEN @date_start AND @date_end)
				THEN
					('true')
				ELSE
					('false')
				END AS is_included_in_post,	
			NULL AS sysid_account_credit,		
			NULL AS account_code,
			NULL AS account_name
		FROM
			ums.student_discounts AS std
		INNER JOIN ums.student_scholarship AS sts ON sts.sysid_studentscholarship = std.sysid_studentscholarship
		INNER JOIN ums.student_enrolment_level AS sel ON sel.sysid_enrolmentlevel = sts.sysid_enrolmentlevel
		INNER JOIN ums.student_enrolment_course AS sec ON sec.sysid_enrolmentcourse = sel.sysid_enrolmentcourse
		INNER JOIN ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list ON ssl_list.var_str = sec.sysid_student
		INNER JOIN ums.scholarship_information AS sci ON sci.sysid_scholarship = sts.sysid_scholarship
		WHERE
			(sts.is_marked_deleted = 0) AND
			((std.discount_date BETWEEN @date_start AND @date_end) OR
			(std.created_on BETWEEN @date_start AND @date_end))
		UNION ALL
		SELECT
			stp.payment_id AS payment_discount_reimbursement_id,
			stp.sysid_student AS sysid_student,
			stp.payment_date AS reflected_date,
			stp.receipt_date AS receipt_date,
			stp.created_on AS received_date,
			stp.receipt_no AS receipt_no,
			stp.remarks AS remarks_discount_reimbursement_description,
			stp.is_downpayment AS is_downpayment,
			stp.amount AS amount,
			stp.discount_amount AS discount_amount,
			stp.amount_tendered AS amount_tendered,
			stp.bank AS bank,
			stp.check_no AS check_no,
			stp.is_miscellaneous_income AS is_miscellaneous_income,
			'true' AS is_payment,
			'false' AS is_discount,
			'false' AS is_reimbursement,
			'false' AS is_credit_memo,
			'false' AS is_balance_forwarded,
			CASE WHEN (stp.payment_date BETWEEN @date_start AND @date_end)
				THEN
					('true')
				ELSE
					('false')
				END AS is_included_in_post,
			coa.sysid_account AS sysid_account_credit,
			coa.account_code AS account_code,
			coa.account_name AS account_name
		FROM
			ums.student_payments AS stp
		INNER JOIN ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list ON ssl_list.var_str = stp.sysid_student
		LEFT JOIN ums.chart_of_accounts AS coa ON coa.sysid_account = stp.sysid_account_credit
		WHERE
			(stp.payment_date BETWEEN @date_start AND @date_end) OR
			(stp.created_on BETWEEN @date_start AND @date_end)		
		UNION ALL
		SELECT
			sbf.balance_id AS payment_discount_reimbursement_id,
			sbf.sysid_student AS sysid_student,
			NULL AS reflected_date,
			NULL AS receipt_date,
			sbf.created_on AS received_date,
			NULL AS receipt_no,
			NULL AS remarks_discount_reimbursement_description,
			'false' AS is_downpayment,
			sbf.amount AS amount,
			NULL AS discount_amount,
			NULL AS amount_tendered,
			NULL AS bank,
			NULL AS check_no,
			'false' AS is_miscellaneous_income,
			'false' AS is_payment,
			'false' AS is_discount,
			'false' AS is_reimbursement,
			'false' AS is_credit_memo,
			'true' AS is_balance_forwarded,
			'true' AS is_included_in_post,
			NULL AS sysid_account_credit,
			NULL AS account_code,
			NULL AS account_name
		FROM
			ums.student_balance_forwarded AS sbf
		INNER JOIN ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list ON ssl_list.var_str = sbf.sysid_student	
		ORDER BY
			is_reimbursement DESC, is_downpayment DESC, is_balance_forwarded ASC, reflected_date ASC		

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student payment, discounts', 'Student Payment, Discounts and Reimbursement'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentListDateStartEndStudentPaymentsDiscountsReimbursement TO db_umsusers
GO
-------------------------------------------------------------


-- ################################################TABLE "student_credit_memo" OBJECTS######################################################





-- ################################################TABLE "student_balance_forwarded" OBJECTS######################################################
-- verifies if the student_balance_forwarded table exists
IF OBJECT_ID('ums.student_balance_forwarded', 'U') IS NOT NULL
	DROP TABLE ums.student_balance_forwarded
GO

CREATE TABLE ums.student_balance_forwarded 			
(
	balance_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Balance_Forwarded_Balance_ID_PK PRIMARY KEY (balance_id),
	sysid_student varchar (50) NOT NULL
		CONSTRAINT Student_Balance_Forwarded_SysID_Student_FK FOREIGN KEY REFERENCES ums.student_information(sysid_student) ON UPDATE NO ACTION
		CONSTRAINT Student_Balance_Forwarded_SysID_Student_UQ UNIQUE (sysid_student),

	amount decimal (12, 2) NOT NULL,

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Balance_Forwarded_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Balance_Forwarded_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Balance_Forwarded_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_balance_forwarded table 
CREATE INDEX Student_Balance_Forwarded_Balance_ID_Index
	ON ums.student_balance_forwarded (balance_id DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertUpdateStudentBalanceForwarded" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertUpdateStudentBalanceForwarded')
   DROP PROCEDURE ums.InsertUpdateStudentBalanceForwarded
GO

CREATE PROCEDURE ums.InsertUpdateStudentBalanceForwarded

	@balance_id bigint = 0,
	@sysid_student varchar (50) = '',
	@amount decimal (12, 2) = 0,

	@network_information varchar (MAX) = '',
	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, (SELECT
															created_on
														FROM
															ums.student_balance_forwarded
														WHERE
															(balance_id = @balance_id))) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @system_user_id, @network_information

		IF NOT EXISTS (SELECT balance_id FROM ums.student_balance_forwarded WHERE sysid_student = @sysid_student)
		BEGIN

			INSERT INTO ums.student_balance_forwarded
			(
				sysid_student,
				amount,
				created_by
			)
			VALUES
			(
				@sysid_student,
				@amount,
				@system_user_id
			)		

		END
		ELSE
		BEGIN

			UPDATE ums.student_balance_forwarded SET
				amount = @amount,

				edited_by = @system_user_id
			WHERE
				balance_id = @balance_id
		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create/Update a student balance forwarded', 'Student Balance Forwarded'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertUpdateStudentBalanceForwarded TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentBalanceForwarded" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentBalanceForwarded')
   DROP PROCEDURE ums.DeleteStudentBalanceForwarded
GO

CREATE PROCEDURE ums.DeleteStudentBalanceForwarded

	@balance_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR 
		(ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, (SELECT
															created_on
														FROM
															ums.student_balance_forwarded
														WHERE
															(balance_id = @balance_id))) = 0)
	BEGIN

		IF EXISTS (SELECT balance_id FROM ums.student_balance_forwarded WHERE balance_id = @balance_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_balance_forwarded SET
				edited_by = @deleted_by
			WHERE
				balance_id = @balance_id

			DELETE FROM ums.student_balance_forwarded WHERE balance_id = @balance_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Deleted a student balance forwarded', 'Student Balance Forwarded'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentBalanceForwarded TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "IsExistsSysIDStudentStudentBalanceForwarded" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'IsExistsSysIDStudentStudentBalanceForwarded')
   DROP PROCEDURE ums.IsExistsSysIDStudentStudentBalanceForwarded
GO

CREATE PROCEDURE ums.IsExistsSysIDStudentStudentBalanceForwarded

	@sysid_student varchar (50) = '',
	@system_user_id varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT ums.IsExistsSysIDStudentStudentBalanceForward(@sysid_student)

	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a schedule information', 'Schedule Information'
	END	
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.IsExistsSysIDStudentStudentBalanceForwarded TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the "IsExistsSysIDStudentStudentBalanceForward" function already exist
IF OBJECT_ID (N'ums.IsExistsSysIDStudentStudentBalanceForward') IS NOT NULL
   DROP FUNCTION ums.IsExistsSysIDStudentStudentBalanceForward
GO

CREATE FUNCTION ums.IsExistsSysIDStudentStudentBalanceForward
(	
	@sysid_student varchar (50) = ''
)
RETURNS bit
AS
BEGIN
	
	DECLARE @result bit

	SET @result = 0
	
	IF EXISTS (SELECT balance_id FROM ums.student_balance_forwarded WHERE sysid_student = @sysid_student)
	BEGIN
		SET @result = 1
	END
	
	RETURN @result
END
GO
------------------------------------------------------


-- ##############################################END TABLE "student_balance_forwarded" OBJECTS######################################################





-- ################################################TABLE "student_promissory_note" OBJECTS######################################################
-- verifies if the student_promissory_note table exists
IF OBJECT_ID('ums.student_promissory_note', 'U') IS NOT NULL
	DROP TABLE ums.student_promissory_note
GO

CREATE TABLE ums.student_promissory_note 			
(
	promissory_note_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Student_Promissory_Note_ID_PK PRIMARY KEY (promissory_note_id),
	sysid_student varchar (50) NOT NULL
		CONSTRAINT Student_Promissory_Note_SysID_Student_FK FOREIGN KEY REFERENCES ums.student_information(sysid_student) ON UPDATE NO ACTION,
	note_received_date datetime NOT NULL
		CONSTRAINT Student_Promissory_Note_Received_Date_CK CHECK (CONVERT(varchar, note_received_date, 109) LIKE '%12:00:00:000AM'),
	reference_no varchar (50) NULL,
	promissory_note varchar (MAX) NULL,	

	is_downpayment bit NOT NULL DEFAULT(0),

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Student_Promissory_Note_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Student_Promissory_Note_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Student_Promissory_Note_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the student_promissory_note table 
CREATE INDEX Student_Promissory_Note_Promissory_Note_ID_Index
	ON ums.student_promissory_note (promissory_note_id DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertStudentPromissoryNote" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertStudentPromissoryNote')
   DROP PROCEDURE ums.InsertStudentPromissoryNote
GO

CREATE PROCEDURE ums.InsertStudentPromissoryNote

	@sysid_student varchar (50) = '',
	@note_received_date datetime,
	@reference_no varchar (50) = '',
	@promissory_note varchar (MAX) = '',
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, GETDATE()) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.student_promissory_note
		(
			sysid_student,
			note_received_date,
			reference_no,
			promissory_note,
			is_downpayment,

			created_by
		)
		VALUES
		(
			@sysid_student,
			@note_received_date,
			@reference_no,
			@promissory_note,
			@is_downpayment,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new student promissory note', 'Student Promissory Note'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertStudentPromissoryNote TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateStudentPromissoryNote" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateStudentPromissoryNote')
   DROP PROCEDURE ums.UpdateStudentPromissoryNote
GO

CREATE PROCEDURE ums.UpdateStudentPromissoryNote

	@promissory_note_id bigint = 0,
	@note_received_date datetime,
	@reference_no varchar (50) = '',
	@promissory_note varchar (MAX) = '',
	@is_downpayment bit = 0,

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, (SELECT
															created_on
														FROM
															ums.student_promissory_note
														WHERE
															(promissory_note_id = @promissory_note_id))) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.student_promissory_note SET
			note_received_date = @note_received_date,
			reference_no = @reference_no,
			promissory_note = @promissory_note,			
			is_downpayment = @is_downpayment,

			edited_by = @edited_by
		WHERE
			promissory_note_id = @promissory_note_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a student promissory note', 'Student Promissory Note'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateStudentPromissoryNote TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteStudentPromissoryNote" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteStudentPromissoryNote')
   DROP PROCEDURE ums.DeleteStudentPromissoryNote
GO

CREATE PROCEDURE ums.DeleteStudentPromissoryNote

	@promissory_note_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, 
												(SELECT
														created_on
													FROM
														ums.student_promissory_note
													WHERE
														(promissory_note_id = @promissory_note_id))) = 0)
	BEGIN

		IF EXISTS (SELECT promissory_note_id FROM ums.student_promissory_note WHERE promissory_note_id = @promissory_note_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.student_promissory_note SET
				edited_by = @deleted_by
			WHERE
				promissory_note_id = @promissory_note_id

			DELETE FROM ums.student_promissory_note WHERE promissory_note_id = @promissory_note_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a student promissory note', 'Student Promissory Note'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteStudentPromissoryNote TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectBySysIDStudentListDateStartEndStudentPromissoryNote" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectBySysIDStudentListDateStartEndStudentPromissoryNote')
   DROP PROCEDURE ums.SelectBySysIDStudentListDateStartEndStudentPromissoryNote
GO

CREATE PROCEDURE ums.SelectBySysIDStudentListDateStartEndStudentPromissoryNote
	
	@sysid_student_list nvarchar (MAX) = '',
	@date_start datetime,
	@date_end datetime,

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT
			spn.promissory_note_id AS promissory_note_id,
			spn.sysid_student AS sysid_student,
			spn.note_received_date AS reflected_date,			
			spn.created_on AS received_date,
			spn.reference_no AS reference_no,
			spn.promissory_note AS promissory_note,
			spn.is_downpayment AS is_downpayment,
			CASE WHEN (spn.note_received_date BETWEEN @date_start AND @date_end)
				THEN
					('true')
				ELSE
					('false')
				END AS is_included_in_post
		FROM
			ums.student_promissory_note AS spn
		INNER JOIN ums.IterateListToTable (@sysid_student_list, ',') AS ssl_list ON ssl_list.var_str = spn.sysid_student
		WHERE
			(spn.note_received_date BETWEEN @date_start AND @date_end) OR
			(spn.created_on BETWEEN @date_start AND @date_end)

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a student promissory note', 'Student Promissory Note'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectBySysIDStudentListDateStartEndStudentPromissoryNote TO db_umsusers
GO
-------------------------------------------------------------

-- ##############################################END TABLE "student_promissory_note" OBJECTS######################################################





-- ################################################TABLE "cancelled_receipt_no" OBJECTS######################################################
-- verifies if the cancelled_receipt_no table exists
IF OBJECT_ID('ums.cancelled_receipt_no', 'U') IS NOT NULL
	DROP TABLE ums.cancelled_receipt_no
GO

CREATE TABLE ums.cancelled_receipt_no 			
(
	receipt_no varchar (50) NOT NULL
		CONSTRAINT Cancelled_Receipt_No_Receipt_No_PK PRIMARY KEY (receipt_no),
	receipt_date datetime NOT NULL
		CONSTRAINT Cancelled_Receipt_No_Receipt_Date_CK CHECK (CONVERT(varchar, receipt_date, 109) LIKE '%12:00:00:000AM'),
	remarks varchar (MAX) NULL,

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Cancelled_Receipt_No_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Cancelled_Receipt_No_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Cancelled_Receipt_No_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the cancelled_receipt_no table 
CREATE INDEX Cancelled_Receipt_No_Receipt_No_Index
	ON ums.cancelled_receipt_no (receipt_no ASC)
GO
------------------------------------------------------------------

-- create an index of the cancelled_receipt_no table 
CREATE INDEX Cancelled_Receipt_No_Receipt_Date_Index
	ON ums.cancelled_receipt_no (receipt_date DESC)
GO
------------------------------------------------------------------

-- create an index of the cancelled_receipt_no table 
CREATE INDEX Cancelled_Receipt_No_Created_On_Index
	ON ums.cancelled_receipt_no (created_on DESC)
GO
------------------------------------------------------------------

-- create an index of the cancelled_receipt_no table 
CREATE INDEX Cancelled_Receipt_No_Created_By_Index
	ON ums.cancelled_receipt_no (created_by DESC)
GO
------------------------------------------------------------------

--verifies that the trigger "Cancelled_Receipt_No_Trigger_Insert" already exist
IF OBJECT_ID ('ums.Cancelled_Receipt_No_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.Cancelled_Receipt_No_Trigger_Insert
GO

CREATE TRIGGER ums.Cancelled_Receipt_No_Trigger_Insert
	ON  ums.cancelled_receipt_no
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @receipt_no varchar (50)
	DECLARE @receipt_date datetime
	DECLARE @remarks varchar (MAX)

	DECLARE @created_by varchar (50)
	
	SELECT 
		@receipt_no = i.receipt_no,
		@receipt_date = i.receipt_date,
		@remarks = i.remarks,
		@created_by = i.created_by
	FROM INSERTED AS i

	SET @transaction_done = 'CANCELLED a receipt no ' + 
							'[Receipt No: ' + ISNULL(@receipt_no, '') +
							'][Receipt Date: ' + ISNULL(CONVERT(varchar, @receipt_date, 101), '') +
							'][Remarks: ' + ISNULL(@remarks, '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
-----------------------------------------------------------------

/*verifies that the trigger "Cancelled_Receipt_No_Trigger_Instead_Update" already exist*/
IF OBJECT_ID ('ums.Cancelled_Receipt_No_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.Cancelled_Receipt_No_Trigger_Instead_Update
GO

CREATE TRIGGER ums.Cancelled_Receipt_No_Trigger_Instead_Update
	ON  ums.cancelled_receipt_no
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @receipt_no varchar (50)
	DECLARE @receipt_date datetime
	DECLARE @remarks varchar (MAX)

	DECLARE @edited_by varchar (50)
	
	DECLARE @receipt_date_b datetime
	DECLARE @remarks_b varchar (MAX)

	DECLARE @has_update bit

	DECLARE cancelled_receipt_no_update_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
		FOR SELECT i.receipt_no, i.receipt_date, i.remarks, i.edited_by
				FROM INSERTED AS i

	OPEN cancelled_receipt_no_update_cursor

	FETCH NEXT FROM cancelled_receipt_no_update_cursor
		INTO @receipt_no, @receipt_date, @remarks, @edited_by

	WHILE @@FETCH_STATUS = 0
	BEGIN

		SELECT
			@receipt_date_b = crn.receipt_date,
			@remarks_b = crn.remarks
		FROM
			ums.cancelled_receipt_no AS crn
		WHERE
			receipt_no = @receipt_no

		SET @transaction_done = ''
		SET @has_update = 0

		IF (NOT ISNULL(CONVERT(varchar, @receipt_date, 101), '') = ISNULL(CONVERT(varchar, @receipt_date_b, 101), ''))
		BEGIN
			SET @transaction_done = @transaction_done + '[Receipt Date Before: ' + ISNULL(CONVERT(varchar, @receipt_date_b, 101), '') + ']' +
														'[Receipt Date After: ' + ISNULL(CONVERT(varchar, @receipt_date, 101), '') + ']'
			SET @has_update = 1
		END
		ELSE
		BEGIN
			SET @transaction_done = @transaction_done + '[Receipt Date: ' + ISNULL(CONVERT(varchar, @receipt_date, 101), '') + ']'
		END

		IF NOT ISNULL(@remarks COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@remarks_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Remarks Before: ' + ISNULL(@remarks_b, '') + ']' +
														'[Remarks After: ' + ISNULL(@remarks, '') + ']'
			SET @has_update = 1
		END

		IF @has_update = 1
		BEGIN

			UPDATE ums.cancelled_receipt_no SET
				receipt_date = @receipt_date,
				remarks = @remarks,

				edited_on = GETDATE(),
				edited_by = @edited_by
			WHERE
				receipt_no = @receipt_no

			SET @transaction_done = 'UPDATED a cancelled receipt no ' + 
									'[Receipt No: ' + ISNULL(@receipt_no, '') +						
									']' + @transaction_done

			IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
			BEGIN
				SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @edited_by
			END
					
			EXECUTE ums.InsertTransactionLog @edited_by, @network_information, @transaction_done	
		END
		ELSE IF NOT @edited_by IS NULL
		BEGIN

			--used for the delete trigger
			UPDATE ums.cancelled_receipt_no SET
				edited_on = GETDATE(),
				edited_by = @edited_by
			WHERE
				receipt_no = @receipt_no

		END

		FETCH NEXT FROM cancelled_receipt_no_update_cursor
			INTO @receipt_no, @receipt_date, @remarks, @edited_by

	END

	CLOSE cancelled_receipt_no_update_cursor
	DEALLOCATE cancelled_receipt_no_update_cursor

GO
-----------------------------------------------------------------

--verifies that the trigger "Cancelled_Receipt_No_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.Cancelled_Receipt_No_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.Cancelled_Receipt_No_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.Cancelled_Receipt_No_Trigger_Instead_Delete
	ON  ums.cancelled_receipt_no
	FOR DELETE 
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @receipt_no varchar (50)
	DECLARE @receipt_date datetime
	DECLARE @remarks varchar (MAX)

	DECLARE @deleted_by varchar (50)

	DECLARE cancelled_receipt_no_delete_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
		FOR SELECT d.receipt_no, d.receipt_date, d.remarks, d.edited_by
				FROM DELETED AS d

	OPEN cancelled_receipt_no_delete_cursor

	FETCH NEXT FROM cancelled_receipt_no_delete_cursor
		INTO @receipt_no, @receipt_date, @remarks, @deleted_by

	WHILE @@FETCH_STATUS = 0
	BEGIN		

		SET @transaction_done = 'DELETED a cancelled receipt no ' + 
								'[Receipt No: ' + ISNULL(@receipt_no, '') +
								'][Receipt Date: ' + ISNULL(CONVERT(varchar, @receipt_date, 101), '') +
								'][Remarks: ' + ISNULL(@remarks, '') +
								']'


		IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
		BEGIN
			SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @deleted_by
		END
				
		EXECUTE ums.InsertTransactionLog @deleted_by, @network_information, @transaction_done

		FETCH NEXT FROM cancelled_receipt_no_delete_cursor
			INTO @receipt_no, @receipt_date, @remarks, @deleted_by

	END

	CLOSE cancelled_receipt_no_delete_cursor
	DEALLOCATE cancelled_receipt_no_delete_cursor


GO
-----------------------------------------------------------------

-- verifies if the procedure "InsertCancelledReceiptNo" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertCancelledReceiptNo')
   DROP PROCEDURE ums.InsertCancelledReceiptNo
GO

CREATE PROCEDURE ums.InsertCancelledReceiptNo

	@receipt_no varchar (50) = '',
	@receipt_date datetime = '',
	@remarks varchar (MAX) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(@receipt_date, GETDATE()) = 0) AND
		(ums.IsExistsReceiptNoStudentPay(NULL, @receipt_no) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		INSERT INTO ums.cancelled_receipt_no
		(
			receipt_no,
			receipt_date,
			remarks,

			created_by
		)
		VALUES
		(
			@receipt_no,
			@receipt_date,
			@remarks,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new cancelled receipt no', 'Cancelled Receipt No'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertCancelledReceiptNo TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateCancelledReceiptNo" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateCancelledReceiptNo')
   DROP PROCEDURE ums.UpdateCancelledReceiptNo
GO

CREATE PROCEDURE ums.UpdateCancelledReceiptNo

	@receipt_no varchar (50) = '',
	@receipt_date datetime = '',	
	@remarks varchar (MAX) = '',

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(@receipt_date, (SELECT
																	created_on
																FROM
																	ums.cancelled_receipt_no
																WHERE
																	(receipt_no = @receipt_no))) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.cancelled_receipt_no SET
			receipt_date = @receipt_date,
			remarks = @remarks,

			edited_by = @edited_by
		WHERE
			receipt_no = @receipt_no
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a cancelled receipt no', 'Cancelled Receipt No'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateCancelledReceiptNo TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteCancelledReceiptNo" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteCancelledReceiptNo')
   DROP PROCEDURE ums.DeleteCancelledReceiptNo
GO

CREATE PROCEDURE ums.DeleteCancelledReceiptNo

	@receipt_no varchar (50) = '',

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, 
												(SELECT
														created_on
													FROM
														ums.cancelled_receipt_no
													WHERE
														(receipt_no = @receipt_no))) = 0)
	BEGIN

		IF EXISTS (SELECT receipt_no FROM ums.cancelled_receipt_no WHERE receipt_no = @receipt_no)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.cancelled_receipt_no SET
				edited_by = @deleted_by
			WHERE
				receipt_no = @receipt_no

			DELETE FROM ums.cancelled_receipt_no WHERE receipt_no = @receipt_no

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a cancelled receipt no', 'Cancelled Receipt No'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteCancelledReceiptNo TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectCancelledReceiptNo" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectCancelledReceiptNo')
   DROP PROCEDURE ums.SelectCancelledReceiptNo
GO

CREATE PROCEDURE ums.SelectCancelledReceiptNo
	
	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR (ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		SELECT
			crn.receipt_no AS receipt_no,
			crn.receipt_date AS receipt_date,
			crn.created_on AS date_cancelled,
			crn.remarks AS remarks
		FROM
			ums.cancelled_receipt_no AS crn
		ORDER BY
			crn.receipt_no ASC

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a cancelled receipt no', 'Cancelled Receipt No'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectCancelledReceiptNo TO db_umsusers
GO
-------------------------------------------------------------

-- ##############################################END TABLE "cancelled_receipt_no" OBJECTS######################################################






-- ################################################TABLE "miscellaneous_income" OBJECTS######################################################
-- verifies if the miscellaneous_income table exists
IF OBJECT_ID('ums.miscellaneous_income', 'U') IS NOT NULL
	DROP TABLE ums.miscellaneous_income
GO

CREATE TABLE ums.miscellaneous_income 			
(
	payment_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Miscellaneous_Income_Payment_ID_PK PRIMARY KEY (payment_id),
	received_from varchar (150) NOT NULL,
	sysid_student varchar (50) NULL
		CONSTRAINT Miscellaneous_Income_SysID_Student_FK FOREIGN KEY REFERENCES ums.student_information(sysid_student) ON UPDATE NO ACTION,
	sysid_employee varchar (50) NULL
		CONSTRAINT Miscellaneous_Income_SysID_Employee_FK FOREIGN KEY REFERENCES ums.employee_information(sysid_employee) ON UPDATE NO ACTION,
	payment_date datetime NOT NULL
		CONSTRAINT Miscellaneous_Income_Payment_Date_CK CHECK (CONVERT(varchar, payment_date, 109) LIKE '%12:00:00:000AM'),
	receipt_date datetime NOT NULL
		CONSTRAINT Miscellaneous_Income_Receipt_Date_CK CHECK (CONVERT(varchar, receipt_date, 109) LIKE '%12:00:00:000AM'),
	receipt_no varchar (50) NOT NULL
		CONSTRAINT Miscellaneous_Income_Receipt_No_UQ UNIQUE (receipt_no),
	remarks varchar (100) NULL,

	amount decimal (12, 2) NOT NULL,
	discount_amount decimal (12, 2) NULL,
	amount_tendered decimal (12, 2) NULL,

	bank varchar (50) NULL,
	check_no varchar (50) NULL,

	sysid_account_credit varchar (50) NOT NULL
		CONSTRAINT Miscellaneous_Income_SysID_Account_Credit_FK FOREIGN KEY REFERENCES ums.chart_of_accounts(sysid_account) ON UPDATE NO ACTION,

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Miscellaneous_Income_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Miscellaneous_Income_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Miscellaneous_Income_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the miscellaneous_income table 
CREATE INDEX Miscellaneous_Income_Payment_ID_Index
	ON ums.miscellaneous_income (payment_id DESC)
GO
------------------------------------------------------------------

-- create an index of the miscellaneous_income table 
CREATE INDEX Miscellaneous_Income_Receipt_Date_Index
	ON ums.miscellaneous_income (receipt_date DESC)
GO
------------------------------------------------------------------

-- create an index of the miscellaneous_income table 
CREATE INDEX Miscellaneous_Income_Created_On_Index
	ON ums.miscellaneous_income (created_on DESC)
GO
------------------------------------------------------------------

-- create an index of the miscellaneous_income table 
CREATE INDEX Miscellaneous_Income_Created_By_Index
	ON ums.miscellaneous_income (created_by DESC)
GO
------------------------------------------------------------------

-- verifies if the procedure "InsertMiscellaneousIncome" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertMiscellaneousIncome')
   DROP PROCEDURE ums.InsertMiscellaneousIncome
GO

CREATE PROCEDURE ums.InsertMiscellaneousIncome

	@received_from varchar (150) = '',
	@sysid_student varchar (50) = '',
	@sysid_employee varchar (50) = '',
	@payment_date datetime,
	@receipt_date datetime,
	@receipt_no varchar (50) = '',
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@discount_amount decimal (12, 2) = 0,
	@amount_tendered decimal (12, 2) = 0,
	@bank varchar (50) = '',
	@check_no varchar (50) = '',
	@sysid_account_credit varchar (50) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(@receipt_date, GETDATE()) = 0) AND
		(ums.IsExistsReceiptNoStudentPay(NULL, @receipt_no) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		IF (NOT @sysid_student IS NULL)
		BEGIN
			SET @sysid_employee = NULL
		END
		ELSE IF (NOT @sysid_employee IS NULL)
		BEGIN
			SET @sysid_student = NULL
		END

		INSERT INTO ums.miscellaneous_income
		(
			received_from,
			sysid_student,
			sysid_employee,
			payment_date,
			receipt_date,
			receipt_no,
			remarks,
			amount,
			discount_amount,
			amount_tendered,
			bank,
			check_no,
			sysid_account_credit,

			created_by
		)
		VALUES
		(
			@received_from,
			@sysid_student,
			@sysid_employee,
			@payment_date,
			@receipt_date,
			@receipt_no,
			@remarks,
			@amount,
			@discount_amount,
			@amount_tendered,
			@bank,
			@check_no,
			@sysid_account_credit,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new miscellaneous income', 'Miscellaneous Income'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertMiscellaneousIncome TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateMiscellaneousIncome" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateMiscellaneousIncome')
   DROP PROCEDURE ums.UpdateMiscellaneousIncome
GO

CREATE PROCEDURE ums.UpdateMiscellaneousIncome

	@payment_id bigint = 0,
	@received_from varchar (150) = '',
	@sysid_student varchar (50) = '',
	@sysid_employee varchar (50) = '',
	@payment_date datetime,
	@receipt_date datetime,
	@receipt_no varchar (50) = '',
	@remarks varchar (100) = '',
	@amount decimal (12, 2) = 0,
	@discount_amount decimal (12, 2) = 0,
	@amount_tendered decimal (12, 2) = 0,
	@bank varchar (50) = '',
	@check_no varchar (50) = '',
	@sysid_account_credit varchar (50) = '',

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(@receipt_date, (SELECT
																	created_on
																FROM
																	ums.miscellaneous_income
																WHERE
																	(payment_id = @payment_id))) = 0) AND
		(ums.IsExistsReceiptNoStudentPay(@payment_id, @receipt_no) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		IF (NOT @sysid_student IS NULL)
		BEGIN
			SET @sysid_employee = NULL
		END
		ELSE IF (NOT @sysid_employee IS NULL)
		BEGIN
			SET @sysid_student = NULL
		END

		UPDATE ums.miscellaneous_income SET
			received_from = @received_from,
			sysid_student = @sysid_student,
			sysid_employee = @sysid_employee,
			payment_date = @payment_date,
			receipt_date = @receipt_date,
			receipt_no = @receipt_no,
			remarks = @remarks,
			amount = @amount,
			discount_amount = @discount_amount,			
			amount_tendered = @amount_tendered,
			bank = @bank,
			check_no = @check_no,
			sysid_account_credit = @sysid_account_credit,

			edited_by = @edited_by
		WHERE
			payment_id = @payment_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a miscellaneous income', 'Miscellaneous Income'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateMiscellaneousIncome TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteMiscellaneousIncome" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteMiscellaneousIncome')
   DROP PROCEDURE ums.DeleteMiscellaneousIncome
GO

CREATE PROCEDURE ums.DeleteMiscellaneousIncome

	@payment_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, 
												(SELECT
														created_on
													FROM
														ums.miscellaneous_income
													WHERE
														(payment_id = @payment_id))) = 0)
	BEGIN

		IF EXISTS (SELECT payment_id FROM ums.miscellaneous_income WHERE payment_id = @payment_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.miscellaneous_income SET
				edited_by = @deleted_by
			WHERE
				payment_id = @payment_id

			DELETE FROM ums.miscellaneous_income WHERE payment_id = @payment_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a miscellaneous income', 'Miscellaneous Income'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteMiscellaneousIncome TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectByQueryStringDateStartEndMiscellaneousIncome" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectByQueryStringDateStartEndMiscellaneousIncome')
   DROP PROCEDURE ums.SelectByQueryStringDateStartEndMiscellaneousIncome
GO

CREATE PROCEDURE ums.SelectByQueryStringDateStartEndMiscellaneousIncome
	
	@query_string varchar (50) = '',
	@date_start datetime,
	@date_end datetime,

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		-- A - '*'
		-- B - Date Start / End

		--	A	B	
		-- =======
		--	0	0
		--	0	1
		--	1	0
		--	1	1

		SELECT @query_string = '%' + RTRIM(LTRIM(@query_string)) + '%'

		IF (NOT ISNULL(@query_string, '') = '%*%') AND ((@date_start IS NULL) OR (@date_end IS NULL))				-- (00)				
		BEGIN

			SELECT
				mci.payment_id AS payment_id,
				mci.received_from AS received_from,
				mci.sysid_student AS sysid_student,
				mci.sysid_employee AS sysid_employee,
				mci.payment_date AS reflected_date,
				mci.receipt_date AS receipt_date,
				mci.created_on AS received_date,
				mci.receipt_no AS receipt_no,
				mci.remarks AS remarks,
				mci.amount AS amount,
				mci.discount_amount AS discount_amount,
				mci.amount_tendered AS amount_tendered,
				mci.bank AS bank,
				mci.check_no AS check_no,
				coa.sysid_account AS sysid_account_credit,
				coa.account_code AS account_code,
				coa.account_name AS account_name
			FROM
				ums.miscellaneous_income AS mci
			INNER JOIN ums.chart_of_accounts AS coa ON coa.sysid_account = mci.sysid_account_credit
			WHERE
				(mci.received_from LIKE @query_string) OR 
				((REPLACE(mci.received_from, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.receipt_no LIKE @query_string) OR 
				((REPLACE(mci.receipt_no, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.remarks LIKE @query_string) OR 
				((REPLACE(mci.remarks, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.bank LIKE @query_string) OR 
				((REPLACE(mci.bank, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.check_no LIKE @query_string) OR 
				((REPLACE(mci.check_no, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_code LIKE @query_string) OR 
				((REPLACE(coa.account_code, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_name LIKE @query_string) OR 
				((REPLACE(coa.account_name, ' ', '')) LIKE REPLACE(@query_string, ' ', ''))
			ORDER BY
				mci.payment_date ASC, mci.received_from ASC, coa.account_code ASC

		END
		ELSE IF (NOT ISNULL(@query_string, '') = '%*%') AND ((NOT @date_start IS NULL) AND (NOT @date_end IS NULL))		-- (01)
		BEGIN

			SELECT
				mci.payment_id AS payment_id,
				mci.received_from AS received_from,
				mci.sysid_student AS sysid_student,
				mci.sysid_employee AS sysid_employee,
				mci.payment_date AS reflected_date,
				mci.receipt_date AS receipt_date,
				mci.created_on AS received_date,
				mci.receipt_no AS receipt_no,
				mci.remarks AS remarks,
				mci.amount AS amount,
				mci.discount_amount AS discount_amount,
				mci.amount_tendered AS amount_tendered,
				mci.bank AS bank,
				mci.check_no AS check_no,
				coa.sysid_account AS sysid_account_credit,
				coa.account_code AS account_code,
				coa.account_name AS account_name
			FROM
				ums.miscellaneous_income AS mci
			INNER JOIN ums.chart_of_accounts AS coa ON coa.sysid_account = mci.sysid_account_credit
			WHERE
				((mci.received_from LIKE @query_string) OR 
				((REPLACE(mci.received_from, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.receipt_no LIKE @query_string) OR 
				((REPLACE(mci.receipt_no, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.remarks LIKE @query_string) OR 
				((REPLACE(mci.remarks, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.bank LIKE @query_string) OR 
				((REPLACE(mci.bank, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(mci.check_no LIKE @query_string) OR 
				((REPLACE(mci.check_no, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_code LIKE @query_string) OR 
				((REPLACE(coa.account_code, ' ', '')) LIKE REPLACE(@query_string, ' ', '')) OR
				(coa.account_name LIKE @query_string) OR 
				((REPLACE(coa.account_name, ' ', '')) LIKE REPLACE(@query_string, ' ', ''))) AND
				((mci.payment_date BETWEEN @date_start AND @date_end) OR
				(mci.created_on BETWEEN @date_start AND @date_end))	
			ORDER BY
				mci.payment_date ASC, mci.received_from ASC, coa.account_code ASC

		END
		ELSE IF (ISNULL(@query_string, '') = '%*%') AND ((@date_start IS NULL) OR (@date_end IS NULL))				-- (10)	
		BEGIN

			SELECT
				mci.payment_id AS payment_id,
				mci.received_from AS received_from,
				mci.sysid_student AS sysid_student,
				mci.sysid_employee AS sysid_employee,
				mci.payment_date AS reflected_date,
				mci.receipt_date AS receipt_date,
				mci.created_on AS received_date,
				mci.receipt_no AS receipt_no,
				mci.remarks AS remarks,
				mci.amount AS amount,
				mci.discount_amount AS discount_amount,
				mci.amount_tendered AS amount_tendered,
				mci.bank AS bank,
				mci.check_no AS check_no,
				coa.sysid_account AS sysid_account_credit,
				coa.account_code AS account_code,
				coa.account_name AS account_name
			FROM
				ums.miscellaneous_income AS mci
			INNER JOIN ums.chart_of_accounts AS coa ON coa.sysid_account = mci.sysid_account_credit
			ORDER BY
				mci.payment_date ASC, mci.received_from ASC, coa.account_code ASC

		END
		ELSE IF (ISNULL(@query_string, '') = '%*%') AND ((NOT @date_start IS NULL) AND (NOT @date_end IS NULL))		-- (11)
		BEGIN

			SELECT
				mci.payment_id AS payment_id,
				mci.received_from AS received_from,
				mci.sysid_student AS sysid_student,
				mci.sysid_employee AS sysid_employee,
				mci.payment_date AS reflected_date,
				mci.receipt_date AS receipt_date,
				mci.created_on AS received_date,
				mci.receipt_no AS receipt_no,
				mci.remarks AS remarks,
				mci.amount AS amount,
				mci.discount_amount AS discount_amount,
				mci.amount_tendered AS amount_tendered,
				mci.bank AS bank,
				mci.check_no AS check_no,
				coa.sysid_account AS sysid_account_credit,
				coa.account_code AS account_code,
				coa.account_name AS account_name
			FROM
				ums.miscellaneous_income AS mci
			INNER JOIN ums.chart_of_accounts AS coa ON coa.sysid_account = mci.sysid_account_credit
			WHERE
				((mci.payment_date BETWEEN @date_start AND @date_end) OR
				(mci.created_on BETWEEN @date_start AND @date_end))	
			ORDER BY
				mci.payment_date ASC, mci.received_from ASC, coa.account_code ASC

		END

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a miscellaneous income', 'Miscellaneous Income'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectByQueryStringDateStartEndMiscellaneousIncome TO db_umsusers
GO
-------------------------------------------------------------

-- ##############################################END TABLE "miscellaneous_income" OBJECTS######################################################






-- ################################################TABLE "breakdown_bank_deposit" OBJECTS######################################################
-- verifies if the breakdown_bank_deposit table exists
IF OBJECT_ID('ums.breakdown_bank_deposit', 'U') IS NOT NULL
	DROP TABLE ums.breakdown_bank_deposit
GO

CREATE TABLE ums.breakdown_bank_deposit 			
(
	breakdown_id bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION
		CONSTRAINT Breakdown_Bank_Deposit_Breakdown_ID_PK PRIMARY KEY (breakdown_id),
	date_start datetime NOT NULL
		CONSTRAINT Breakdown_Bank_Deposit_Date_Start_CK CHECK (CONVERT(varchar, date_start, 109) LIKE '%12:00:00:000AM'),
	date_end datetime NOT NULL
		CONSTRAINT Breakdown_Bank_Deposit_Date_End_CK CHECK (CONVERT(varchar, date_end, 109) LIKE '%11:59:59:000PM'),
	amount decimal (12, 2) NOT NULL,
	sysid_account varchar (50) NOT NULL
		CONSTRAINT Breakdown_Bank_Deposit_SysID_Account_FK FOREIGN KEY REFERENCES ums.chart_of_accounts(sysid_account) ON UPDATE NO ACTION,

	created_on datetime NOT NULL DEFAULT (GETDATE()),
	created_by varchar (50) NOT NULL
		CONSTRAINT Breakdown_Bank_Deposit_Created_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,
	edited_on datetime NULL,
	edited_by varchar (50) NULL	
		CONSTRAINT Breakdown_Bank_Deposit_Edited_By_FK FOREIGN KEY REFERENCES ums.system_user_info(system_user_id) ON UPDATE NO ACTION,

	unique_id uniqueidentifier ROWGUIDCOL NOT NULL DEFAULT NEWSEQUENTIALID()
		CONSTRAINT Breakdown_Bank_Deposit_Unique_ID_UQ UNIQUE (unique_id)
	
) ON [PRIMARY]
GO
--------------------------------------------------------

-- create an index of the breakdown_bank_deposit table 
CREATE INDEX Breakdown_Bank_Deposit_Breakdown_ID_Index
	ON ums.breakdown_bank_deposit (breakdown_id DESC)
GO
------------------------------------------------------------------

--verifies that the trigger "Breakdown_Bank_Deposit_Trigger_Insert" already exist
IF OBJECT_ID ('ums.Breakdown_Bank_Deposit_Trigger_Insert','TR') IS NOT NULL
   DROP TRIGGER ums.Breakdown_Bank_Deposit_Trigger_Insert
GO

CREATE TRIGGER ums.Breakdown_Bank_Deposit_Trigger_Insert
	ON  ums.breakdown_bank_deposit
	FOR INSERT
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @breakdown_id bigint
	DECLARE @date_start datetime
	DECLARE @date_end datetime
	DECLARE @amount decimal (12, 2)
	DECLARE @sysid_account varchar (50)

	DECLARE @created_by varchar (50)
	
	SELECT 
		@breakdown_id = i.breakdown_id,
		@date_start = i.date_start,
		@date_end = i.date_end,
		@amount = i.amount,
		@sysid_account = i.sysid_account,

		@created_by = i.created_by
	FROM INSERTED AS i

	SET @transaction_done = 'CREATED a new breakdown of bank deposit ' + 
							'[Breakdown ID: ' + ISNULL(CONVERT(varchar, @breakdown_id), '') +
							'][Date Start: ' + ISNULL(CONVERT(varchar, @date_start, 101), '') +
							'][Date End: ' + ISNULL(CONVERT(varchar, @date_end, 101), '') +
							'][Amount: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') +
							'][Account Entry: ' + ISNULL((SELECT
																coa.account_code + ' - ' + coa.account_name + ' (' + acg.category_description + ')'
															FROM
																ums.chart_of_accounts AS coa
															INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
															WHERE
																(coa.sysid_account = @sysid_account)), '') +
							']'

	IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
	BEGIN
		SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @created_by
	END
			
	EXECUTE ums.InsertTransactionLog @created_by, @network_information, @transaction_done	

GO
-----------------------------------------------------------------

--verifies that the trigger "Breakdown_Bank_Deposit_Trigger_Instead_Update" already exist
IF OBJECT_ID ('ums.Breakdown_Bank_Deposit_Trigger_Instead_Update','TR') IS NOT NULL
   DROP TRIGGER ums.Breakdown_Bank_Deposit_Trigger_Instead_Update
GO

CREATE TRIGGER ums.Breakdown_Bank_Deposit_Trigger_Instead_Update
	ON  ums.breakdown_bank_deposit
	INSTEAD OF UPDATE
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @breakdown_id bigint
	DECLARE @date_start datetime
	DECLARE @date_end datetime
	DECLARE @amount decimal (12, 2)
	DECLARE @sysid_account varchar (50)

	DECLARE @edited_by varchar (50)
	
	DECLARE @amount_b decimal (12, 2)
	DECLARE @sysid_account_b varchar (50)

	DECLARE @has_update bit

	DECLARE breakdown_bank_deposit_update_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
		FOR SELECT i.breakdown_id, i.date_start, i.date_end, i.amount, i.sysid_account, i.edited_by
			FROM INSERTED AS i

	OPEN breakdown_bank_deposit_update_cursor

	FETCH NEXT FROM breakdown_bank_deposit_update_cursor
		INTO @breakdown_id, @date_start, @date_end, @amount, @sysid_account, @edited_by

	WHILE @@FETCH_STATUS = 0
	BEGIN

		SELECT
			@amount_b = bbd.amount,
			@sysid_account_b = bbd.sysid_account
		FROM
			ums.breakdown_bank_deposit AS bbd
		WHERE
			bbd.breakdown_id = @breakdown_id

		SET @transaction_done = ''
		SET @has_update = 0

		IF NOT ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') = ISNULL(CONVERT(varchar, CONVERT(money, @amount_b), 1), '0.00')
		BEGIN
			SET @transaction_done = @transaction_done + '[Amount Before: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount_b), 1), '0.00') +  ']' +
														'[Amount After: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') +  ']'
			SET @has_update = 1
		END	
		ELSE
		BEGIN
			SET @transaction_done = @transaction_done + '[Amount: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') +  ']'
		END

		IF NOT ISNULL(@sysid_account COLLATE SQL_Latin1_General_CP1_CS_AS, '') = ISNULL(@sysid_account_b COLLATE SQL_Latin1_General_CP1_CS_AS, '')
		BEGIN
			SET @transaction_done = @transaction_done + '[Account Entry Before: ' + ISNULL((SELECT
																								coa.account_code + ' - ' + coa.account_name + ' (' + acg.category_description + ')'
																							FROM
																								ums.chart_of_accounts AS coa
																							INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
																							WHERE
																								(coa.sysid_account = @sysid_account_b)), '') +  ']' +
														'[Account Entry After: ' + ISNULL((SELECT
																								coa.account_code + ' - ' + coa.account_name + ' (' + acg.category_description + ')'
																							FROM
																								ums.chart_of_accounts AS coa
																							INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
																							WHERE
																								(coa.sysid_account = @sysid_account)), '') +  ']'
			SET @has_update = 1
		END		
		ELSE
		BEGIN
			SET @transaction_done = @transaction_done + '[Account Entry: ' + ISNULL((SELECT
																							coa.account_code + ' - ' + coa.account_name + ' (' + acg.category_description + ')'
																						FROM
																							ums.chart_of_accounts AS coa
																						INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
																						WHERE
																							(coa.sysid_account = @sysid_account)), '') +  ']'
		END

		IF @has_update = 1
		BEGIN

			UPDATE ums.breakdown_bank_deposit SET
				amount = @amount,
				sysid_account = @sysid_account,

				edited_on = GETDATE(),
				edited_by = @edited_by
			WHERE
				breakdown_id = @breakdown_id

			SET @transaction_done = 'UPDATED a breakdown of bank deposit ' + 
									'[Breakdown ID: ' + ISNULL(CONVERT(varchar, @breakdown_id), '') +
									'][Date Start: ' + ISNULL(CONVERT(varchar, @date_start, 101), '') +
									'][Date End: ' + ISNULL(CONVERT(varchar, @date_end, 101), '') +
									']' + @transaction_done

			IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
			BEGIN
				SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @edited_by
			END
					
			EXECUTE ums.InsertTransactionLog @edited_by, @network_information, @transaction_done	
		END
		ELSE IF NOT @edited_by IS NULL
		BEGIN

			--used for the delete trigger
			UPDATE ums.breakdown_bank_deposit SET
				edited_on = GETDATE(),
				edited_by = @edited_by
			WHERE
				breakdown_id = @breakdown_id

		END	

		FETCH NEXT FROM breakdown_bank_deposit_update_cursor
			INTO @breakdown_id, @date_start, @date_end, @amount, @sysid_account, @edited_by


	END

	CLOSE breakdown_bank_deposit_update_cursor
	DEALLOCATE breakdown_bank_deposit_update_cursor

GO
-------------------------------------------------------------------

--verifies that the trigger "Breakdown_Bank_Deposit_Trigger_Instead_Delete" already exist
IF OBJECT_ID ('ums.Breakdown_Bank_Deposit_Trigger_Instead_Delete','TR') IS NOT NULL
   DROP TRIGGER ums.Breakdown_Bank_Deposit_Trigger_Instead_Delete
GO

CREATE TRIGGER ums.Breakdown_Bank_Deposit_Trigger_Instead_Delete
	ON  ums.breakdown_bank_deposit
	FOR DELETE 
	NOT FOR REPLICATION
AS 

	DECLARE @network_information varchar (MAX)
	DECLARE @transaction_done varchar(MAX)

	DECLARE @breakdown_id bigint
	DECLARE @date_start datetime
	DECLARE @date_end datetime
	DECLARE @amount decimal (12, 2)
	DECLARE @sysid_account varchar (50)
	
	DECLARE @deleted_by varchar (50)

	DECLARE breakdown_bank_deposit_delete_cursor CURSOR LOCAL FORWARD_ONLY STATIC READ_ONLY 
		FOR SELECT d.breakdown_id, d.date_start, d.date_end, d.amount, d.sysid_account, d.edited_by
			FROM 
				DELETED AS d

	OPEN breakdown_bank_deposit_delete_cursor

	FETCH NEXT FROM breakdown_bank_deposit_delete_cursor
		INTO @breakdown_id, @date_start, @date_end, @amount, @sysid_account, @deleted_by

	WHILE @@FETCH_STATUS = 0
	BEGIN

		SET @transaction_done = 'DELETED a breakdown of bank deposit ' + 
								'[Breakdown ID: ' + ISNULL(CONVERT(varchar, @breakdown_id), '') +
								'][Date Start: ' + ISNULL(CONVERT(varchar, @date_start, 101), '') +
								'][Date End: ' + ISNULL(CONVERT(varchar, @date_end, 101), '') +
								'][Amount: ' + ISNULL(CONVERT(varchar, CONVERT(money, @amount), 1), '0.00') +
								'][Account Entry: ' + ISNULL((SELECT
																	coa.account_code + ' - ' + coa.account_name + ' (' + acg.category_description + ')'
																FROM
																	ums.chart_of_accounts AS coa
																INNER JOIN ums.accounting_category AS acg ON acg.accounting_category_id = coa.accounting_category_id
																WHERE
																	(coa.sysid_account = @sysid_account)), '') +
								']'

		IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE NAME = '##ums_network_information_table')
		BEGIN
			SELECT @network_information = network_information FROM ##ums_network_information_table WHERE system_user_id = @deleted_by
		END
				
		EXECUTE ums.InsertTransactionLog @deleted_by, @network_information, @transaction_done	

		FETCH NEXT FROM breakdown_bank_deposit_delete_cursor
			INTO @breakdown_id, @date_start, @date_end, @amount, @sysid_account, @deleted_by


	END

	CLOSE breakdown_bank_deposit_delete_cursor
	DEALLOCATE breakdown_bank_deposit_delete_cursor	

GO
-----------------------------------------------------------------

-- verifies if the procedure "InsertBreakdownBankDeposit" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'InsertBreakdownBankDeposit')
   DROP PROCEDURE ums.InsertBreakdownBankDeposit
GO

CREATE PROCEDURE ums.InsertBreakdownBankDeposit

	@date_start datetime,
	@date_end datetime,
	@amount decimal (12, 2) = 0.00,
	@sysid_account varchar (50) = '',

	@network_information varchar (MAX) = '',
	@created_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@created_by) = 1) OR (ums.IsCashierSystemUserInfo(@created_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@created_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, GETDATE()) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @created_by, @network_information

		
		INSERT INTO ums.breakdown_bank_deposit
		(
			date_start,
			date_end,
			amount,
			sysid_account,

			created_by
		)
		VALUES
		(
			@date_start,
			@date_end,
			@amount,
			@sysid_account,

			@created_by
		)		
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Create a new breakdown of bank deposit', 'Breakdown of Bank Deposit'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.InsertBreakdownBankDeposit TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "UpdateBreakdownBankDeposit" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'UpdateBreakdownBankDeposit')
   DROP PROCEDURE ums.UpdateBreakdownBankDeposit
GO

CREATE PROCEDURE ums.UpdateBreakdownBankDeposit

	@breakdown_id bigint = 0,
	@date_start datetime,
	@date_end datetime,
	@amount decimal (12, 2) = 0.00,
	@sysid_account varchar (50) = '',

	@network_information varchar (MAX) = '',
	@edited_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@edited_by) = 1) OR (ums.IsCashierSystemUserInfo(@edited_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@edited_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, (SELECT
															created_on
														FROM
															ums.breakdown_bank_deposit
														WHERE
															(breakdown_id = @breakdown_id))) = 0)
	BEGIN

		EXECUTE ums.CreateTemporaryTable @edited_by, @network_information

		UPDATE ums.breakdown_bank_deposit SET
			amount = @amount,
			sysid_account = @sysid_account,

			edited_by = @edited_by
		WHERE
			breakdown_id = @breakdown_id
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Update a breakdown of bank deposit', 'Breakdown of Bank Deposit'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.UpdateBreakdownBankDeposit TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "DeleteBreakdownBankDeposit" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'DeleteBreakdownBankDeposit')
   DROP PROCEDURE ums.DeleteBreakdownBankDeposit
GO

CREATE PROCEDURE ums.DeleteBreakdownBankDeposit

	@breakdown_id bigint = 0,

	@network_information varchar (MAX) = '',
	@deleted_by varchar (50) = ''	
		
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@deleted_by) = 1) OR (ums.IsCashierSystemUserInfo(@deleted_by) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@deleted_by) = 1)) AND
		(ums.IsRecordLockByReflectedCreatedDate(NULL, (SELECT
															created_on
														FROM
															ums.breakdown_bank_deposit
														WHERE
															(breakdown_id = @breakdown_id))) = 0)
	BEGIN

		IF EXISTS (SELECT breakdown_id FROM ums.breakdown_bank_deposit WHERE breakdown_id = @breakdown_id)
		BEGIN

			EXECUTE ums.CreateTemporaryTable @deleted_by, @network_information

			UPDATE ums.breakdown_bank_deposit SET
				edited_by = @deleted_by
			WHERE
				breakdown_id = @breakdown_id

			DELETE FROM ums.breakdown_bank_deposit WHERE breakdown_id = @breakdown_id

		END
		
	END
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Delete a breakdown of bank deposit', 'Breakdown of Bank Deposit'
	END
	
GO
---------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.DeleteBreakdownBankDeposit TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectByDateStartEndCashReceiptsDetailedBreakdownBankDeposit" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectByDateStartEndCashReceiptsDetailedBreakdownBankDeposit')
   DROP PROCEDURE ums.SelectByDateStartEndCashReceiptsDetailedBreakdownBankDeposit
GO

CREATE PROCEDURE ums.SelectByDateStartEndCashReceiptsDetailedBreakdownBankDeposit
	
	@date_start datetime,
	@date_end datetime,
	@is_consolidated bit = 0,

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN
	
		--NOTE: should not use INSERT... SELECT because this will called in another function

		WITH cte_breakdown_bank_deposit(breakdown_id, date_start, date_end, amount, sysid_account) AS
		(
			SELECT	
				bbd.breakdown_id AS breakdown_id,
				bbd.date_start AS date_start,
				bbd.date_end AS date_end,
				bbd.amount AS amount,
				bbd.sysid_account AS sysid_account
			FROM
				ums.breakdown_bank_deposit AS bbd
			WHERE
				((bbd.date_start BETWEEN @date_start AND @date_end) AND
				(bbd.date_end BETWEEN @date_start AND @date_end)) AND
				(((@is_consolidated = 0) AND (bbd.created_by = @system_user_id)) OR
				(@is_consolidated = 1))
		)

		SELECT
			coa.sysid_account AS sysid_account,
			coa.account_code AS account_code,
			coa.account_name AS account_name,	
			summary_coa.sysid_account AS sysid_account_summary,
			summary_coa.account_code AS account_code_summary,
			summary_coa.account_name AS account_name_summary,
			bbp.breakdown_id AS breakdown_id,
			bbp.date_start AS date_start,
			bbp.date_end AS date_end,
			bbp.amount AS amount
		FROM
			ums.chart_of_accounts AS coa
		LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
		INNER JOIN cte_breakdown_bank_deposit AS bbp ON bbp.sysid_account = coa.sysid_account
		ORDER BY
			account_code_summary ASC, account_code ASC

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a breakdown of bank deposit', 'Breakdown of Bank Deposit'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectByDateStartEndCashReceiptsDetailedBreakdownBankDeposit TO db_umsusers
GO
-------------------------------------------------------------

-- verifies if the procedure "SelectByDateStartEndCashReceiptsSummarizedBreakdownBankDeposit" exist
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_SCHEMA = N'ums' AND SPECIFIC_NAME = N'SelectByDateStartEndCashReceiptsSummarizedBreakdownBankDeposit')
   DROP PROCEDURE ums.SelectByDateStartEndCashReceiptsSummarizedBreakdownBankDeposit
GO

CREATE PROCEDURE ums.SelectByDateStartEndCashReceiptsSummarizedBreakdownBankDeposit
	
	@date_start datetime,
	@date_end datetime,
	@is_consolidated bit = 0,

	@system_user_id varchar(50) = ''
	
AS

	IF ((ums.IsSystemAdminSystemUserInfo(@system_user_id) = 1) OR 
		(ums.IsCashierSystemUserInfo(@system_user_id) = 1) OR
		(ums.IsVpOfFinanceSystemUserInfo(@system_user_id) = 1))
	BEGIN

		DECLARE @breakdown_bank_deposit_detailed TABLE (table_id bigint IDENTITY(1, 1) NOT NULL PRIMARY KEY,
												sysid_account varchar (50) NOT NULL,
												account_code varchar (50) NOT NULL,
												account_name varchar (150) NOT NULL,
												sysid_account_summary varchar (50) NULL,
												account_code_summary varchar (50) NULL,
												account_name_summary varchar (150) NULL,
												breakdown_id bigint NOT NULL,
												date_start datetime NOT NULL,
												date_end datetime NOT NULL,
												amount decimal (12, 2) NOT NULL)


		INSERT INTO @breakdown_bank_deposit_detailed (sysid_account, account_code, account_name, sysid_account_summary, account_code_summary,
				account_name_summary, breakdown_id, date_start, date_end, amount)
		EXECUTE 
				ums.SelectByDateStartEndCashReceiptsDetailedBreakdownBankDeposit @date_start, @date_end, @is_consolidated, @system_user_id

		SELECT
			summary_coa.account_code AS account_code_summary,						
			summary_coa.account_name AS account_name_summary,
			coa.account_code AS account_code_subsidiary,
			coa.account_name AS account_name_subsidiary,
			summary_bbd.amount AS total_amount
		FROM
			ums.chart_of_accounts AS coa
		LEFT JOIN ums.chart_of_accounts AS summary_coa ON summary_coa.sysid_account = coa.summary_account
		INNER JOIN
		(
			SELECT
				sum_bbd.sysid_account AS sysid_account,
				SUM(sum_bbd.amount) AS amount
			FROM
				@breakdown_bank_deposit_detailed AS sum_bbd
			GROUP BY
				sum_bbd.sysid_account
		) AS summary_bbd ON summary_bbd.sysid_account = coa.sysid_account
		ORDER BY
			account_code_summary ASC

	END	
	ELSE
	BEGIN
		EXECUTE ums.ShowErrorMsg 'Query a breakdown of bank deposit', 'Breakdown of Bank Deposit'
	END
	
GO
------------------------------------------------------------

-- grant permission on the stored procedure
GRANT EXECUTE ON ums.SelectByDateStartEndCashReceiptsSummarizedBreakdownBankDeposit TO db_umsusers
GO
-------------------------------------------------------------

-- ##############################################END TABLE "breakdown_bank_deposit" OBJECTS######################################################












-- ######################################RESTORE DEPENDENT TABLE CONSTRAINTS#############################################################

--verifies if the Student_Load_SysID_EnrolmentLevel_FK constraint exists
IF OBJECT_ID('ums.student_load', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.student_load WITH NOCHECK
	ADD CONSTRAINT Student_Load_SysID_EnrolmentLevel_FK FOREIGN KEY (sysid_enrolmentlevel) REFERENCES ums.student_enrolment_level(sysid_enrolmentlevel) ON UPDATE NO ACTION
END
GO
-----------------------------------------------------

--verifies if the Enrolment_Course_Major_SysID_EnrolmentLevel_FK constraint exists
IF OBJECT_ID('ums.enrolment_course_major', 'U') IS NOT NULL
BEGIN
	ALTER TABLE ums.enrolment_course_major WITH NOCHECK
	ADD CONSTRAINT Enrolment_Course_Major_SysID_EnrolmentLevel_FK FOREIGN KEY (sysid_enrolmentlevel) REFERENCES ums.student_enrolment_level(sysid_enrolmentlevel) ON UPDATE NO ACTION
END
GO
-----------------------------------------------------	

-- ######################################END RESTORE DEPENDENT TABLE CONSTRAINTS#############################################################



-- ############################################INITIAL DATABASE INFORMATION#############################################################

--ums.school_fee_category (IS REFERENCED BY THE STRUCT SchoolFeeCategoryId AND ENUM SchoolFeeCategoryNo)
INSERT INTO ums.school_fee_category(fee_category_id, category_description, category_no) VALUES ('FCID01', 'Tuition Fee', 1)
INSERT INTO ums.school_fee_category(fee_category_id, category_description, category_no) VALUES ('FCID02', 'Miscellaneous Fees', 2)
INSERT INTO ums.school_fee_category(fee_category_id, category_description, category_no) VALUES ('FCID03', 'Other Fees', 3)
INSERT INTO ums.school_fee_category(fee_category_id, category_description, category_no) VALUES ('FCID04', 'Laboratory Fees', 4)
GO

--ums.accounting_category
INSERT INTO ums.accounting_category(accounting_category_id, category_description, category_no)
	SELECT 'ACID01', 'Accounting Element', 1
	UNION
	SELECT 'ACID02', 'Classification', 2
	UNION
	SELECT 'ACID03', 'Controlling Account', 3
	UNION
	SELECT 'ACID04', 'Subsidiary Account', 4
	GO

--ums.school_fee_particular
--TUITION FEE CATEGORY (@sysid_feeparticular, @fee_category_id, @particular_description, @is_optional, @is_office_access, @is_entry_level_included, @is_graduation_fee)
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR001', 'FCID01', 'Per Year/Unit', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

--MISCELLANEOUS
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR002', 'FCID02', 'Registration', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR003', 'FCID02', 'Medical and Dental', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR004', 'FCID02', 'Library', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR005', 'FCID02', 'Guidance and Counselling', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR006', 'FCID02', 'School Publication', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR007', 'FCID02', 'Development', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR008', 'FCID02', 'Test Papers', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR009', 'FCID02', 'School Activities', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR010', 'FCID02', 'Cultural', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR011', 'FCID02', 'Athletic', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR012', 'FCID02', 'Audio-Visual', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR013', 'FCID02', 'Science Lab (GS/HS)', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR014', 'FCID02', 'Computer Lab (GS/HS)', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR015', 'FCID02', 'Speech Lab (GS/HS)', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR016', 'FCID02', 'School Journal', 1, 0, 1, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

--OTHER FEES
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR017', 'FCID03', 'ID', 1, 0, 1, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR018', 'FCID03', 'Insurance', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR019', 'FCID03', 'Recollection', 1, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR020', 'FCID03', 'Membership', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR021', 'FCID03', 'P.E. T-Shirts', 1, 0, 1, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR022', 'FCID03', 'P.E. Shorts', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR023', 'FCID03', 'P.E. Jogging Pants', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR024', 'FCID03', 'Intrams T-shirt', 1, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR025', 'FCID03', 'Handbook', 1, 0, 1, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR026', 'FCID03', 'Magazine', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR027', 'FCID03', 'First Communion', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR028', 'FCID03', 'Student Activity', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR029', 'FCID03', 'Graduation', 0, 0, 0, 1, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR030', 'FCID03', 'Yearbook', 0, 0, 0, 1, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR031', 'FCID03', 'Pictures', 0, 0, 0, 1, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR032', 'FCID03', 'Alumni', 0, 0, 0, 1, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR033', 'FCID03', 'Diskettes', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR034', 'FCID03', 'HSSCC', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR035', 'FCID03', 'Cufflinks/Clip, Tie', 1, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR036', 'FCID03', 'SAO T-Shirts', 1, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

--LABORATORY FEES
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR037', 'FCID04', 'Science Lab', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR038', 'FCID04', 'Typing Lab (3 Units)', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR039', 'FCID04', 'Typing Lab (5 Units)', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR040', 'FCID04', 'Computer Lab (3 Units)', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR041', 'FCID04', 'Computer Lab (1 Unit)', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR042', 'FCID04', 'Nursing Lab', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR043', 'FCID04', 'Speech Lab', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR044', 'FCID04', 'Internet', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR045', 'FCID04', 'Swimming with Swimwear', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR046', 'FCID04', 'Swimming w/o Swimwear', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

----OTHER FEES
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR047', 'FCID03', 'J/P Shorts', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR048', 'FCID03', 'Practice Test', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR049', 'FCID03', 'Toga', 0, 0, 0, 1, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

--LABORATORY FEES
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR050', 'FCID04', 'Typing Lab', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR051', 'FCID04', 'Computer Lab', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

----OTHER FEES
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR052', 'FCID03', 'P.E. Boys', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR053', 'FCID03', 'P.E. Girls', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR054', 'FCID03', 'Dormitory', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR055', 'FCID03', 'Withdrawal', 0, 0, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR056', 'FCID03', 'P.E. Jogging Pants/Shorts', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

----OTHER FEES
EXECUTE ums.InsertSchoolFeeParticular 'SYSFPR057', 'FCID03', 'Swimwear', 1, 1, 0, 0, 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'

GO

--ums.school_fee_information
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF001', 'SY20002001', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF002', 'SY20002001SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF003', 'SY20012002', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF004', 'SY20012002SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF005', 'SY20022003', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF006', 'SY20022003SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF007', 'SY20032004', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF008', 'SY20032004SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF009', 'SY20042005', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF010', 'SY20042005SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF011', 'SY20052006', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF012', 'SY20052006SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF013', 'SY20062007', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF014', 'SY20062007SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF015', 'SY20072008', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF016', 'SY20072008SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF017', 'SY20082009', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
EXECUTE ums.InsertSchoolFeeInformation 'SYSSCF018', 'SY20082009SUMMER', 'Judyll''s Network', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
GO

--ums.school_fee_level
--SCHOOL YEAR 2008 - 2009
--NURSERY (YRLV01)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000001', 'SYSSCF017', 'YRLV01', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 1 (YRLV02)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000002', 'SYSSCF017', 'YRLV02', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 2 (YRLV03)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000003', 'SYSSCF017', 'YRLV03', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 1 (YRLV04)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000004', 'SYSSCF017', 'YRLV04', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 2 (YRLV05)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000005', 'SYSSCF017', 'YRLV05', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 3 (YRLV06)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000006', 'SYSSCF017', 'YRLV06', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 4 (YRLV07)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000007', 'SYSSCF017', 'YRLV07', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 5 (YRLV08)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000008', 'SYSSCF017', 'YRLV08', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 6 (YRLV09)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000009', 'SYSSCF017', 'YRLV09', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV10)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000010', 'SYSSCF017', 'YRLV10', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV11)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000011', 'SYSSCF017', 'YRLV11', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV12)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000012', 'SYSSCF017', 'YRLV12', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV13)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000013', 'SYSSCF017', 'YRLV13', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000014', 'SYSSCF017', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000015', 'SYSSCF017', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000016', 'SYSSCF017', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000017', 'SYSSCF017', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000018', 'SYSSCF017', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000019', 'SYSSCF017', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2003 - 2004
--NURSERY (YRLV01)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000020', 'SYSSCF007', 'YRLV01', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 1 (YRLV02)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000021', 'SYSSCF007', 'YRLV02', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 2 (YRLV03)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000022', 'SYSSCF007', 'YRLV03', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 1 (YRLV04)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000023', 'SYSSCF007', 'YRLV04', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 2 (YRLV05)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000024', 'SYSSCF007', 'YRLV05', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 3 (YRLV06)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000025', 'SYSSCF007', 'YRLV06', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 4 (YRLV07)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000026', 'SYSSCF007', 'YRLV07', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 5 (YRLV08)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000027', 'SYSSCF007', 'YRLV08', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 6 (YRLV09)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000028', 'SYSSCF007', 'YRLV09', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV10)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000029', 'SYSSCF007', 'YRLV10', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV11)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000030', 'SYSSCF007', 'YRLV11', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV12)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000031', 'SYSSCF007', 'YRLV12', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV13)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000032', 'SYSSCF007', 'YRLV13', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000033', 'SYSSCF007', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000034', 'SYSSCF007', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000035', 'SYSSCF007', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000036', 'SYSSCF007', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000037', 'SYSSCF007', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000038', 'SYSSCF007', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2003 - 2004 SUMMER
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000039', 'SYSSCF008', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000040', 'SYSSCF008', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000041', 'SYSSCF008', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000042', 'SYSSCF008', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000043', 'SYSSCF008', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000044', 'SYSSCF008', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2004 - 2005
--NURSERY (YRLV01)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000045', 'SYSSCF009', 'YRLV01', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 1 (YRLV02)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000046', 'SYSSCF009', 'YRLV02', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 2 (YRLV03)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000047', 'SYSSCF009', 'YRLV03', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 1 (YRLV04)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000048', 'SYSSCF009', 'YRLV04', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 2 (YRLV05)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000049', 'SYSSCF009', 'YRLV05', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 3 (YRLV06)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000050', 'SYSSCF009', 'YRLV06', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 4 (YRLV07)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000051', 'SYSSCF009', 'YRLV07', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 5 (YRLV08)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000052', 'SYSSCF009', 'YRLV08', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 6 (YRLV09)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000053', 'SYSSCF009', 'YRLV09', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV10)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000054', 'SYSSCF009', 'YRLV10', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV11)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000055', 'SYSSCF009', 'YRLV11', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV12)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000056', 'SYSSCF009', 'YRLV12', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV13)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000057', 'SYSSCF009', 'YRLV13', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000058', 'SYSSCF009', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000059', 'SYSSCF009', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000060', 'SYSSCF009', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000061', 'SYSSCF009', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000062', 'SYSSCF009', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000063', 'SYSSCF009', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2004 - 2005 SUMMER
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000064', 'SYSSCF010', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000065', 'SYSSCF010', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000066', 'SYSSCF010', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000067', 'SYSSCF010', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000068', 'SYSSCF010', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000069', 'SYSSCF010', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2005 - 2006
--NURSERY (YRLV01)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000070', 'SYSSCF011', 'YRLV01', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 1 (YRLV02)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000071', 'SYSSCF011', 'YRLV02', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 2 (YRLV03)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000072', 'SYSSCF011', 'YRLV03', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 1 (YRLV04)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000073', 'SYSSCF011', 'YRLV04', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 2 (YRLV05)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000074', 'SYSSCF011', 'YRLV05', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 3 (YRLV06)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000075', 'SYSSCF011', 'YRLV06', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 4 (YRLV07)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000076', 'SYSSCF011', 'YRLV07', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 5 (YRLV08)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000077', 'SYSSCF011', 'YRLV08', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 6 (YRLV09)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000078', 'SYSSCF011', 'YRLV09', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV10)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000079', 'SYSSCF011', 'YRLV10', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV11)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000080', 'SYSSCF011', 'YRLV11', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV12)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000081', 'SYSSCF011', 'YRLV12', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV13)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000082', 'SYSSCF011', 'YRLV13', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000083', 'SYSSCF011', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000084', 'SYSSCF011', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000085', 'SYSSCF011', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000086', 'SYSSCF011', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000087', 'SYSSCF011', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000088', 'SYSSCF011', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2005 - 2006 SUMMER
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000089', 'SYSSCF012', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000090', 'SYSSCF012', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000091', 'SYSSCF012', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000092', 'SYSSCF012', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000093', 'SYSSCF012', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000094', 'SYSSCF012', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2006 - 2007
--NURSERY (YRLV01)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000095', 'SYSSCF013', 'YRLV01', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 1 (YRLV02)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000096', 'SYSSCF013', 'YRLV02', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 2 (YRLV03)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000097', 'SYSSCF013', 'YRLV03', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 1 (YRLV04)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000098', 'SYSSCF013', 'YRLV04', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 2 (YRLV05)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000099', 'SYSSCF013', 'YRLV05', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 3 (YRLV06)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000100', 'SYSSCF013', 'YRLV06', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 4 (YRLV07)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000101', 'SYSSCF013', 'YRLV07', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 5 (YRLV08)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000102', 'SYSSCF013', 'YRLV08', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 6 (YRLV09)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000103', 'SYSSCF013', 'YRLV09', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV10)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000104', 'SYSSCF013', 'YRLV10', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV11)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000105', 'SYSSCF013', 'YRLV11', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV12)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000106', 'SYSSCF013', 'YRLV12', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV13)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000107', 'SYSSCF013', 'YRLV13', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000108', 'SYSSCF013', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000109', 'SYSSCF013', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000110', 'SYSSCF013', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000111', 'SYSSCF013', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000112', 'SYSSCF013', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000113', 'SYSSCF013', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2006 - 2007 (SUMMER)
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000114', 'SYSSCF014', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000115', 'SYSSCF014', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000116', 'SYSSCF014', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000117', 'SYSSCF014', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000118', 'SYSSCF014', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000119', 'SYSSCF014', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2007 - 2008
--NURSERY (YRLV01)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000120', 'SYSSCF015', 'YRLV01', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 1 (YRLV02)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000121', 'SYSSCF015', 'YRLV02', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--KINDER 2 (YRLV03)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000122', 'SYSSCF015', 'YRLV03', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 1 (YRLV04)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000123', 'SYSSCF015', 'YRLV04', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 2 (YRLV05)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000124', 'SYSSCF015', 'YRLV05', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 3 (YRLV06)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000125', 'SYSSCF015', 'YRLV06', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 4 (YRLV07)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000126', 'SYSSCF015', 'YRLV07', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 5 (YRLV08)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000127', 'SYSSCF015', 'YRLV08', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--GRADE 6 (YRLV09)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000128', 'SYSSCF015', 'YRLV09', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV10)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000129', 'SYSSCF015', 'YRLV10', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV11)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000130', 'SYSSCF015', 'YRLV11', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV12)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000131', 'SYSSCF015', 'YRLV12', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV13)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000132', 'SYSSCF015', 'YRLV13', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000133', 'SYSSCF015', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000134', 'SYSSCF015', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000135', 'SYSSCF015', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000136', 'SYSSCF015', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000137', 'SYSSCF015', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000138', 'SYSSCF015', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2007 - 2008 (SUMMER)
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000139', 'SYSSCF016', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000140', 'SYSSCF016', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000141', 'SYSSCF016', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000142', 'SYSSCF016', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000143', 'SYSSCF016', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000144', 'SYSSCF016', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_level
--SCHOOL YEAR 2008 - 2009 (SUMMER)
--1ST YEAR (YRLV14)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000145', 'SYSSCF018', 'YRLV14', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--2ND YEAR (YRLV15)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000146', 'SYSSCF018', 'YRLV15', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--3RD YEAR (YRLV16)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000147', 'SYSSCF018', 'YRLV16', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--4TH YEAR (YRLV17)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000148', 'SYSSCF018', 'YRLV17', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Graduate School (YRLV19)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000149', 'SYSSCF018', 'YRLV19', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
--Doctorate (YRLV20)
INSERT INTO ums.school_fee_level (sysid_feelevel, sysid_schoolfee, year_level_id, created_by) 
	VALUES ('SYSFLV000150', 'SYSSCF018', 'YRLV20', '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO


--ums.school_fee_details ========================================================================================================
--SY 20082009
--GRADE SCHOOL (CG01)
--NURSERY (SYSFLV000001)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000001', 'SYSFLV000001', 'SYSFPR001', 0, 16472.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000002', 'SYSFLV000001', 'SYSFPR002', 0, 443.96, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000003', 'SYSFLV000001', 'SYSFPR003', 0, 232.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000004', 'SYSFLV000001', 'SYSFPR004', 0, 585.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000005', 'SYSFLV000001', 'SYSFPR005', 0, 133.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000006', 'SYSFLV000001', 'SYSFPR006', 0, 221.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000007', 'SYSFLV000001', 'SYSFPR007', 0, 554.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000008', 'SYSFLV000001', 'SYSFPR008', 0, 341.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000009', 'SYSFLV000001', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000010', 'SYSFLV000001', 'SYSFPR010', 0, 69.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000011', 'SYSFLV000001', 'SYSFPR011', 0, 133.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000012', 'SYSFLV000001', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000013', 'SYSFLV000001', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000014', 'SYSFLV000001', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000015', 'SYSFLV000001', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000016', 'SYSFLV000001', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000017', 'SYSFLV000001', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--KINDER 1 (SYSFLV000002)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000018', 'SYSFLV000002', 'SYSFPR001', 0, 16472.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000019', 'SYSFLV000002', 'SYSFPR002', 0, 443.96, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000020', 'SYSFLV000002', 'SYSFPR003', 0, 232.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000021', 'SYSFLV000002', 'SYSFPR004', 0, 585.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000022', 'SYSFLV000002', 'SYSFPR005', 0, 133.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000023', 'SYSFLV000002', 'SYSFPR006', 0, 221.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000024', 'SYSFLV000002', 'SYSFPR007', 0, 554.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000025', 'SYSFLV000002', 'SYSFPR008', 0, 341.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000026', 'SYSFLV000002', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000027', 'SYSFLV000002', 'SYSFPR010', 0, 69.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000028', 'SYSFLV000002', 'SYSFPR011', 0, 133.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000029', 'SYSFLV000002', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000030', 'SYSFLV000002', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000031', 'SYSFLV000002', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000032', 'SYSFLV000002', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000033', 'SYSFLV000002', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000034', 'SYSFLV000002', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--KINDER 2 (SYSFLV000003)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000035', 'SYSFLV000003', 'SYSFPR001', 0, 16472.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000036', 'SYSFLV000003', 'SYSFPR002', 0, 443.96, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000037', 'SYSFLV000003', 'SYSFPR003', 0, 232.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000038', 'SYSFLV000003', 'SYSFPR004', 0, 585.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000039', 'SYSFLV000003', 'SYSFPR005', 0, 133.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000040', 'SYSFLV000003', 'SYSFPR006', 0, 221.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000041', 'SYSFLV000003', 'SYSFPR007', 0, 554.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000042', 'SYSFLV000003', 'SYSFPR008', 0, 341.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000043', 'SYSFLV000003', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000044', 'SYSFLV000003', 'SYSFPR010', 0, 69.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000045', 'SYSFLV000003', 'SYSFPR011', 0, 133.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000046', 'SYSFLV000003', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000047', 'SYSFLV000003', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000048', 'SYSFLV000003', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000049', 'SYSFLV000003', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000050', 'SYSFLV000003', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000051', 'SYSFLV000003', 'SYSFPR029', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000052', 'SYSFLV000003', 'SYSFPR030', 0, 2000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000053', 'SYSFLV000003', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--GRADE 1 (SYSFLV000004)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000054', 'SYSFLV000004', 'SYSFPR001', 0, 17364.96, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000055', 'SYSFLV000004', 'SYSFPR002', 0, 399.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000056', 'SYSFLV000004', 'SYSFPR003', 0, 232.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000057', 'SYSFLV000004', 'SYSFPR004', 0, 538.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000058', 'SYSFLV000004', 'SYSFPR005', 0, 155.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000059', 'SYSFLV000004', 'SYSFPR006', 0, 221.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000060', 'SYSFLV000004', 'SYSFPR007', 0, 443.37, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000061', 'SYSFLV000004', 'SYSFPR008', 0, 317.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000062', 'SYSFLV000004', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000063', 'SYSFLV000004', 'SYSFPR010', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000064', 'SYSFLV000004', 'SYSFPR011', 0, 133.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000065', 'SYSFLV000004', 'SYSFPR012', 0, 40.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000066', 'SYSFLV000004', 'SYSFPR013', 0, 46.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000067', 'SYSFLV000004', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000068', 'SYSFLV000004', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000069', 'SYSFLV000004', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000070', 'SYSFLV000004', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000071', 'SYSFLV000004', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000072', 'SYSFLV000004', 'SYSFPR024', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000073', 'SYSFLV000004', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000074', 'SYSFLV000004', 'SYSFPR026', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000075', 'SYSFLV000004', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--GRADE 2 (SYSFLV000005)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000076', 'SYSFLV000005', 'SYSFPR001', 0, 15786.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000077', 'SYSFLV000005', 'SYSFPR002', 0, 362.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000078', 'SYSFLV000005', 'SYSFPR003', 0, 211.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000079', 'SYSFLV000005', 'SYSFPR004', 0, 489.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000080', 'SYSFLV000005', 'SYSFPR005', 0, 141.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000081', 'SYSFLV000005', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000082', 'SYSFLV000005', 'SYSFPR007', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000083', 'SYSFLV000005', 'SYSFPR008', 0, 288.18, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000084', 'SYSFLV000005', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000085', 'SYSFLV000005', 'SYSFPR010', 0, 109.93, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000086', 'SYSFLV000005', 'SYSFPR011', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000087', 'SYSFLV000005', 'SYSFPR012', 0, 36.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000088', 'SYSFLV000005', 'SYSFPR013', 0, 42.14, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000089', 'SYSFLV000005', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000090', 'SYSFLV000005', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000091', 'SYSFLV000005', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000092', 'SYSFLV000005', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000093', 'SYSFLV000005', 'SYSFPR024', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000094', 'SYSFLV000005', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000095', 'SYSFLV000005', 'SYSFPR026', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000096', 'SYSFLV000005', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--GRADE 3 (SYSFLV000006)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000097', 'SYSFLV000006', 'SYSFPR001', 0, 14753.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000098', 'SYSFLV000006', 'SYSFPR002', 0, 339.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000099', 'SYSFLV000006', 'SYSFPR003', 0, 197.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000100', 'SYSFLV000006', 'SYSFPR004', 0, 457.67, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000101', 'SYSFLV000006', 'SYSFPR005', 0, 131.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000102', 'SYSFLV000006', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000103', 'SYSFLV000006', 'SYSFPR007', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000104', 'SYSFLV000006', 'SYSFPR008', 0, 269.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000105', 'SYSFLV000006', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000106', 'SYSFLV000006', 'SYSFPR010', 0, 102.74, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000107', 'SYSFLV000006', 'SYSFPR011', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000108', 'SYSFLV000006', 'SYSFPR012', 0, 34.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000109', 'SYSFLV000006', 'SYSFPR013', 0, 39.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000110', 'SYSFLV000006', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000111', 'SYSFLV000006', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000112', 'SYSFLV000006', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000113', 'SYSFLV000006', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000114', 'SYSFLV000006', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000115', 'SYSFLV000006', 'SYSFPR024', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000116', 'SYSFLV000006', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000117', 'SYSFLV000006', 'SYSFPR026', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000118', 'SYSFLV000006', 'SYSFPR027', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000119', 'SYSFLV000006', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--GRADE 4 (SYSFLV000007)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000120', 'SYSFLV000007', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000121', 'SYSFLV000007', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000122', 'SYSFLV000007', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000123', 'SYSFLV000007', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000124', 'SYSFLV000007', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000125', 'SYSFLV000007', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000126', 'SYSFLV000007', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000127', 'SYSFLV000007', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000128', 'SYSFLV000007', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000129', 'SYSFLV000007', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000130', 'SYSFLV000007', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000131', 'SYSFLV000007', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000132', 'SYSFLV000007', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000133', 'SYSFLV000007', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000134', 'SYSFLV000007', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000135', 'SYSFLV000007', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000136', 'SYSFLV000007', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000137', 'SYSFLV000007', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000138', 'SYSFLV000007', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000139', 'SYSFLV000007', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000140', 'SYSFLV000007', 'SYSFPR024', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000141', 'SYSFLV000007', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000142', 'SYSFLV000007', 'SYSFPR026', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000143', 'SYSFLV000007', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--GRADE 5 (SYSFLV000008)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000144', 'SYSFLV000008', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000145', 'SYSFLV000008', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000146', 'SYSFLV000008', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000147', 'SYSFLV000008', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000148', 'SYSFLV000008', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000149', 'SYSFLV000008', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000150', 'SYSFLV000008', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000151', 'SYSFLV000008', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000152', 'SYSFLV000008', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000153', 'SYSFLV000008', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000154', 'SYSFLV000008', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000155', 'SYSFLV000008', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000156', 'SYSFLV000008', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000157', 'SYSFLV000008', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000158', 'SYSFLV000008', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000159', 'SYSFLV000008', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000160', 'SYSFLV000008', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000161', 'SYSFLV000008', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000162', 'SYSFLV000008', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000163', 'SYSFLV000008', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000164', 'SYSFLV000008', 'SYSFPR024', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000165', 'SYSFLV000008', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000166', 'SYSFLV000008', 'SYSFPR026', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000167', 'SYSFLV000008', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--GRADE SCHOOL (CG01)
--GRADE 6 (SYSFLV000009)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000168', 'SYSFLV000009', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000169', 'SYSFLV000009', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000170', 'SYSFLV000009', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000171', 'SYSFLV000009', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000172', 'SYSFLV000009', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000173', 'SYSFLV000009', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000174', 'SYSFLV000009', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000175', 'SYSFLV000009', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000176', 'SYSFLV000009', 'SYSFPR009', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000177', 'SYSFLV000009', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000178', 'SYSFLV000009', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000179', 'SYSFLV000009', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000180', 'SYSFLV000009', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000181', 'SYSFLV000009', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000182', 'SYSFLV000009', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000183', 'SYSFLV000009', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000184', 'SYSFLV000009', 'SYSFPR019', 0, 1750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000185', 'SYSFLV000009', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000186', 'SYSFLV000009', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000187', 'SYSFLV000009', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000188', 'SYSFLV000009', 'SYSFPR024', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000189', 'SYSFLV000009', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000190', 'SYSFLV000009', 'SYSFPR026', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000191', 'SYSFLV000009', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000192', 'SYSFLV000009', 'SYSFPR029', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000193', 'SYSFLV000009', 'SYSFPR030', 0, 2000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000194', 'SYSFLV000009', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000195', 'SYSFLV000009', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--HIGH SCHOOL (CG02)
--1ST YEAR (SYSFLV000010)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000196', 'SYSFLV000010', 'SYSFPR001', 0, 17364.96, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000197', 'SYSFLV000010', 'SYSFPR002', 0, 399.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000198', 'SYSFLV000010', 'SYSFPR003', 0, 243.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000199', 'SYSFLV000010', 'SYSFPR011', 0, 155.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000200', 'SYSFLV000010', 'SYSFPR004', 0, 431.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000201', 'SYSFLV000010', 'SYSFPR006', 0, 221.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000202', 'SYSFLV000010', 'SYSFPR012', 0, 115.87, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000203', 'SYSFLV000010', 'SYSFPR008', 0, 365.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000204', 'SYSFLV000010', 'SYSFPR010', 0, 92.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000205', 'SYSFLV000010', 'SYSFPR005', 0, 177.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000206', 'SYSFLV000010', 'SYSFPR014', 0, 2828.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000207', 'SYSFLV000010', 'SYSFPR007', 0, 332.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000208', 'SYSFLV000010', 'SYSFPR013', 0, 310.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000209', 'SYSFLV000010', 'SYSFPR015', 0, 666.21, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000210', 'SYSFLV000010', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000211', 'SYSFLV000010', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000212', 'SYSFLV000010', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000213', 'SYSFLV000010', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000214', 'SYSFLV000010', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000215', 'SYSFLV000010', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000216', 'SYSFLV000010', 'SYSFPR023', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000217', 'SYSFLV000010', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000218', 'SYSFLV000010', 'SYSFPR026', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000219', 'SYSFLV000010', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000220', 'SYSFLV000010', 'SYSFPR034', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--HIGH SCHOOL (CG02)
--2ND YEAR (SYSFLV000011)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000221', 'SYSFLV000011', 'SYSFPR001', 0, 15786.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000222', 'SYSFLV000011', 'SYSFPR002', 0, 362.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000223', 'SYSFLV000011', 'SYSFPR003', 0, 221.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000224', 'SYSFLV000011', 'SYSFPR011', 0, 141.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000225', 'SYSFLV000011', 'SYSFPR004', 0, 391.89, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000226', 'SYSFLV000011', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000227', 'SYSFLV000011', 'SYSFPR012', 0, 105.34, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000228', 'SYSFLV000011', 'SYSFPR008', 0, 332.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000229', 'SYSFLV000011', 'SYSFPR010', 0, 84.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000230', 'SYSFLV000011', 'SYSFPR005', 0, 161.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000231', 'SYSFLV000011', 'SYSFPR014', 0, 2828.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000232', 'SYSFLV000011', 'SYSFPR007', 0, 302.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000233', 'SYSFLV000011', 'SYSFPR013', 0, 282.14, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000234', 'SYSFLV000011', 'SYSFPR015', 0, 666.21, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000235', 'SYSFLV000011', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000236', 'SYSFLV000011', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000237', 'SYSFLV000011', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000238', 'SYSFLV000011', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000239', 'SYSFLV000011', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000240', 'SYSFLV000011', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000241', 'SYSFLV000011', 'SYSFPR023', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000242', 'SYSFLV000011', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000243', 'SYSFLV000011', 'SYSFPR026', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000244', 'SYSFLV000011', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000245', 'SYSFLV000011', 'SYSFPR034', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--HIGH SCHOOL (CG02)
--3RD YEAR (SYSFLV000012)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000246', 'SYSFLV000012', 'SYSFPR001', 0, 14753.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000247', 'SYSFLV000012', 'SYSFPR002', 0, 339.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000248', 'SYSFLV000012', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000249', 'SYSFLV000012', 'SYSFPR011', 0, 131.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000250', 'SYSFLV000012', 'SYSFPR004', 0, 366.25, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000251', 'SYSFLV000012', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000252', 'SYSFLV000012', 'SYSFPR012', 0, 98.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000253', 'SYSFLV000012', 'SYSFPR008', 0, 310.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000254', 'SYSFLV000012', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000255', 'SYSFLV000012', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000256', 'SYSFLV000012', 'SYSFPR014', 0, 2828.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000257', 'SYSFLV000012', 'SYSFPR007', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000258', 'SYSFLV000012', 'SYSFPR013', 0, 263.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000259', 'SYSFLV000012', 'SYSFPR015', 0, 622.63, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000260', 'SYSFLV000012', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000261', 'SYSFLV000012', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000262', 'SYSFLV000012', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000263', 'SYSFLV000012', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000264', 'SYSFLV000012', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000265', 'SYSFLV000012', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000266', 'SYSFLV000012', 'SYSFPR023', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000267', 'SYSFLV000012', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000268', 'SYSFLV000012', 'SYSFPR026', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000269', 'SYSFLV000012', 'SYSFPR033', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000270', 'SYSFLV000012', 'SYSFPR034', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--HIGH SCHOOL (CG02)
--4TH YEAR (SYSFLV000013)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000271', 'SYSFLV000013', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000272', 'SYSFLV000013', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000273', 'SYSFLV000013', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000274', 'SYSFLV000013', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000275', 'SYSFLV000013', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000276', 'SYSFLV000013', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000277', 'SYSFLV000013', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000278', 'SYSFLV000013', 'SYSFPR008', 0, 308.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000279', 'SYSFLV000013', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000280', 'SYSFLV000013', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000281', 'SYSFLV000013', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000282', 'SYSFLV000013', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000283', 'SYSFLV000013', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000284', 'SYSFLV000013', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000285', 'SYSFLV000013', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000286', 'SYSFLV000013', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000287', 'SYSFLV000013', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000288', 'SYSFLV000013', 'SYSFPR019', 0, 1750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000289', 'SYSFLV000013', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000290', 'SYSFLV000013', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000291', 'SYSFLV000013', 'SYSFPR023', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000292', 'SYSFLV000013', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000293', 'SYSFLV000013', 'SYSFPR026', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000294', 'SYSFLV000013', 'SYSFPR033', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000295', 'SYSFLV000013', 'SYSFPR034', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000296', 'SYSFLV000013', 'SYSFPR029', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000297', 'SYSFLV000013', 'SYSFPR030', 0, 2000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000298', 'SYSFLV000013', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000299', 'SYSFLV000013', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--COLLEGE (CG03)
--1ST YEAR (SYSFLV000014)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000300', 'SYSFLV000014', 'SYSFPR001', 0, 435.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000301', 'SYSFLV000014', 'SYSFPR002', 0, 443.37, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000302', 'SYSFLV000014', 'SYSFPR003', 0, 243.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000303', 'SYSFLV000014', 'SYSFPR011', 0, 144.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000304', 'SYSFLV000014', 'SYSFPR004', 0, 642.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000305', 'SYSFLV000014', 'SYSFPR006', 0, 221.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000306', 'SYSFLV000014', 'SYSFPR012', 0, 125.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000307', 'SYSFLV000014', 'SYSFPR008', 0, 332.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000308', 'SYSFLV000014', 'SYSFPR010', 0, 92.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000309', 'SYSFLV000014', 'SYSFPR005', 0, 177.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000310', 'SYSFLV000014', 'SYSFPR007', 0, 354.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000311', 'SYSFLV000014', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000312', 'SYSFLV000014', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000313', 'SYSFLV000014', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000314', 'SYSFLV000014', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000315', 'SYSFLV000014', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000316', 'SYSFLV000014', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000317', 'SYSFLV000014', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000318', 'SYSFLV000014', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000319', 'SYSFLV000014', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000320', 'SYSFLV000014', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000321', 'SYSFLV000014', 'SYSFPR037', 0, 842.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000322', 'SYSFLV000014', 'SYSFPR038', 0, 1058.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000323', 'SYSFLV000014', 'SYSFPR039', 0, 1763.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000324', 'SYSFLV000014', 'SYSFPR040', 0, 3174.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000325', 'SYSFLV000014', 'SYSFPR041', 0, 1587.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000326', 'SYSFLV000014', 'SYSFPR042', 0, 443.37, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000327', 'SYSFLV000014', 'SYSFPR043', 0, 806.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000328', 'SYSFLV000014', 'SYSFPR044', 0, 332.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000329', 'SYSFLV000014', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000330', 'SYSFLV000014', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000015)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000331', 'SYSFLV000015', 'SYSFPR001', 0, 395.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000332', 'SYSFLV000015', 'SYSFPR002', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000333', 'SYSFLV000015', 'SYSFPR003', 0, 221.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000334', 'SYSFLV000015', 'SYSFPR011', 0, 130.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000335', 'SYSFLV000015', 'SYSFPR004', 0, 584.42, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000336', 'SYSFLV000015', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000337', 'SYSFLV000015', 'SYSFPR012', 0, 113.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000338', 'SYSFLV000015', 'SYSFPR008', 0, 302.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000339', 'SYSFLV000015', 'SYSFPR010', 0, 84.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000340', 'SYSFLV000015', 'SYSFPR005', 0, 161.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000341', 'SYSFLV000015', 'SYSFPR007', 0, 322.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000342', 'SYSFLV000015', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000343', 'SYSFLV000015', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000344', 'SYSFLV000015', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000345', 'SYSFLV000015', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000346', 'SYSFLV000015', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000347', 'SYSFLV000015', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000348', 'SYSFLV000015', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000349', 'SYSFLV000015', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000350', 'SYSFLV000015', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000351', 'SYSFLV000015', 'SYSFPR037', 0, 765.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000352', 'SYSFLV000015', 'SYSFPR038', 0, 1058.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000353', 'SYSFLV000015', 'SYSFPR039', 0, 1763.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000354', 'SYSFLV000015', 'SYSFPR040', 0, 3174.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000355', 'SYSFLV000015', 'SYSFPR041', 0, 1587.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000356', 'SYSFLV000015', 'SYSFPR042', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000357', 'SYSFLV000015', 'SYSFPR043', 0, 806.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000358', 'SYSFLV000015', 'SYSFPR044', 0, 302.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000359', 'SYSFLV000015', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000360', 'SYSFLV000015', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--COLLEGE (CG03)
--3RD YEAR (SYSFLV000016)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000361', 'SYSFLV000016', 'SYSFPR001', 0, 369.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000362', 'SYSFLV000016', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000363', 'SYSFLV000016', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000364', 'SYSFLV000016', 'SYSFPR011', 0, 122.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000365', 'SYSFLV000016', 'SYSFPR004', 0, 546.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000366', 'SYSFLV000016', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000367', 'SYSFLV000016', 'SYSFPR012', 0, 106.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000368', 'SYSFLV000016', 'SYSFPR008', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000369', 'SYSFLV000016', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000370', 'SYSFLV000016', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000371', 'SYSFLV000016', 'SYSFPR007', 0, 301.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000372', 'SYSFLV000016', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000373', 'SYSFLV000016', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000374', 'SYSFLV000016', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000375', 'SYSFLV000016', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000376', 'SYSFLV000016', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000377', 'SYSFLV000016', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000378', 'SYSFLV000016', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000379', 'SYSFLV000016', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000380', 'SYSFLV000016', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000381', 'SYSFLV000016', 'SYSFPR037', 0, 715.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000382', 'SYSFLV000016', 'SYSFPR038', 0, 988.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000383', 'SYSFLV000016', 'SYSFPR039', 0, 1648.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000384', 'SYSFLV000016', 'SYSFPR040', 0, 2966.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000385', 'SYSFLV000016', 'SYSFPR041', 0, 1483.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000386', 'SYSFLV000016', 'SYSFPR042', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000387', 'SYSFLV000016', 'SYSFPR043', 0, 753.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000388', 'SYSFLV000016', 'SYSFPR044', 0, 282.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000389', 'SYSFLV000016', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000390', 'SYSFLV000016', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--COLLEGE (CG03)
--4TH YEAR (SYSFLV000017)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000391', 'SYSFLV000017', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000392', 'SYSFLV000017', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000393', 'SYSFLV000017', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000394', 'SYSFLV000017','SYSFPR011',  0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000395', 'SYSFLV000017', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000396', 'SYSFLV000017', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000397', 'SYSFLV000017', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000398', 'SYSFLV000017', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000399', 'SYSFLV000017', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000400', 'SYSFLV000017', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000401', 'SYSFLV000017', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000402', 'SYSFLV000017', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000403', 'SYSFLV000017', 'SYSFPR019', 0, 1750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000404', 'SYSFLV000017', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000405', 'SYSFLV000017', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000406', 'SYSFLV000017', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000407', 'SYSFLV000017', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000408', 'SYSFLV000017', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000409', 'SYSFLV000017', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000410', 'SYSFLV000017', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000411', 'SYSFLV000017', 'SYSFPR029', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000412', 'SYSFLV000017', 'SYSFPR030', 0, 2000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000413', 'SYSFLV000017', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000414', 'SYSFLV000017', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000415', 'SYSFLV000017', 'SYSFPR037', 0, 688.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000416', 'SYSFLV000017', 'SYSFPR038', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000417', 'SYSFLV000017', 'SYSFPR039', 0, 1540.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000418', 'SYSFLV000017', 'SYSFPR040', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000419', 'SYSFLV000017', 'SYSFPR041', 0, 1386.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000420', 'SYSFLV000017', 'SYSFPR042', 0, 352.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000421', 'SYSFLV000017', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000422', 'SYSFLV000017', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000423', 'SYSFLV000017', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000424', 'SYSFLV000017', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000018)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000425', 'SYSFLV000018', 'SYSFPR001', 0, 526.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000426', 'SYSFLV000018', 'SYSFPR002', 0, 497.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000427', 'SYSFLV000018', 'SYSFPR004', 0, 683.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000428', 'SYSFLV000018', 'SYSFPR016', 0, 279.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009
--Graduate School / Doctorate (CG04)
--Doctorate (SYSFLV000019)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000429', 'SYSFLV000019', 'SYSFPR001', 0, 588.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000430', 'SYSFLV000019', 'SYSFPR002', 0, 497.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000431', 'SYSFLV000019', 'SYSFPR004', 0, 683.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000432', 'SYSFLV000019', 'SYSFPR016', 0, 279.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--SY 20082009 (SUMMER)
--COLLEGE (CG03)
--1ST YEAR (SYSFLV000145)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000433', 'SYSFLV000145', 'SYSFPR001', 0, 435.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000434', 'SYSFLV000145', 'SYSFPR002', 0, 443.37, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000435', 'SYSFLV000145', 'SYSFPR003', 0, 243.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000436', 'SYSFLV000145', 'SYSFPR011', 0, 144.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000437', 'SYSFLV000145', 'SYSFPR004', 0, 642.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000438', 'SYSFLV000145', 'SYSFPR006', 0, 221.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000439', 'SYSFLV000145', 'SYSFPR012', 0, 125.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000440', 'SYSFLV000145', 'SYSFPR008', 0, 332.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000441', 'SYSFLV000145', 'SYSFPR010', 0, 92.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000442', 'SYSFLV000145', 'SYSFPR005', 0, 177.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000443', 'SYSFLV000145', 'SYSFPR007', 0, 354.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000444', 'SYSFLV000145', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000445', 'SYSFLV000145', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000446', 'SYSFLV000145', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000447', 'SYSFLV000145', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000448', 'SYSFLV000145', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000449', 'SYSFLV000145', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000450', 'SYSFLV000145', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000451', 'SYSFLV000145', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000452', 'SYSFLV000145', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000453', 'SYSFLV000145', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000454', 'SYSFLV000145', 'SYSFPR037', 0, 842.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000455', 'SYSFLV000145', 'SYSFPR038', 0, 1058.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000456', 'SYSFLV000145', 'SYSFPR039', 0, 1763.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000457', 'SYSFLV000145', 'SYSFPR040', 0, 3174.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000458', 'SYSFLV000145', 'SYSFPR041', 0, 1587.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000459', 'SYSFLV000145', 'SYSFPR042', 0, 443.37, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000460', 'SYSFLV000145', 'SYSFPR043', 0, 806.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000461', 'SYSFLV000145', 'SYSFPR044', 0, 332.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000462', 'SYSFLV000145', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000463', 'SYSFLV000145', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009 (SUMMER)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000146)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000464', 'SYSFLV000146', 'SYSFPR001', 0, 395.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000465', 'SYSFLV000146', 'SYSFPR002', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000466', 'SYSFLV000146', 'SYSFPR003', 0, 221.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000467', 'SYSFLV000146', 'SYSFPR011', 0, 130.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000468', 'SYSFLV000146', 'SYSFPR004', 0, 584.42, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000469', 'SYSFLV000146', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000470', 'SYSFLV000146', 'SYSFPR012', 0, 113.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000471', 'SYSFLV000146', 'SYSFPR008', 0, 302.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000472', 'SYSFLV000146', 'SYSFPR010', 0, 84.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000473', 'SYSFLV000146', 'SYSFPR005', 0, 161.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000474', 'SYSFLV000146', 'SYSFPR007', 0, 322.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000475', 'SYSFLV000146', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000476', 'SYSFLV000146', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000477', 'SYSFLV000146', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000478', 'SYSFLV000146', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000479', 'SYSFLV000146', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000480', 'SYSFLV000146', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000481', 'SYSFLV000146', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000482', 'SYSFLV000146', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000483', 'SYSFLV000146', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000484', 'SYSFLV000146', 'SYSFPR037', 0, 765.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000485', 'SYSFLV000146', 'SYSFPR038', 0, 1058.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000486', 'SYSFLV000146', 'SYSFPR039', 0, 1763.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000487', 'SYSFLV000146', 'SYSFPR040', 0, 3174.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000488', 'SYSFLV000146', 'SYSFPR041', 0, 1587.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000489', 'SYSFLV000146', 'SYSFPR042', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000490', 'SYSFLV000146', 'SYSFPR043', 0, 806.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000491', 'SYSFLV000146', 'SYSFPR044', 0, 302.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000492', 'SYSFLV000146', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000493', 'SYSFLV000146', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009 (SUMMER)
--COLLEGE (CG03)
--3RD YEAR (SYSFLV000147)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000494', 'SYSFLV000147', 'SYSFPR001', 0, 369.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000495', 'SYSFLV000147', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000496', 'SYSFLV000147', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000497', 'SYSFLV000147', 'SYSFPR011', 0, 122.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000498', 'SYSFLV000147', 'SYSFPR004', 0, 546.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000499', 'SYSFLV000147', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000500', 'SYSFLV000147', 'SYSFPR012', 0, 106.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000501', 'SYSFLV000147', 'SYSFPR008', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000502', 'SYSFLV000147', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000503', 'SYSFLV000147', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000504', 'SYSFLV000147', 'SYSFPR007', 0, 301.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000505', 'SYSFLV000147', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000506', 'SYSFLV000147', 'SYSFPR019', 0, 600.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000507', 'SYSFLV000147', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000508', 'SYSFLV000147', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000509', 'SYSFLV000147', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000510', 'SYSFLV000147', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000511', 'SYSFLV000147', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000512', 'SYSFLV000147', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000513', 'SYSFLV000147', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000514', 'SYSFLV000147', 'SYSFPR037', 0, 715.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000515', 'SYSFLV000147', 'SYSFPR038', 0, 988.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000516', 'SYSFLV000147', 'SYSFPR039', 0, 1648.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000517', 'SYSFLV000147', 'SYSFPR040', 0, 2966.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000518', 'SYSFLV000147', 'SYSFPR041', 0, 1483.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000519', 'SYSFLV000147', 'SYSFPR042', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000520', 'SYSFLV000147', 'SYSFPR043', 0, 753.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000521', 'SYSFLV000147', 'SYSFPR044', 0, 282.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000522', 'SYSFLV000147', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000523', 'SYSFLV000147', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009 (SUMMER)
--COLLEGE (CG03)
--4TH YEAR (SYSFLV000148)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000524', 'SYSFLV000148', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000525', 'SYSFLV000148', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000526', 'SYSFLV000148', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000527', 'SYSFLV000148','SYSFPR011',  0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000528', 'SYSFLV000148', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000529', 'SYSFLV000148', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000530', 'SYSFLV000148', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000531', 'SYSFLV000148', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000532', 'SYSFLV000148', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000533', 'SYSFLV000148', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000534', 'SYSFLV000148', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000535', 'SYSFLV000148', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000536', 'SYSFLV000148', 'SYSFPR019', 0, 1750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000537', 'SYSFLV000148', 'SYSFPR020', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000538', 'SYSFLV000148', 'SYSFPR035', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000539', 'SYSFLV000148', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000540', 'SYSFLV000148', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000541', 'SYSFLV000148', 'SYSFPR023', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000542', 'SYSFLV000148', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000543', 'SYSFLV000148', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000544', 'SYSFLV000148', 'SYSFPR029', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000545', 'SYSFLV000148', 'SYSFPR030', 0, 2000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000546', 'SYSFLV000148', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000547', 'SYSFLV000148', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000548', 'SYSFLV000148', 'SYSFPR037', 0, 688.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000549', 'SYSFLV000148', 'SYSFPR038', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000550', 'SYSFLV000148', 'SYSFPR039', 0, 1540.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000551', 'SYSFLV000148', 'SYSFPR040', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000552', 'SYSFLV000148', 'SYSFPR041', 0, 1386.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000553', 'SYSFLV000148', 'SYSFPR042', 0, 352.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000554', 'SYSFLV000148', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000555', 'SYSFLV000148', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000556', 'SYSFLV000148', 'SYSFPR045', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000557', 'SYSFLV000148', 'SYSFPR046', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009 (SUMMER)
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000149)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000558', 'SYSFLV000149', 'SYSFPR001', 0, 526.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000559', 'SYSFLV000149', 'SYSFPR002', 0, 497.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000560', 'SYSFLV000149', 'SYSFPR004', 0, 683.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000561', 'SYSFLV000149', 'SYSFPR016', 0, 279.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20082009 (SUMMER)
--Graduate School / Doctorate (CG04)
--Doctorate (SYSFLV000150)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000562', 'SYSFLV000150', 'SYSFPR001', 0, 588.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000563', 'SYSFLV000150', 'SYSFPR002', 0, 497.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000564', 'SYSFLV000150', 'SYSFPR004', 0, 683.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000000565', 'SYSFLV000150', 'SYSFPR016', 0, 279.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details===========================================================================================================================================
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--NURSERY (SYSFLV000020)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000566', 'SYSFLV000020', 'SYSFPR001', 0, 11891.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000567', 'SYSFLV000020', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000568', 'SYSFLV000020', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000569', 'SYSFLV000020', 'SYSFPR004', 0, 367.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000570', 'SYSFLV000020', 'SYSFPR005', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000571', 'SYSFLV000020', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000572', 'SYSFLV000020', 'SYSFPR007', 0, 347.87, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000573', 'SYSFLV000020', 'SYSFPR008', 0, 214.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000574', 'SYSFLV000020', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000575', 'SYSFLV000020', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000576', 'SYSFLV000020', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000577', 'SYSFLV000020', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000578', 'SYSFLV000020', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000579', 'SYSFLV000020', 'SYSFPR021', 0, 85.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000580', 'SYSFLV000020', 'SYSFPR047', 0, 85.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000581', 'SYSFLV000020', 'SYSFPR025', 0, 90.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--KINDER 1 (SYSFLV000021)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000582', 'SYSFLV000021', 'SYSFPR001', 0, 11891.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000583', 'SYSFLV000021', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000584', 'SYSFLV000021', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000585', 'SYSFLV000021', 'SYSFPR004', 0, 367.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000586', 'SYSFLV000021', 'SYSFPR005', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000587', 'SYSFLV000021', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000588', 'SYSFLV000021', 'SYSFPR007', 0, 347.87, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000589', 'SYSFLV000021', 'SYSFPR008', 0, 214.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000590', 'SYSFLV000021', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000591', 'SYSFLV000021', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000592', 'SYSFLV000021', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000593', 'SYSFLV000021', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000594', 'SYSFLV000021', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000595', 'SYSFLV000021', 'SYSFPR021', 0, 85.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000596', 'SYSFLV000021', 'SYSFPR047', 0, 85.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000597', 'SYSFLV000021', 'SYSFPR025', 0, 90.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--KINDER 2 (SYSFLV000022)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000598', 'SYSFLV000022', 'SYSFPR001', 0, 11891.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000599', 'SYSFLV000022', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000600', 'SYSFLV000022', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000601', 'SYSFLV000022', 'SYSFPR004', 0, 367.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000602', 'SYSFLV000022', 'SYSFPR005', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000603', 'SYSFLV000022', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000604', 'SYSFLV000022', 'SYSFPR007', 0, 347.87, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000605', 'SYSFLV000022', 'SYSFPR008', 0, 214.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000606', 'SYSFLV000022', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000607', 'SYSFLV000022', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000608', 'SYSFLV000022', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000609', 'SYSFLV000022', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000610', 'SYSFLV000022', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000611', 'SYSFLV000022', 'SYSFPR029', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000612', 'SYSFLV000022', 'SYSFPR030', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000613', 'SYSFLV000022', 'SYSFPR031', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000614', 'SYSFLV000022', 'SYSFPR021', 0, 85.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000615', 'SYSFLV000022', 'SYSFPR047', 0, 85.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--GRADE 1 (SYSFLV000023)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000616', 'SYSFLV000023', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000617', 'SYSFLV000023', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000618', 'SYSFLV000023', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000619', 'SYSFLV000023', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000620', 'SYSFLV000023', 'SYSFPR004', 0, 338.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000621', 'SYSFLV000023', 'SYSFPR005', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000622', 'SYSFLV000023', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000623', 'SYSFLV000023', 'SYSFPR007', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000624', 'SYSFLV000023', 'SYSFPR008', 0, 198.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000625', 'SYSFLV000023', 'SYSFPR012', 0, 13.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000626', 'SYSFLV000023', 'SYSFPR013', 0, 27.83, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000627', 'SYSFLV000023', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000628', 'SYSFLV000023', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000629', 'SYSFLV000023', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000630', 'SYSFLV000023', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000631', 'SYSFLV000023', 'SYSFPR024', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000632', 'SYSFLV000023', 'SYSFPR026', 0, 385.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000633', 'SYSFLV000023', 'SYSFPR028', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000634', 'SYSFLV000023', 'SYSFPR048', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--GRADE 2 (SYSFLV000024)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000635', 'SYSFLV000024', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000636', 'SYSFLV000024', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000637', 'SYSFLV000024', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000638', 'SYSFLV000024', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000639', 'SYSFLV000024', 'SYSFPR004', 0, 338.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000640', 'SYSFLV000024', 'SYSFPR005', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000641', 'SYSFLV000024', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000642', 'SYSFLV000024', 'SYSFPR007', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000643', 'SYSFLV000024', 'SYSFPR008', 0, 198.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000644', 'SYSFLV000024', 'SYSFPR012', 0, 13.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000645', 'SYSFLV000024', 'SYSFPR013', 0, 27.83, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000646', 'SYSFLV000024', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000647', 'SYSFLV000024', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000648', 'SYSFLV000024', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000649', 'SYSFLV000024', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000650', 'SYSFLV000024', 'SYSFPR024', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000651', 'SYSFLV000024', 'SYSFPR026', 0, 385.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000652', 'SYSFLV000024', 'SYSFPR028', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000653', 'SYSFLV000024', 'SYSFPR048', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--GRADE 3 (SYSFLV000025)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000654', 'SYSFLV000025', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000655', 'SYSFLV000025', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000656', 'SYSFLV000025', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000657', 'SYSFLV000025', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000658', 'SYSFLV000025', 'SYSFPR004', 0, 338.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000659', 'SYSFLV000025', 'SYSFPR005', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000660', 'SYSFLV000025', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000661', 'SYSFLV000025', 'SYSFPR007', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000662', 'SYSFLV000025', 'SYSFPR008', 0, 198.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000663', 'SYSFLV000025', 'SYSFPR012', 0, 13.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000664', 'SYSFLV000025', 'SYSFPR013', 0, 27.83, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000665', 'SYSFLV000025', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000666', 'SYSFLV000025', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000667', 'SYSFLV000025', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000668', 'SYSFLV000025', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000669', 'SYSFLV000025', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000670', 'SYSFLV000025', 'SYSFPR024', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000671', 'SYSFLV000025', 'SYSFPR027', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000672', 'SYSFLV000025', 'SYSFPR026', 0, 385.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000673', 'SYSFLV000025', 'SYSFPR028', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000674', 'SYSFLV000025', 'SYSFPR048', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--GRADE 4 (SYSFLV000026)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000675', 'SYSFLV000026', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000676', 'SYSFLV000026', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000677', 'SYSFLV000026', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000678', 'SYSFLV000026', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000679', 'SYSFLV000026', 'SYSFPR004', 0, 338.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000680', 'SYSFLV000026', 'SYSFPR005', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000681', 'SYSFLV000026', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000682', 'SYSFLV000026', 'SYSFPR007', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000683', 'SYSFLV000026', 'SYSFPR008', 0, 198.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000684', 'SYSFLV000026', 'SYSFPR012', 0, 13.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000685', 'SYSFLV000026', 'SYSFPR013', 0, 27.83, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000686', 'SYSFLV000026', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000687', 'SYSFLV000026', 'SYSFPR015', 0, 460.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000688', 'SYSFLV000026', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000689', 'SYSFLV000026', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000690', 'SYSFLV000026', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000691', 'SYSFLV000026', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000692', 'SYSFLV000026', 'SYSFPR024', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000693', 'SYSFLV000026', 'SYSFPR026', 0, 385.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000694', 'SYSFLV000026', 'SYSFPR028', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000695', 'SYSFLV000026', 'SYSFPR048', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--GRADE 5 (SYSFLV000027)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000696', 'SYSFLV000027', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000697', 'SYSFLV000027', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000698', 'SYSFLV000027', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000699', 'SYSFLV000027', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000700', 'SYSFLV000027', 'SYSFPR004', 0, 338.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000701', 'SYSFLV000027', 'SYSFPR005', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000702', 'SYSFLV000027', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000703', 'SYSFLV000027', 'SYSFPR007', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000704', 'SYSFLV000027', 'SYSFPR008', 0, 198.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000705', 'SYSFLV000027', 'SYSFPR012', 0, 13.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000706', 'SYSFLV000027', 'SYSFPR013', 0, 27.83, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000707', 'SYSFLV000027', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000708', 'SYSFLV000027', 'SYSFPR015', 0, 460.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000709', 'SYSFLV000027', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000710', 'SYSFLV000027', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000711', 'SYSFLV000027', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000712', 'SYSFLV000027', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000713', 'SYSFLV000027', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000714', 'SYSFLV000027', 'SYSFPR024', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000715', 'SYSFLV000027', 'SYSFPR026', 0, 385.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000716', 'SYSFLV000027', 'SYSFPR028', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000717', 'SYSFLV000027', 'SYSFPR048', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--GRADE SCHOOL (CG01)
--GRADE 6 (SYSFLV000028)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000718', 'SYSFLV000028', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000719', 'SYSFLV000028', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000720', 'SYSFLV000028', 'SYSFPR003', 0, 146.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000721', 'SYSFLV000028', 'SYSFPR011', 0, 83.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000722', 'SYSFLV000028', 'SYSFPR004', 0, 338.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000723', 'SYSFLV000028', 'SYSFPR005', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000724', 'SYSFLV000028', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000725', 'SYSFLV000028', 'SYSFPR007', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000726', 'SYSFLV000028', 'SYSFPR008', 0, 198.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000727', 'SYSFLV000028', 'SYSFPR012', 0, 13.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000728', 'SYSFLV000028', 'SYSFPR013', 0, 27.83, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000729', 'SYSFLV000028', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000730', 'SYSFLV000028', 'SYSFPR015', 0, 460.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000731', 'SYSFLV000028', 'SYSFPR010', 0, 41.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000732', 'SYSFLV000028', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000733', 'SYSFLV000028', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000734', 'SYSFLV000028', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000735', 'SYSFLV000028', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000736', 'SYSFLV000028', 'SYSFPR024', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000737', 'SYSFLV000028', 'SYSFPR026', 0, 385.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000738', 'SYSFLV000028', 'SYSFPR028', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000739', 'SYSFLV000028', 'SYSFPR048', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000740', 'SYSFLV000028', 'SYSFPR029', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000741', 'SYSFLV000028', 'SYSFPR030', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000742', 'SYSFLV000028', 'SYSFPR031', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000743', 'SYSFLV000028', 'SYSFPR032', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--HIGH SCHOOL (CG02)
--1ST YEAR (SYSFLV000029)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000744', 'SYSFLV000029', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000745', 'SYSFLV000029', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000746', 'SYSFLV000029', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000747', 'SYSFLV000029', 'SYSFPR011', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000748', 'SYSFLV000029', 'SYSFPR004', 0, 258.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000749', 'SYSFLV000029', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000750', 'SYSFLV000029', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000751', 'SYSFLV000029', 'SYSFPR008', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000752', 'SYSFLV000029', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000753', 'SYSFLV000029', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000754', 'SYSFLV000029', 'SYSFPR014', 0, 2643.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000755', 'SYSFLV000029', 'SYSFPR007', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000756', 'SYSFLV000029', 'SYSFPR013', 0, 194.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000757', 'SYSFLV000029', 'SYSFPR015', 0, 460.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000758', 'SYSFLV000029', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000759', 'SYSFLV000029', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000760', 'SYSFLV000029', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000761', 'SYSFLV000029', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000762', 'SYSFLV000029', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000763', 'SYSFLV000029', 'SYSFPR047', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000764', 'SYSFLV000029', 'SYSFPR025', 0, 90.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000765', 'SYSFLV000029', 'SYSFPR033', 0, 60.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000766', 'SYSFLV000029', 'SYSFPR034', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000767', 'SYSFLV000029', 'SYSFPR026', 0, 235.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--HIGH SCHOOL (CG02)
--2ND YEAR (SYSFLV000030)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000768', 'SYSFLV000030', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000769', 'SYSFLV000030', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000770', 'SYSFLV000030', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000771', 'SYSFLV000030', 'SYSFPR011', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000772', 'SYSFLV000030', 'SYSFPR004', 0, 258.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000773', 'SYSFLV000030', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000774', 'SYSFLV000030', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000775', 'SYSFLV000030', 'SYSFPR008', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000776', 'SYSFLV000030', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000777', 'SYSFLV000030', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000778', 'SYSFLV000030', 'SYSFPR014', 0, 2643.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000779', 'SYSFLV000030', 'SYSFPR007', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000780', 'SYSFLV000030', 'SYSFPR013', 0, 194.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000781', 'SYSFLV000030', 'SYSFPR015', 0, 460.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000782', 'SYSFLV000030', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000783', 'SYSFLV000030', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000784', 'SYSFLV000030', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000785', 'SYSFLV000030', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000786', 'SYSFLV000030', 'SYSFPR033', 0, 60.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000787', 'SYSFLV000030', 'SYSFPR034', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000788', 'SYSFLV000030', 'SYSFPR026', 0, 235.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--HIGH SCHOOL (CG02)
--3RD YEAR (SYSFLV000031)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000789', 'SYSFLV000031', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000790', 'SYSFLV000031', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000791', 'SYSFLV000031', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000792', 'SYSFLV000031', 'SYSFPR011', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000793', 'SYSFLV000031', 'SYSFPR004', 0, 258.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000794', 'SYSFLV000031', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000795', 'SYSFLV000031', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000796', 'SYSFLV000031', 'SYSFPR008', 0, 243.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000797', 'SYSFLV000031', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000798', 'SYSFLV000031', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000799', 'SYSFLV000031', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000800', 'SYSFLV000031', 'SYSFPR007', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000801', 'SYSFLV000031', 'SYSFPR013', 0, 194.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000802', 'SYSFLV000031', 'SYSFPR015', 0, 460.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000803', 'SYSFLV000031', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000804', 'SYSFLV000031', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000805', 'SYSFLV000031', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000806', 'SYSFLV000031', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000807', 'SYSFLV000031', 'SYSFPR033', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000808', 'SYSFLV000031', 'SYSFPR034', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000809', 'SYSFLV000031', 'SYSFPR026', 0, 235.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--HIGH SCHOOL (CG02)
--4TH YEAR (SYSFLV000032)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000810', 'SYSFLV000032', 'SYSFPR001', 0, 11395.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000811', 'SYSFLV000032', 'SYSFPR002', 0, 250.47, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000812', 'SYSFLV000032', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000813', 'SYSFLV000032', 'SYSFPR011', 0, 97.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000814', 'SYSFLV000032', 'SYSFPR004', 0, 258.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000815', 'SYSFLV000032', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000816', 'SYSFLV000032', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000817', 'SYSFLV000032', 'SYSFPR008', 0, 243.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000818', 'SYSFLV000032', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000819', 'SYSFLV000032', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000820', 'SYSFLV000032', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000821', 'SYSFLV000032', 'SYSFPR007', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000822', 'SYSFLV000032', 'SYSFPR013', 0, 194.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000823', 'SYSFLV000032', 'SYSFPR015', 0, 460.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000824', 'SYSFLV000032', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000825', 'SYSFLV000032', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000826', 'SYSFLV000032', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000827', 'SYSFLV000032', 'SYSFPR019', 0, 900.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000828', 'SYSFLV000032', 'SYSFPR033', 0, 130.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000829', 'SYSFLV000032', 'SYSFPR034', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000830', 'SYSFLV000032', 'SYSFPR026', 0, 235.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000831', 'SYSFLV000032', 'SYSFPR029', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000832', 'SYSFLV000032', 'SYSFPR030', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000833', 'SYSFLV000032', 'SYSFPR031', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000834', 'SYSFLV000032', 'SYSFPR032', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000835', 'SYSFLV000032', 'SYSFPR049', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--COLLEGE SCHOOL (CG03)
--1ST YEAR (SYSFLV000033)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000836', 'SYSFLV000033', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000837', 'SYSFLV000033', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000838', 'SYSFLV000033', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000839', 'SYSFLV000033', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000840', 'SYSFLV000033', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000841', 'SYSFLV000033', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000842', 'SYSFLV000033', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000843', 'SYSFLV000033', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000844', 'SYSFLV000033', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000845', 'SYSFLV000033', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000846', 'SYSFLV000033', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000847', 'SYSFLV000033', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000848', 'SYSFLV000033', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000849', 'SYSFLV000033', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000850', 'SYSFLV000033', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000851', 'SYSFLV000033', 'SYSFPR035', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000852', 'SYSFLV000033', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000853', 'SYSFLV000033', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000854', 'SYSFLV000033', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000855', 'SYSFLV000033', 'SYSFPR025', 0, 90.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000856', 'SYSFLV000033', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000857', 'SYSFLV000033', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000858', 'SYSFLV000033', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000859', 'SYSFLV000033', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000860', 'SYSFLV000033', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000861', 'SYSFLV000033', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000034)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000862', 'SYSFLV000034', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000863', 'SYSFLV000034', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000864', 'SYSFLV000034', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000865', 'SYSFLV000034', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000866', 'SYSFLV000034', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000867', 'SYSFLV000034', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000868', 'SYSFLV000034', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000869', 'SYSFLV000034', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000870', 'SYSFLV000034', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000871', 'SYSFLV000034', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000872', 'SYSFLV000034', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000873', 'SYSFLV000034', 'SYSFPR017', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000874', 'SYSFLV000034', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000875', 'SYSFLV000034', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000876', 'SYSFLV000034', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000877', 'SYSFLV000034', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000878', 'SYSFLV000034', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000879', 'SYSFLV000034', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000880', 'SYSFLV000034', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000881', 'SYSFLV000034', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000882', 'SYSFLV000034', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000883', 'SYSFLV000034', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--COLLEGE SCHOOL (CG03)
--3RD YEAR (SYSFLV000035)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000884', 'SYSFLV000035', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000885', 'SYSFLV000035', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000886', 'SYSFLV000035', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000887', 'SYSFLV000035', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000888', 'SYSFLV000035', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000889', 'SYSFLV000035', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000890', 'SYSFLV000035', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000891', 'SYSFLV000035', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000892', 'SYSFLV000035', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000893', 'SYSFLV000035', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000894', 'SYSFLV000035', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000895', 'SYSFLV000035', 'SYSFPR017', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000896', 'SYSFLV000035', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000897', 'SYSFLV000035', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000898', 'SYSFLV000035', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000899', 'SYSFLV000035', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000900', 'SYSFLV000035', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000901', 'SYSFLV000035', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000902', 'SYSFLV000035', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000903', 'SYSFLV000035', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000904', 'SYSFLV000035', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000905', 'SYSFLV000035', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000036)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000906', 'SYSFLV000036', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000907', 'SYSFLV000036', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000908', 'SYSFLV000036', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000909', 'SYSFLV000036', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000910', 'SYSFLV000036', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000911', 'SYSFLV000036', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000912', 'SYSFLV000036', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000913', 'SYSFLV000036', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000914', 'SYSFLV000036', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000915', 'SYSFLV000036', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000916', 'SYSFLV000036', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000917', 'SYSFLV000036', 'SYSFPR017', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000918', 'SYSFLV000036', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000919', 'SYSFLV000036', 'SYSFPR019', 0, 900.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000920', 'SYSFLV000036', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000921', 'SYSFLV000036', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000922', 'SYSFLV000036', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000923', 'SYSFLV000036', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000924', 'SYSFLV000036', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000925', 'SYSFLV000036', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000926', 'SYSFLV000036', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000927', 'SYSFLV000036', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000037)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000928', 'SYSFLV000037', 'SYSFPR001', 0, 369.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000929', 'SYSFLV000037', 'SYSFPR002', 0, 333.96, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000930', 'SYSFLV000037', 'SYSFPR004', 0, 459.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000931', 'SYSFLV000037', 'SYSFPR016', 0, 187.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 SUMMER
--COLLEGE SCHOOL (CG03)
--1ST YEAR (SYSFLV000039)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000932', 'SYSFLV000039', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000933', 'SYSFLV000039', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000934', 'SYSFLV000039', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000935', 'SYSFLV000039', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000936', 'SYSFLV000039', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000937', 'SYSFLV000039', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000938', 'SYSFLV000039', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000939', 'SYSFLV000039', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000940', 'SYSFLV000039', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000941', 'SYSFLV000039', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000942', 'SYSFLV000039', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000943', 'SYSFLV000039', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000944', 'SYSFLV000039', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000945', 'SYSFLV000039', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000946', 'SYSFLV000039', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000947', 'SYSFLV000039', 'SYSFPR035', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000948', 'SYSFLV000039', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000949', 'SYSFLV000039', 'SYSFPR022', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000950', 'SYSFLV000039', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000951', 'SYSFLV000039', 'SYSFPR025', 0, 90.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000952', 'SYSFLV000039', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000953', 'SYSFLV000039', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000954', 'SYSFLV000039', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000955', 'SYSFLV000039', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000956', 'SYSFLV000039', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000957', 'SYSFLV000039', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 SUMMER
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000040)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000958', 'SYSFLV000040', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000959', 'SYSFLV000040', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000960', 'SYSFLV000040', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000961', 'SYSFLV000040', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000962', 'SYSFLV000040', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000963', 'SYSFLV000040', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000964', 'SYSFLV000040', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000965', 'SYSFLV000040', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000966', 'SYSFLV000040', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000967', 'SYSFLV000040', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000968', 'SYSFLV000040', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000969', 'SYSFLV000040', 'SYSFPR017', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000970', 'SYSFLV000040', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000971', 'SYSFLV000040', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000972', 'SYSFLV000040', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000973', 'SYSFLV000040', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000974', 'SYSFLV000040', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000975', 'SYSFLV000040', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000976', 'SYSFLV000040', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000977', 'SYSFLV000040', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000978', 'SYSFLV000040', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000979', 'SYSFLV000040', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 SUMMER
--COLLEGE SCHOOL (CG03)
--3RD YEAR (SYSFLV000041)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000980', 'SYSFLV000041', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000981', 'SYSFLV000041', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000982', 'SYSFLV000041', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000983', 'SYSFLV000041', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000984', 'SYSFLV000041', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000985', 'SYSFLV000041', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000986', 'SYSFLV000041', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000987', 'SYSFLV000041', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000988', 'SYSFLV000041', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000989', 'SYSFLV000041', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000990', 'SYSFLV000041', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000991', 'SYSFLV000041', 'SYSFPR017', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000992', 'SYSFLV000041', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000993', 'SYSFLV000041', 'SYSFPR019', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000994', 'SYSFLV000041', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000995', 'SYSFLV000041', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000996', 'SYSFLV000041', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000997', 'SYSFLV000041', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000998', 'SYSFLV000041', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000000999', 'SYSFLV000041', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001000', 'SYSFLV000041', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001001', 'SYSFLV000041', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 SUMMER
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000042)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001002', 'SYSFLV000042', 'SYSFPR001', 0, 285.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001003', 'SYSFLV000042', 'SYSFPR002', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001004', 'SYSFLV000042', 'SYSFPR003', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001005', 'SYSFLV000042', 'SYSFPR011', 0, 90.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001006', 'SYSFLV000042', 'SYSFPR004', 0, 405.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001007', 'SYSFLV000042', 'SYSFPR006', 0, 139.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001008', 'SYSFLV000042', 'SYSFPR012', 0, 69.57, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001009', 'SYSFLV000042', 'SYSFPR008', 0, 208.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001010', 'SYSFLV000042', 'SYSFPR010', 0, 55.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001011', 'SYSFLV000042', 'SYSFPR005', 0, 111.32, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001012', 'SYSFLV000042', 'SYSFPR007', 0, 222.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001013', 'SYSFLV000042', 'SYSFPR017', 0, 30.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001014', 'SYSFLV000042', 'SYSFPR018', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001015', 'SYSFLV000042', 'SYSFPR019', 0, 900.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001016', 'SYSFLV000042', 'SYSFPR020', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001017', 'SYSFLV000042', 'SYSFPR036', 0, 155.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001018', 'SYSFLV000042', 'SYSFPR037', 0, 528.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001019', 'SYSFLV000042', 'SYSFPR050', 0, 730.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001020', 'SYSFLV000042', 'SYSFPR051', 0, 2191.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001021', 'SYSFLV000042', 'SYSFPR042', 0, 278.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001022', 'SYSFLV000042', 'SYSFPR043', 0, 556.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001023', 'SYSFLV000042', 'SYSFPR044', 0, 208.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 SUMMER
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000037)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001024', 'SYSFLV000043', 'SYSFPR001', 0, 369.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001025', 'SYSFLV000043', 'SYSFPR002', 0, 333.96, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001026', 'SYSFLV000043', 'SYSFPR004', 0, 459.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001027', 'SYSFLV000043', 'SYSFPR016', 0, 187.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details===========================================================================================================================================
--SY 2004 - 2005
--GRADE SCHOOL (CG01)
--NURSERY (YSFLV000045)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001028', 'SYSFLV000045', 'SYSFPR001', 0, 13080.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001029', 'SYSFLV000045', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001030', 'SYSFLV000045', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001031', 'SYSFLV000045', 'SYSFPR004', 0, 404.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001032', 'SYSFLV000045', 'SYSFPR005', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001033', 'SYSFLV000045', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001034', 'SYSFLV000045', 'SYSFPR007', 0, 382.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001035', 'SYSFLV000045', 'SYSFPR008', 0, 235.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001036', 'SYSFLV000045', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001037', 'SYSFLV000045', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001038', 'SYSFLV000045', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001039', 'SYSFLV000045', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001040', 'SYSFLV000045', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001041', 'SYSFLV000045', 'SYSFPR021', 0, 93.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001042', 'SYSFLV000045', 'SYSFPR047', 0, 93.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001043', 'SYSFLV000045', 'SYSFPR025', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2004 - 2005
--GRADE SCHOOL (CG01)
--KINDER 1 (YSFLV000046)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001044', 'SYSFLV000046', 'SYSFPR001', 0, 13080.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001045', 'SYSFLV000046', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001046', 'SYSFLV000046', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001047', 'SYSFLV000046', 'SYSFPR004', 0, 404.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001048', 'SYSFLV000046', 'SYSFPR005', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001049', 'SYSFLV000046', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001050', 'SYSFLV000046', 'SYSFPR007', 0, 382.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001051', 'SYSFLV000046', 'SYSFPR008', 0, 235.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001052', 'SYSFLV000046', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001053', 'SYSFLV000046', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001054', 'SYSFLV000046', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001055', 'SYSFLV000046', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001056', 'SYSFLV000046', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001057', 'SYSFLV000046', 'SYSFPR021', 0, 93.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001058', 'SYSFLV000046', 'SYSFPR047', 0, 93.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001059', 'SYSFLV000046', 'SYSFPR025', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--GRADE SCHOOL (CG01)
--KINDER 2 (SYSFLV000047)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001060', 'SYSFLV000047', 'SYSFPR001', 0, 13080.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001061', 'SYSFLV000047', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001062', 'SYSFLV000047', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001063', 'SYSFLV000047', 'SYSFPR004', 0, 404.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001064', 'SYSFLV000047', 'SYSFPR005', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001065', 'SYSFLV000047', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001066', 'SYSFLV000047', 'SYSFPR007', 0, 382.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001067', 'SYSFLV000047', 'SYSFPR008', 0, 235.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001068', 'SYSFLV000047', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001069', 'SYSFLV000047', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001070', 'SYSFLV000047', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001071', 'SYSFLV000047', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001072', 'SYSFLV000047', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001073', 'SYSFLV000047', 'SYSFPR029', 0, 385.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001074', 'SYSFLV000047', 'SYSFPR030', 0, 1100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001075', 'SYSFLV000047', 'SYSFPR031', 0, 165.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001076', 'SYSFLV000047', 'SYSFPR021', 0, 93.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001077', 'SYSFLV000047', 'SYSFPR047', 0, 93.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--GRADE SCHOOL (CG01)
--GRADE 1 (SYSFLV000048)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001078', 'SYSFLV000048', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001079', 'SYSFLV000048', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001080', 'SYSFLV000048', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001081', 'SYSFLV000048', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001082', 'SYSFLV000048', 'SYSFPR004', 0, 371.94, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001083', 'SYSFLV000048', 'SYSFPR005', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001084', 'SYSFLV000048', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001085', 'SYSFLV000048', 'SYSFPR007', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001086', 'SYSFLV000048', 'SYSFPR008', 0, 218.88, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001087', 'SYSFLV000048', 'SYSFPR012', 0, 16.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001088', 'SYSFLV000048', 'SYSFPR013', 0, 32.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001089', 'SYSFLV000048', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001090', 'SYSFLV000048', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001091', 'SYSFLV000048', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001092', 'SYSFLV000048', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001093', 'SYSFLV000048', 'SYSFPR024', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001094', 'SYSFLV000048', 'SYSFPR026', 0, 423.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001095', 'SYSFLV000048', 'SYSFPR028', 0, 88.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001096', 'SYSFLV000048', 'SYSFPR048', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--GRADE SCHOOL (CG01)
--GRADE 2 (SYSFLV000049)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001097', 'SYSFLV000049', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001098', 'SYSFLV000049', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001099', 'SYSFLV000049', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001100', 'SYSFLV000049', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001101', 'SYSFLV000049', 'SYSFPR004', 0, 371.94, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001102', 'SYSFLV000049', 'SYSFPR005', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001103', 'SYSFLV000049', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001104', 'SYSFLV000049', 'SYSFPR007', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001105', 'SYSFLV000049', 'SYSFPR008', 0, 218.88, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001106', 'SYSFLV000049', 'SYSFPR012', 0, 16.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001107', 'SYSFLV000049', 'SYSFPR013', 0, 32.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001108', 'SYSFLV000049', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001109', 'SYSFLV000049', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001110', 'SYSFLV000049', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001111', 'SYSFLV000049', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001112', 'SYSFLV000049', 'SYSFPR024', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001113', 'SYSFLV000049', 'SYSFPR026', 0, 423.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001114', 'SYSFLV000049', 'SYSFPR028', 0, 88.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001115', 'SYSFLV000049', 'SYSFPR048', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--GRADE SCHOOL (CG01)
--GRADE 3 (SYSFLV000050)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001116', 'SYSFLV000050', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001117', 'SYSFLV000050', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001118', 'SYSFLV000050', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001119', 'SYSFLV000050', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001120', 'SYSFLV000050', 'SYSFPR004', 0, 371.94, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001121', 'SYSFLV000050', 'SYSFPR005', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001122', 'SYSFLV000050', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001123', 'SYSFLV000050', 'SYSFPR007', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001124', 'SYSFLV000050', 'SYSFPR008', 0, 218.88, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001125', 'SYSFLV000050', 'SYSFPR012', 0, 16.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001126', 'SYSFLV000050', 'SYSFPR013', 0, 32.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001127', 'SYSFLV000050', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001128', 'SYSFLV000050', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001129', 'SYSFLV000050', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001130', 'SYSFLV000050', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001131', 'SYSFLV000050', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001132', 'SYSFLV000050', 'SYSFPR024', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001133', 'SYSFLV000050', 'SYSFPR027', 0, 390.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001134', 'SYSFLV000050', 'SYSFPR026', 0, 423.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001135', 'SYSFLV000050', 'SYSFPR028', 0, 88.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001136', 'SYSFLV000050', 'SYSFPR048', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--GRADE SCHOOL (CG01)
--GRADE 4 (SYSFLV000051)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001137', 'SYSFLV000051', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001138', 'SYSFLV000051', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001139', 'SYSFLV000051', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001140', 'SYSFLV000051', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001141', 'SYSFLV000051', 'SYSFPR004', 0, 371.94, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001142', 'SYSFLV000051', 'SYSFPR005', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001143', 'SYSFLV000051', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001144', 'SYSFLV000051', 'SYSFPR007', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001145', 'SYSFLV000051', 'SYSFPR008', 0, 218.88, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001146', 'SYSFLV000051', 'SYSFPR012', 0, 16.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001147', 'SYSFLV000051', 'SYSFPR013', 0, 32.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001148', 'SYSFLV000051', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001149', 'SYSFLV000051', 'SYSFPR015', 0, 506.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001150', 'SYSFLV000051', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001151', 'SYSFLV000051', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001152', 'SYSFLV000051', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001153', 'SYSFLV000051', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001154', 'SYSFLV000051', 'SYSFPR024', 0, 132.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001155', 'SYSFLV000051', 'SYSFPR026', 0, 423.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001156', 'SYSFLV000051', 'SYSFPR028', 0, 88.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001157', 'SYSFLV000051', 'SYSFPR048', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--GRADE SCHOOL (CG01)
--GRADE 5 (SYSFLV000052)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001158', 'SYSFLV000052', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001159', 'SYSFLV000052', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001160', 'SYSFLV000052', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001161', 'SYSFLV000052', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001162', 'SYSFLV000052', 'SYSFPR004', 0, 371.94, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001163', 'SYSFLV000052', 'SYSFPR005', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001164', 'SYSFLV000052', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001165', 'SYSFLV000052', 'SYSFPR007', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001166', 'SYSFLV000052', 'SYSFPR008', 0, 218.88, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001167', 'SYSFLV000052', 'SYSFPR012', 0, 16.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001168', 'SYSFLV000052', 'SYSFPR013', 0, 32.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001169', 'SYSFLV000052', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001170', 'SYSFLV000052', 'SYSFPR015', 0, 506.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001171', 'SYSFLV000052', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001172', 'SYSFLV000052', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001173', 'SYSFLV000052', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001174', 'SYSFLV000052', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001175', 'SYSFLV000052', 'SYSFPR019', 0, 275.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001176', 'SYSFLV000052', 'SYSFPR024', 0, 132.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001177', 'SYSFLV000052', 'SYSFPR026', 0, 423.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001178', 'SYSFLV000052', 'SYSFPR028', 0, 88.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001179', 'SYSFLV000052', 'SYSFPR048', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--GRADE SCHOOL (CG01)
--GRADE 6 (SYSFLV000053)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001180', 'SYSFLV000053', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001181', 'SYSFLV000053', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001182', 'SYSFLV000053', 'SYSFPR003', 0, 160.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001183', 'SYSFLV000053', 'SYSFPR011', 0, 91.84, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001184', 'SYSFLV000053', 'SYSFPR004', 0, 371.94, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001185', 'SYSFLV000053', 'SYSFPR005', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001186', 'SYSFLV000053', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001187', 'SYSFLV000053', 'SYSFPR007', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001188', 'SYSFLV000053', 'SYSFPR008', 0, 218.88, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001189', 'SYSFLV000053', 'SYSFPR012', 0, 16.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001190', 'SYSFLV000053', 'SYSFPR013', 0, 32.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001191', 'SYSFLV000053', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001192', 'SYSFLV000053', 'SYSFPR015', 0, 506.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001193', 'SYSFLV000053', 'SYSFPR010', 0, 48.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001194', 'SYSFLV000053', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001195', 'SYSFLV000053', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001196', 'SYSFLV000053', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001197', 'SYSFLV000053', 'SYSFPR019', 0, 550.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001198', 'SYSFLV000053', 'SYSFPR024', 0, 132.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001199', 'SYSFLV000053', 'SYSFPR026', 0, 423.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001200', 'SYSFLV000053', 'SYSFPR028', 0, 88.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001201', 'SYSFLV000053', 'SYSFPR048', 0, 110.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001202', 'SYSFLV000053', 'SYSFPR029', 0, 440.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001203', 'SYSFLV000053', 'SYSFPR030', 0, 1100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001204', 'SYSFLV000053', 'SYSFPR031', 0, 165.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001205', 'SYSFLV000053', 'SYSFPR032', 0, 44.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2004 - 2005
--HIGH SCHOOL (CG02)
--1ST YEAR (SYSFLV000054)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001206', 'SYSFLV000054', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001207', 'SYSFLV000054', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001208', 'SYSFLV000054', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001209', 'SYSFLV000054', 'SYSFPR011', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001210', 'SYSFLV000054', 'SYSFPR004', 0, 297.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001211', 'SYSFLV000054', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001212', 'SYSFLV000054', 'SYSFPR012', 0, 80.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001213', 'SYSFLV000054', 'SYSFPR008', 0, 252.55, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001214', 'SYSFLV000054', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001215', 'SYSFLV000054', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001216', 'SYSFLV000054', 'SYSFPR014', 0, 2643.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001217', 'SYSFLV000054', 'SYSFPR007', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001218', 'SYSFLV000054', 'SYSFPR013', 0, 214.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001219', 'SYSFLV000054', 'SYSFPR015', 0, 506.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001220', 'SYSFLV000054', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001221', 'SYSFLV000054', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001222', 'SYSFLV000054', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001223', 'SYSFLV000054', 'SYSFPR019', 0, 275.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001224', 'SYSFLV000054', 'SYSFPR021', 0, 165.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001225', 'SYSFLV000054', 'SYSFPR047', 0, 220.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001226', 'SYSFLV000054', 'SYSFPR025', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001227', 'SYSFLV000054', 'SYSFPR033', 0, 66.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001228', 'SYSFLV000054', 'SYSFPR034', 0, 33.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001229', 'SYSFLV000054', 'SYSFPR026', 0, 258.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--HIGH SCHOOL (CG02)
--2ND YEAR (SYSFLV000055)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001230', 'SYSFLV000055', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001231', 'SYSFLV000055', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001232', 'SYSFLV000055', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001233', 'SYSFLV000055', 'SYSFPR011', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001234', 'SYSFLV000055', 'SYSFPR004', 0, 297.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001235', 'SYSFLV000055', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001236', 'SYSFLV000055', 'SYSFPR012', 0, 80.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001237', 'SYSFLV000055', 'SYSFPR008', 0, 252.55, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001238', 'SYSFLV000055', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001239', 'SYSFLV000055', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001240', 'SYSFLV000055', 'SYSFPR014', 0, 2643.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001241', 'SYSFLV000055', 'SYSFPR007', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001242', 'SYSFLV000055', 'SYSFPR013', 0, 214.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001243', 'SYSFLV000055', 'SYSFPR015', 0, 506.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001244', 'SYSFLV000055', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001245', 'SYSFLV000055', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001246', 'SYSFLV000055', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001247', 'SYSFLV000055', 'SYSFPR019', 0, 275.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001248', 'SYSFLV000055', 'SYSFPR033', 0, 66.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001249', 'SYSFLV000055', 'SYSFPR034', 0, 33.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001250', 'SYSFLV000055', 'SYSFPR026', 0, 258.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--HIGH SCHOOL (CG02)
--3RD YEAR (SYSFLV000056)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001251', 'SYSFLV000056', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001252', 'SYSFLV000056', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001253', 'SYSFLV000056', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001254', 'SYSFLV000056', 'SYSFPR011', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001255', 'SYSFLV000056', 'SYSFPR004', 0, 297.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001256', 'SYSFLV000056', 'SYSFPR006', 0, 160.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001257', 'SYSFLV000056', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001258', 'SYSFLV000056', 'SYSFPR008', 0, 280.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001259', 'SYSFLV000056', 'SYSFPR010', 0, 61.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001260', 'SYSFLV000056', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001261', 'SYSFLV000056', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001262', 'SYSFLV000056', 'SYSFPR007', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001263', 'SYSFLV000056', 'SYSFPR013', 0, 214.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001264', 'SYSFLV000056', 'SYSFPR015', 0, 506.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001265', 'SYSFLV000056', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001266', 'SYSFLV000056', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001267', 'SYSFLV000056', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001268', 'SYSFLV000056', 'SYSFPR019', 0, 275.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001269', 'SYSFLV000056', 'SYSFPR033', 0, 220.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001270', 'SYSFLV000056', 'SYSFPR034', 0, 33.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001271', 'SYSFLV000056', 'SYSFPR026', 0, 258.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--HIGH SCHOOL (CG02)
--4TH YEAR (SYSFLV000057)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001272', 'SYSFLV000057', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001273', 'SYSFLV000057', 'SYSFPR002', 0, 275.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001274', 'SYSFLV000057', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001275', 'SYSFLV000057', 'SYSFPR011', 0, 107.15, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001276', 'SYSFLV000057', 'SYSFPR004', 0, 297.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001277', 'SYSFLV000057', 'SYSFPR006', 0, 160.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001278', 'SYSFLV000057', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001279', 'SYSFLV000057', 'SYSFPR008', 0, 280.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001280', 'SYSFLV000057', 'SYSFPR010', 0, 61.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001281', 'SYSFLV000057', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001282', 'SYSFLV000057', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001283', 'SYSFLV000057', 'SYSFPR007', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001284', 'SYSFLV000057', 'SYSFPR013', 0, 214.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001285', 'SYSFLV000057', 'SYSFPR015', 0, 506.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001286', 'SYSFLV000057', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001287', 'SYSFLV000057', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001288', 'SYSFLV000057', 'SYSFPR020', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001289', 'SYSFLV000057', 'SYSFPR019', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001290', 'SYSFLV000057', 'SYSFPR033', 0, 143.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001291', 'SYSFLV000057', 'SYSFPR034', 0, 33.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001292', 'SYSFLV000057', 'SYSFPR026', 0, 258.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001293', 'SYSFLV000057', 'SYSFPR029', 0, 440.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001294', 'SYSFLV000057', 'SYSFPR030', 0, 1100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001295', 'SYSFLV000057', 'SYSFPR031', 0, 165.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001296', 'SYSFLV000057', 'SYSFPR032', 0, 44.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001297', 'SYSFLV000057', 'SYSFPR049', 0, 82.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--COLLEGE SCHOOL (CG03)
--1ST YEAR (SYSFLV000058)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001298', 'SYSFLV000058', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001299', 'SYSFLV000058', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001300', 'SYSFLV000058', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001301', 'SYSFLV000058', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001302', 'SYSFLV000058', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001303', 'SYSFLV000058', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001304', 'SYSFLV000058', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001305', 'SYSFLV000058', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001306', 'SYSFLV000058', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001307', 'SYSFLV000058', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001308', 'SYSFLV000058', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001309', 'SYSFLV000058', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001310', 'SYSFLV000058', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001311', 'SYSFLV000058', 'SYSFPR019', 0, 270.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001312', 'SYSFLV000058', 'SYSFPR020', 0, 80.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001313', 'SYSFLV000058', 'SYSFPR035', 0, 270.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001314', 'SYSFLV000058', 'SYSFPR021', 0, 160.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001315', 'SYSFLV000058', 'SYSFPR022', 0, 214.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001316', 'SYSFLV000058', 'SYSFPR036', 0, 165.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001317', 'SYSFLV000058', 'SYSFPR025', 0, 96.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001318', 'SYSFLV000058', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001319', 'SYSFLV000058', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001320', 'SYSFLV000058', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001321', 'SYSFLV000058', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001322', 'SYSFLV000058', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001323', 'SYSFLV000058', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000059)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001324', 'SYSFLV000059', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001325', 'SYSFLV000059', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001326', 'SYSFLV000059', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001327', 'SYSFLV000059', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001328', 'SYSFLV000059', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001329', 'SYSFLV000059', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001330', 'SYSFLV000059', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001331', 'SYSFLV000059', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001332', 'SYSFLV000059', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001333', 'SYSFLV000059', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001334', 'SYSFLV000059', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001335', 'SYSFLV000059', 'SYSFPR017', 0, 31.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001336', 'SYSFLV000059', 'SYSFPR018', 0, 42.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001337', 'SYSFLV000059', 'SYSFPR019', 0, 262.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001338', 'SYSFLV000059', 'SYSFPR020', 0, 78.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001339', 'SYSFLV000059', 'SYSFPR036', 0, 202.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001340', 'SYSFLV000059', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001341', 'SYSFLV000059', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001342', 'SYSFLV000059', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001343', 'SYSFLV000059', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001344', 'SYSFLV000059', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001345', 'SYSFLV000059', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--COLLEGE SCHOOL (CG03)
--3RD YEAR (SYSFLV000060)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001346', 'SYSFLV000060', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001347', 'SYSFLV000060', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001348', 'SYSFLV000060', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001349', 'SYSFLV000060', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001350', 'SYSFLV000060', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001351', 'SYSFLV000060', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001352', 'SYSFLV000060', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001353', 'SYSFLV000060', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001354', 'SYSFLV000060', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001355', 'SYSFLV000060', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001356', 'SYSFLV000060', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001357', 'SYSFLV000060', 'SYSFPR017', 0, 31.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001358', 'SYSFLV000060', 'SYSFPR018', 0, 42.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001359', 'SYSFLV000060', 'SYSFPR019', 0, 262.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001360', 'SYSFLV000060', 'SYSFPR020', 0, 78.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001361', 'SYSFLV000060', 'SYSFPR036', 0, 202.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001362', 'SYSFLV000060', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001363', 'SYSFLV000060', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001364', 'SYSFLV000060', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001365', 'SYSFLV000060', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001366', 'SYSFLV000060', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001367', 'SYSFLV000060', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000061)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001368', 'SYSFLV000061', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001369', 'SYSFLV000061', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001370', 'SYSFLV000061', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001371', 'SYSFLV000061', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001372', 'SYSFLV000061', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001373', 'SYSFLV000061', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001374', 'SYSFLV000061', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001375', 'SYSFLV000061', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001376', 'SYSFLV000061', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001377', 'SYSFLV000061', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001378', 'SYSFLV000061', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001379', 'SYSFLV000061', 'SYSFPR017', 0, 32.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001380', 'SYSFLV000061', 'SYSFPR018', 0, 43.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001381', 'SYSFLV000061', 'SYSFPR019', 0, 981.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001382', 'SYSFLV000061', 'SYSFPR020', 0, 81.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001383', 'SYSFLV000061', 'SYSFPR036', 0, 200.95, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001384', 'SYSFLV000061', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001385', 'SYSFLV000061', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001386', 'SYSFLV000061', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001387', 'SYSFLV000061', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001388', 'SYSFLV000061', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001389', 'SYSFLV000061', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000062)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001390', 'SYSFLV000062', 'SYSFPR001', 0, 406.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001391', 'SYSFLV000062', 'SYSFPR002', 0, 367.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001392', 'SYSFLV000062', 'SYSFPR004', 0, 505.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001393', 'SYSFLV000062', 'SYSFPR016', 0, 206.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 SUMMER
--COLLEGE SCHOOL (CG03)
--1ST YEAR (SYSFLV000064)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001394', 'SYSFLV000064', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001395', 'SYSFLV000064', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001396', 'SYSFLV000064', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001397', 'SYSFLV000064', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001398', 'SYSFLV000064', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001399', 'SYSFLV000064', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001400', 'SYSFLV000064', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001401', 'SYSFLV000064', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001402', 'SYSFLV000064', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001403', 'SYSFLV000064', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001404', 'SYSFLV000064', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001405', 'SYSFLV000064', 'SYSFPR017', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001406', 'SYSFLV000064', 'SYSFPR018', 0, 45.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001407', 'SYSFLV000064', 'SYSFPR019', 0, 270.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001408', 'SYSFLV000064', 'SYSFPR020', 0, 80.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001409', 'SYSFLV000064', 'SYSFPR035', 0, 270.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001410', 'SYSFLV000064', 'SYSFPR021', 0, 160.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001411', 'SYSFLV000064', 'SYSFPR022', 0, 214.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001412', 'SYSFLV000064', 'SYSFPR036', 0, 165.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001413', 'SYSFLV000064', 'SYSFPR025', 0, 96.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001414', 'SYSFLV000064', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001415', 'SYSFLV000064', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001416', 'SYSFLV000064', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001417', 'SYSFLV000064', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001418', 'SYSFLV000064', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001419', 'SYSFLV000064', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 SUMMER
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000065)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001420', 'SYSFLV000065', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001421', 'SYSFLV000065', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001422', 'SYSFLV000065', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001423', 'SYSFLV000065', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001424', 'SYSFLV000065', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001425', 'SYSFLV000065', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001426', 'SYSFLV000065', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001427', 'SYSFLV000065', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001428', 'SYSFLV000065', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001429', 'SYSFLV000065', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001430', 'SYSFLV000065', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001431', 'SYSFLV000065', 'SYSFPR017', 0, 31.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001432', 'SYSFLV000065', 'SYSFPR018', 0, 42.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001433', 'SYSFLV000065', 'SYSFPR019', 0, 262.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001434', 'SYSFLV000065', 'SYSFPR020', 0, 78.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001435', 'SYSFLV000065', 'SYSFPR036', 0, 202.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001436', 'SYSFLV000065', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001437', 'SYSFLV000065', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001438', 'SYSFLV000065', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001439', 'SYSFLV000065', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001440', 'SYSFLV000065', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001441', 'SYSFLV000065', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 SUMMER
--COLLEGE SCHOOL (CG03)
--3RD YEAR (SYSFLV000066)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001442', 'SYSFLV000066', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001443', 'SYSFLV000066', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001444', 'SYSFLV000066', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001445', 'SYSFLV000066', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001446', 'SYSFLV000066', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001447', 'SYSFLV000066', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001448', 'SYSFLV000066', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001449', 'SYSFLV000066', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001450', 'SYSFLV000066', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001451', 'SYSFLV000066', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001452', 'SYSFLV000066', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001453', 'SYSFLV000066', 'SYSFPR017', 0, 31.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001454', 'SYSFLV000066', 'SYSFPR018', 0, 42.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001455', 'SYSFLV000066', 'SYSFPR019', 0, 262.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001456', 'SYSFLV000066', 'SYSFPR020', 0, 78.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001457', 'SYSFLV000066', 'SYSFPR036', 0, 202.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001458', 'SYSFLV000066', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001459', 'SYSFLV000066', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001460', 'SYSFLV000066', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001461', 'SYSFLV000066', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001462', 'SYSFLV000066', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001463', 'SYSFLV000066', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 SUMMER
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000067)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001464', 'SYSFLV000067', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001465', 'SYSFLV000067', 'SYSFPR002', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001466', 'SYSFLV000067', 'SYSFPR003', 0, 168.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001467', 'SYSFLV000067', 'SYSFPR011', 0, 99.48, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001468', 'SYSFLV000067', 'SYSFPR004', 0, 446.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001469', 'SYSFLV000067', 'SYSFPR006', 0, 153.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001470', 'SYSFLV000067', 'SYSFPR012', 0, 76.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001471', 'SYSFLV000067', 'SYSFPR008', 0, 229.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001472', 'SYSFLV000067', 'SYSFPR010', 0, 64.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001473', 'SYSFLV000067', 'SYSFPR005', 0, 122.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001474', 'SYSFLV000067', 'SYSFPR007', 0, 244.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001475', 'SYSFLV000067', 'SYSFPR017', 0, 32.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001476', 'SYSFLV000067', 'SYSFPR018', 0, 43.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001477', 'SYSFLV000067', 'SYSFPR019', 0, 981.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001478', 'SYSFLV000067', 'SYSFPR020', 0, 81.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001479', 'SYSFLV000067', 'SYSFPR036', 0, 200.95, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001480', 'SYSFLV000067', 'SYSFPR037', 0, 581.65, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001481', 'SYSFLV000067', 'SYSFPR050', 0, 803.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001482', 'SYSFLV000067', 'SYSFPR051', 0, 2410.77, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001483', 'SYSFLV000067', 'SYSFPR042', 0, 306.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001484', 'SYSFLV000067', 'SYSFPR043', 0, 612.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001485', 'SYSFLV000067', 'SYSFPR044', 0, 229.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 SUMMER
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000068)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001486', 'SYSFLV000068', 'SYSFPR001', 0, 406.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001487', 'SYSFLV000068', 'SYSFPR002', 0, 367.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001488', 'SYSFLV000068', 'SYSFPR004', 0, 505.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001489', 'SYSFLV000068', 'SYSFPR016', 0, 206.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details (GRADUATION FEE)
--SY 2003 - 2004
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000036)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001490', 'SYSFLV000036', 'SYSFPR029', 0, 495.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001491', 'SYSFLV000036', 'SYSFPR030', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001492', 'SYSFLV000036', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001493', 'SYSFLV000036', 'SYSFPR032', 0, 60.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001494', 'SYSFLV000036', 'SYSFPR049', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')


--ums.school_fee_details (GRADUATION FEE)
--SY  2004 - 2005
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000061)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001495', 'SYSFLV000061', 'SYSFPR029', 0, 544.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001496', 'SYSFLV000061', 'SYSFPR030', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001497', 'SYSFLV000061', 'SYSFPR031', 0, 220.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001498', 'SYSFLV000061', 'SYSFPR032', 0, 66.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001499', 'SYSFLV000061', 'SYSFPR049', 0, 132.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')



--ums.school_fee_details===========================================================================================================================================
--SY 2005 - 2006
--GRADE SCHOOL (CG01)
--NURSERY (YSFLV000070)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001500', 'SYSFLV000070', 'SYSFPR001', 0, 13080.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001501', 'SYSFLV000070', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001502', 'SYSFLV000070', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001503', 'SYSFLV000070', 'SYSFPR004', 0, 464.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001504', 'SYSFLV000070', 'SYSFPR005', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001505', 'SYSFLV000070', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001506', 'SYSFLV000070', 'SYSFPR007', 0, 440.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001507', 'SYSFLV000070', 'SYSFPR008', 0, 271.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001508', 'SYSFLV000070', 'SYSFPR010', 0, 55.21, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001509', 'SYSFLV000070', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001510', 'SYSFLV000070', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001511', 'SYSFLV000070', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001512', 'SYSFLV000070', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001513', 'SYSFLV000070', 'SYSFPR021', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001514', 'SYSFLV000070', 'SYSFPR047', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001515', 'SYSFLV000070', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2005 - 2006
--GRADE SCHOOL (CG01)
--KINDER 1 (YSFLV000071)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001516', 'SYSFLV000071', 'SYSFPR001', 0, 13080.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001517', 'SYSFLV000071', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001518', 'SYSFLV000071', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001519', 'SYSFLV000071', 'SYSFPR004', 0, 464.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001520', 'SYSFLV000071', 'SYSFPR005', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001521', 'SYSFLV000071', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001522', 'SYSFLV000071', 'SYSFPR007', 0, 440.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001523', 'SYSFLV000071', 'SYSFPR008', 0, 271.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001524', 'SYSFLV000071', 'SYSFPR010', 0, 55.21, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001525', 'SYSFLV000071', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001526', 'SYSFLV000071', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001527', 'SYSFLV000071', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001528', 'SYSFLV000071', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001529', 'SYSFLV000071', 'SYSFPR021', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001530', 'SYSFLV000071', 'SYSFPR047', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001531', 'SYSFLV000071', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006
--GRADE SCHOOL (CG01)
--KINDER 2 (SYSFLV000072)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001532', 'SYSFLV000072', 'SYSFPR001', 0, 13080.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001533', 'SYSFLV000072', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001534', 'SYSFLV000072', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001535', 'SYSFLV000072', 'SYSFPR004', 0, 464.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001536', 'SYSFLV000072', 'SYSFPR005', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001537', 'SYSFLV000072', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001538', 'SYSFLV000072', 'SYSFPR007', 0, 440.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001539', 'SYSFLV000072', 'SYSFPR008', 0, 271.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001540', 'SYSFLV000072', 'SYSFPR010', 0, 55.21, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001541', 'SYSFLV000072', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001542', 'SYSFLV000072', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001543', 'SYSFLV000072', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001544', 'SYSFLV000072', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001545', 'SYSFLV000072', 'SYSFPR029', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001546', 'SYSFLV000072', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001547', 'SYSFLV000072', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001548', 'SYSFLV000072', 'SYSFPR021', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001549', 'SYSFLV000072', 'SYSFPR047', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001550', 'SYSFLV000072', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--GRADE SCHOOL (CG01)
--GRADE 1 (SYSFLV000073)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001551', 'SYSFLV000073', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001552', 'SYSFLV000073', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001553', 'SYSFLV000073', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001554', 'SYSFLV000073', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001555', 'SYSFLV000073', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001556', 'SYSFLV000073', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001557', 'SYSFLV000073', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001558', 'SYSFLV000073', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001559', 'SYSFLV000073', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001560', 'SYSFLV000073', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001561', 'SYSFLV000073', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001562', 'SYSFLV000073', 'SYSFPR010', 0, 92.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001563', 'SYSFLV000073', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001564', 'SYSFLV000073', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001565', 'SYSFLV000073', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001566', 'SYSFLV000073', 'SYSFPR024', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001567', 'SYSFLV000073', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001568', 'SYSFLV000073', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001569', 'SYSFLV000073', 'SYSFPR028', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--GRADE SCHOOL (CG01)
--GRADE 2 (SYSFLV000074)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001570', 'SYSFLV000074', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001571', 'SYSFLV000074', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001572', 'SYSFLV000074', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001573', 'SYSFLV000074', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001574', 'SYSFLV000074', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001575', 'SYSFLV000074', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001576', 'SYSFLV000074', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001577', 'SYSFLV000074', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001578', 'SYSFLV000074', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001579', 'SYSFLV000074', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001580', 'SYSFLV000074', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001581', 'SYSFLV000074', 'SYSFPR010', 0, 92.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001582', 'SYSFLV000074', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001583', 'SYSFLV000074', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001584', 'SYSFLV000074', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001585', 'SYSFLV000074', 'SYSFPR024', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001586', 'SYSFLV000074', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001587', 'SYSFLV000074', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001588', 'SYSFLV000074', 'SYSFPR028', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--GRADE SCHOOL (CG01)
--GRADE 3 (SYSFLV000075)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001589', 'SYSFLV000075', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001590', 'SYSFLV000075', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001591', 'SYSFLV000075', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001592', 'SYSFLV000075', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001593', 'SYSFLV000075', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001594', 'SYSFLV000075', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001595', 'SYSFLV000075', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001596', 'SYSFLV000075', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001597', 'SYSFLV000075', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001598', 'SYSFLV000075', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001599', 'SYSFLV000075', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001600', 'SYSFLV000075', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001601', 'SYSFLV000075', 'SYSFPR010', 0, 92.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001602', 'SYSFLV000075', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001603', 'SYSFLV000075', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001604', 'SYSFLV000075', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001605', 'SYSFLV000075', 'SYSFPR024', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001606', 'SYSFLV000075', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001607', 'SYSFLV000075', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001608', 'SYSFLV000075', 'SYSFPR027', 0, 450.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001609', 'SYSFLV000075', 'SYSFPR028', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--GRADE SCHOOL (CG01)
--GRADE 4 (SYSFLV000076)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001610', 'SYSFLV000076', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001611', 'SYSFLV000076', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001612', 'SYSFLV000076', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001613', 'SYSFLV000076', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001614', 'SYSFLV000076', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001615', 'SYSFLV000076', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001616', 'SYSFLV000076', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001617', 'SYSFLV000076', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001618', 'SYSFLV000076', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001619', 'SYSFLV000076', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001620', 'SYSFLV000076', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001621', 'SYSFLV000076', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001622', 'SYSFLV000076', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001623', 'SYSFLV000076', 'SYSFPR010', 0, 92.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001624', 'SYSFLV000076', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001625', 'SYSFLV000076', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001626', 'SYSFLV000076', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001627', 'SYSFLV000076', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001628', 'SYSFLV000076', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001629', 'SYSFLV000076', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001630', 'SYSFLV000076', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001631', 'SYSFLV000076', 'SYSFPR028', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--GRADE SCHOOL (CG01)
--GRADE 5 (SYSFLV000077)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001632', 'SYSFLV000077', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001633', 'SYSFLV000077', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001634', 'SYSFLV000077', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001635', 'SYSFLV000077', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001636', 'SYSFLV000077', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001637', 'SYSFLV000077', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001638', 'SYSFLV000077', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001639', 'SYSFLV000077', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001640', 'SYSFLV000077', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001641', 'SYSFLV000077', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001642', 'SYSFLV000077', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001643', 'SYSFLV000077', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001644', 'SYSFLV000077', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001645', 'SYSFLV000077', 'SYSFPR010', 0, 92.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001646', 'SYSFLV000077', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001647', 'SYSFLV000077', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001648', 'SYSFLV000077', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001649', 'SYSFLV000077', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001650', 'SYSFLV000077', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001651', 'SYSFLV000077', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001652', 'SYSFLV000077', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001653', 'SYSFLV000077', 'SYSFPR028', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--GRADE SCHOOL (CG01)
--GRADE 6 (SYSFLV000078)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001654', 'SYSFLV000078', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001655', 'SYSFLV000078', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001656', 'SYSFLV000078', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001657', 'SYSFLV000078', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001658', 'SYSFLV000078', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001659', 'SYSFLV000078', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001660', 'SYSFLV000078', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001661', 'SYSFLV000078', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001662', 'SYSFLV000078', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001663', 'SYSFLV000078', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001664', 'SYSFLV000078', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001665', 'SYSFLV000078', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001666', 'SYSFLV000078', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001667', 'SYSFLV000078', 'SYSFPR010', 0, 92.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001668', 'SYSFLV000078', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001669', 'SYSFLV000078', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001670', 'SYSFLV000078', 'SYSFPR019', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001671', 'SYSFLV000078', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001672', 'SYSFLV000078', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001673', 'SYSFLV000078', 'SYSFPR025', 0, 80.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001674', 'SYSFLV000078', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001675', 'SYSFLV000078', 'SYSFPR028', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001676', 'SYSFLV000078', 'SYSFPR029', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001677', 'SYSFLV000078', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001678', 'SYSFLV000078', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001679', 'SYSFLV000078', 'SYSFPR032', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--HIGH SCHOOL (CG02)
--1ST YEAR (SYSFLV000079)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001680', 'SYSFLV000079', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001681', 'SYSFLV000079', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001682', 'SYSFLV000079', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001683', 'SYSFLV000079', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001684', 'SYSFLV000079', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001685', 'SYSFLV000079', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001686', 'SYSFLV000079', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001687', 'SYSFLV000079', 'SYSFPR008', 0, 290.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001688', 'SYSFLV000079', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001689', 'SYSFLV000079', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001690', 'SYSFLV000079', 'SYSFPR014', 0, 2643.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001691', 'SYSFLV000079', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001692', 'SYSFLV000079', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001693', 'SYSFLV000079', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001694', 'SYSFLV000079', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001695', 'SYSFLV000079', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001696', 'SYSFLV000079', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001697', 'SYSFLV000079', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001698', 'SYSFLV000079', 'SYSFPR021', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001699', 'SYSFLV000079', 'SYSFPR047', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001700', 'SYSFLV000079', 'SYSFPR025', 0, 190.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001701', 'SYSFLV000079', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001702', 'SYSFLV000079', 'SYSFPR034', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001703', 'SYSFLV000079', 'SYSFPR026', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--HIGH SCHOOL (CG02)
--2ND YEAR (SYSFLV000080)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001704', 'SYSFLV000080', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001705', 'SYSFLV000080', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001706', 'SYSFLV000080', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001707', 'SYSFLV000080', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001708', 'SYSFLV000080', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001709', 'SYSFLV000080', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001710', 'SYSFLV000080', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001711', 'SYSFLV000080', 'SYSFPR008', 0, 290.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001712', 'SYSFLV000080', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001713', 'SYSFLV000080', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001714', 'SYSFLV000080', 'SYSFPR014', 0, 2643.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001715', 'SYSFLV000080', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001716', 'SYSFLV000080', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001717', 'SYSFLV000080', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001718', 'SYSFLV000080', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001719', 'SYSFLV000080', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001720', 'SYSFLV000080', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001721', 'SYSFLV000080', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001722', 'SYSFLV000080', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001723', 'SYSFLV000080', 'SYSFPR034', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001724', 'SYSFLV000080', 'SYSFPR026', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--HIGH SCHOOL (CG02)
--3RD YEAR (SYSFLV000081)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001725', 'SYSFLV000081', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001726', 'SYSFLV000081', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001727', 'SYSFLV000081', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001728', 'SYSFLV000081', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001729', 'SYSFLV000081', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001730', 'SYSFLV000081', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001731', 'SYSFLV000081', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001732', 'SYSFLV000081', 'SYSFPR008', 0, 308.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001733', 'SYSFLV000081', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001734', 'SYSFLV000081', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001735', 'SYSFLV000081', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001736', 'SYSFLV000081', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001737', 'SYSFLV000081', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001738', 'SYSFLV000081', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001739', 'SYSFLV000081', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001740', 'SYSFLV000081', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001741', 'SYSFLV000081', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001742', 'SYSFLV000081', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001743', 'SYSFLV000081', 'SYSFPR033', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001744', 'SYSFLV000081', 'SYSFPR034', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001745', 'SYSFLV000081', 'SYSFPR026', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2005 - 2006
--HIGH SCHOOL (CG02)
--4TH YEAR (SYSFLV000082)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001746', 'SYSFLV000082', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001747', 'SYSFLV000082', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001748', 'SYSFLV000082', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001749', 'SYSFLV000082', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001750', 'SYSFLV000082', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001751', 'SYSFLV000082', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001752', 'SYSFLV000082', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001753', 'SYSFLV000082', 'SYSFPR008', 0, 308.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001754', 'SYSFLV000082', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001755', 'SYSFLV000082', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001756', 'SYSFLV000082', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001757', 'SYSFLV000082', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001758', 'SYSFLV000082', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001759', 'SYSFLV000082', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001760', 'SYSFLV000082', 'SYSFPR017', 0, 210.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001761', 'SYSFLV000082', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001762', 'SYSFLV000082', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001763', 'SYSFLV000082', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001764', 'SYSFLV000082', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001765', 'SYSFLV000082', 'SYSFPR034', 0, 40.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001766', 'SYSFLV000082', 'SYSFPR026', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001767', 'SYSFLV000082', 'SYSFPR029', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001768', 'SYSFLV000082', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001769', 'SYSFLV000082', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001770', 'SYSFLV000082', 'SYSFPR032', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001771', 'SYSFLV000082', 'SYSFPR049', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006
--COLLEGE SCHOOL (CG03)
--1ST YEAR (SYSFLV000083)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001772', 'SYSFLV000083', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001773', 'SYSFLV000083', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001774', 'SYSFLV000083', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001775', 'SYSFLV000083', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001776', 'SYSFLV000083', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001777', 'SYSFLV000083', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001778', 'SYSFLV000083', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001779', 'SYSFLV000083', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001780', 'SYSFLV000083', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001781', 'SYSFLV000083', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001782', 'SYSFLV000083', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001783', 'SYSFLV000083', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001784', 'SYSFLV000083', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001785', 'SYSFLV000083', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001786', 'SYSFLV000083', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001787', 'SYSFLV000083', 'SYSFPR035', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001788', 'SYSFLV000083', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001789', 'SYSFLV000083', 'SYSFPR022', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001790', 'SYSFLV000083', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001791', 'SYSFLV000083', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001792', 'SYSFLV000083', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001793', 'SYSFLV000083', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001794', 'SYSFLV000083', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001795', 'SYSFLV000083', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001796', 'SYSFLV000083', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001797', 'SYSFLV000083', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000084)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001798', 'SYSFLV000084', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001799', 'SYSFLV000084', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001800', 'SYSFLV000084', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001801', 'SYSFLV000084', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001802', 'SYSFLV000084', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001803', 'SYSFLV000084', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001804', 'SYSFLV000084', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001805', 'SYSFLV000084', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001806', 'SYSFLV000084', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001807', 'SYSFLV000084', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001808', 'SYSFLV000084', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001809', 'SYSFLV000084', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001810', 'SYSFLV000084', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001811', 'SYSFLV000084', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001812', 'SYSFLV000084', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001813', 'SYSFLV000084', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001814', 'SYSFLV000084', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001815', 'SYSFLV000084', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001816', 'SYSFLV000084', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001817', 'SYSFLV000084', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001818', 'SYSFLV000084', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001819', 'SYSFLV000084', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006
--COLLEGE SCHOOL (CG03)
--3RD YEAR (SYSFLV000085)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001820', 'SYSFLV000085', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001821', 'SYSFLV000085', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001822', 'SYSFLV000085', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001823', 'SYSFLV000085', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001824', 'SYSFLV000085', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001825', 'SYSFLV000085', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001826', 'SYSFLV000085', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001827', 'SYSFLV000085', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001828', 'SYSFLV000085', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001829', 'SYSFLV000085', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001830', 'SYSFLV000085', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001831', 'SYSFLV000085', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001832', 'SYSFLV000085', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001833', 'SYSFLV000085', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001834', 'SYSFLV000085', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001835', 'SYSFLV000085', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001836', 'SYSFLV000085', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001837', 'SYSFLV000085', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001838', 'SYSFLV000085', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001839', 'SYSFLV000085', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001840', 'SYSFLV000085', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001841', 'SYSFLV000085', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000086)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001842', 'SYSFLV000086', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001843', 'SYSFLV000086', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001844', 'SYSFLV000086', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001845', 'SYSFLV000086', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001846', 'SYSFLV000086', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001847', 'SYSFLV000086', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001848', 'SYSFLV000086', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001849', 'SYSFLV000086', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001850', 'SYSFLV000086', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001851', 'SYSFLV000086', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001852', 'SYSFLV000086', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001853', 'SYSFLV000086', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001854', 'SYSFLV000086', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001855', 'SYSFLV000086', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001856', 'SYSFLV000086', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001857', 'SYSFLV000086', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001858', 'SYSFLV000086', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001859', 'SYSFLV000086', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001860', 'SYSFLV000086', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001861', 'SYSFLV000086', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001862', 'SYSFLV000086', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001863', 'SYSFLV000086', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001864', 'SYSFLV000086', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001865', 'SYSFLV000086', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001866', 'SYSFLV000086', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001867', 'SYSFLV000086', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001868', 'SYSFLV000086', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2005 - 2006
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000087)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001869', 'SYSFLV000087', 'SYSFPR001', 0, 478.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001870', 'SYSFLV000087', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001871', 'SYSFLV000087', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001872', 'SYSFLV000087', 'SYSFPR016', 0, 237.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2005 - 2006
--Graduate School / Doctorate (CG04)
--Doctorate (SYSFLV000088)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001873', 'SYSFLV000088', 'SYSFPR001', 0, 535.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001874', 'SYSFLV000088', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001875', 'SYSFLV000088', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001876', 'SYSFLV000088', 'SYSFPR016', 0, 237.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006 SUMMER
--COLLEGE SCHOOL (CG03)
--1ST YEAR (SYSFLV000089)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001877', 'SYSFLV000089', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001878', 'SYSFLV000089', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001879', 'SYSFLV000089', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001880', 'SYSFLV000089', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001881', 'SYSFLV000089', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001882', 'SYSFLV000089', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001883', 'SYSFLV000089', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001884', 'SYSFLV000089', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001885', 'SYSFLV000089', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001886', 'SYSFLV000089', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001887', 'SYSFLV000089', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001888', 'SYSFLV000089', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001889', 'SYSFLV000089', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001890', 'SYSFLV000089', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001891', 'SYSFLV000089', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001892', 'SYSFLV000089', 'SYSFPR035', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001893', 'SYSFLV000089', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001894', 'SYSFLV000089', 'SYSFPR022', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001895', 'SYSFLV000089', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001896', 'SYSFLV000089', 'SYSFPR025', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001897', 'SYSFLV000089', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001898', 'SYSFLV000089', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001899', 'SYSFLV000089', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001900', 'SYSFLV000089', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001901', 'SYSFLV000089', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001902', 'SYSFLV000089', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006 SUMMER
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000090)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001903', 'SYSFLV000090', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001904', 'SYSFLV000090', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001905', 'SYSFLV000090', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001906', 'SYSFLV000090', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001907', 'SYSFLV000090', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001908', 'SYSFLV000090', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001909', 'SYSFLV000090', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001910', 'SYSFLV000090', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001911', 'SYSFLV000090', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001912', 'SYSFLV000090', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001913', 'SYSFLV000090', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001914', 'SYSFLV000090', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001915', 'SYSFLV000090', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001916', 'SYSFLV000090', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001917', 'SYSFLV000090', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001918', 'SYSFLV000090', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001919', 'SYSFLV000090', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001920', 'SYSFLV000090', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001921', 'SYSFLV000090', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001922', 'SYSFLV000090', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001923', 'SYSFLV000090', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001924', 'SYSFLV000090', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006 SUMMER
--COLLEGE SCHOOL (CG03)
--3RD YEAR (SYSFLV000091)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001925', 'SYSFLV000091', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001926', 'SYSFLV000091', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001927', 'SYSFLV000091', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001928', 'SYSFLV000091', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001929', 'SYSFLV000091', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001930', 'SYSFLV000091', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001931', 'SYSFLV000091', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001932', 'SYSFLV000091', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001933', 'SYSFLV000091', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001934', 'SYSFLV000091', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001935', 'SYSFLV000091', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001936', 'SYSFLV000091', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001937', 'SYSFLV000091', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001938', 'SYSFLV000091', 'SYSFPR019', 0, 350.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001939', 'SYSFLV000091', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001940', 'SYSFLV000091', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001941', 'SYSFLV000091', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001942', 'SYSFLV000091', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001943', 'SYSFLV000091', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001944', 'SYSFLV000091', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001945', 'SYSFLV000091', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001946', 'SYSFLV000091', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006 SUMMER
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000092)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001947', 'SYSFLV000092', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001948', 'SYSFLV000092', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001949', 'SYSFLV000092', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001950', 'SYSFLV000092', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001951', 'SYSFLV000092', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001952', 'SYSFLV000092', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001953', 'SYSFLV000092', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001954', 'SYSFLV000092', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001955', 'SYSFLV000092', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001956', 'SYSFLV000092', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001957', 'SYSFLV000092', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001958', 'SYSFLV000092', 'SYSFPR017', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001959', 'SYSFLV000092', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001960', 'SYSFLV000092', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001961', 'SYSFLV000092', 'SYSFPR020', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001962', 'SYSFLV000092', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001963', 'SYSFLV000092', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001964', 'SYSFLV000092', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001965', 'SYSFLV000092', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001966', 'SYSFLV000092', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001967', 'SYSFLV000092', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001968', 'SYSFLV000092', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2005 - 2006 SUMMER
--Graduate School / Doctorate (CG04)
--Graduate School (SYSFLV000093)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001969', 'SYSFLV000093', 'SYSFPR001', 0, 478.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001970', 'SYSFLV000093', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001971', 'SYSFLV000093', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001972', 'SYSFLV000093', 'SYSFPR016', 0, 237.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2005 - 2006 SUMMER
--Graduate School / Doctorate (CG04)
--Doctorate (SYSFLV000094)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001973', 'SYSFLV000094', 'SYSFPR001', 0, 535.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
	
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001974', 'SYSFLV000094', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001975', 'SYSFLV000094', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000001976', 'SYSFLV000094', 'SYSFPR016', 0, 237.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details ========================================================================================================
--SY 20062007
--GRADE SCHOOL (CG01)
--NURSERY (SYSFLV000095)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001977', 'SYSFLV000095', 'SYSFPR001', 0, 13995.74, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001978', 'SYSFLV000095', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001979', 'SYSFLV000095', 'SYSFPR003', 0, 197.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001980', 'SYSFLV000095', 'SYSFPR004', 0, 497.25, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001981', 'SYSFLV000095', 'SYSFPR005', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001982', 'SYSFLV000095', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001983', 'SYSFLV000095', 'SYSFPR007', 0, 470.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001984', 'SYSFLV000095', 'SYSFPR008', 0, 290.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001985', 'SYSFLV000095', 'SYSFPR010', 0, 59.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001986', 'SYSFLV000095', 'SYSFPR011', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001987', 'SYSFLV000095', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001988', 'SYSFLV000095', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001989', 'SYSFLV000095', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001990', 'SYSFLV000095', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001991', 'SYSFLV000095', 'SYSFPR047', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001992', 'SYSFLV000095', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--KINDER 1 (SYSFLV000096)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001993', 'SYSFLV000096', 'SYSFPR001', 0, 13995.74, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001994', 'SYSFLV000096', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001995', 'SYSFLV000096', 'SYSFPR003', 0, 197.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001996', 'SYSFLV000096', 'SYSFPR004', 0, 497.25, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001997', 'SYSFLV000096', 'SYSFPR005', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001998', 'SYSFLV000096', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000001999', 'SYSFLV000096', 'SYSFPR007', 0, 470.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002000', 'SYSFLV000096', 'SYSFPR008', 0, 290.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002001', 'SYSFLV000096', 'SYSFPR010', 0, 59.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002002', 'SYSFLV000096', 'SYSFPR011', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002003', 'SYSFLV000096', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002004', 'SYSFLV000096', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002005', 'SYSFLV000096', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002006', 'SYSFLV000096', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002007', 'SYSFLV000096', 'SYSFPR047', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002008', 'SYSFLV000096', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--KINDER 2 (SYSFLV000097)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002009', 'SYSFLV000097', 'SYSFPR001', 0, 13995.74, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002010', 'SYSFLV000097', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002011', 'SYSFLV000097', 'SYSFPR003', 0, 197.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002012', 'SYSFLV000097', 'SYSFPR004', 0, 497.25, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002013', 'SYSFLV000097', 'SYSFPR005', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002014', 'SYSFLV000097', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002015', 'SYSFLV000097', 'SYSFPR007', 0, 470.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002016', 'SYSFLV000097', 'SYSFPR008', 0, 290.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002017', 'SYSFLV000097', 'SYSFPR010', 0, 59.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002018', 'SYSFLV000097', 'SYSFPR011', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002019', 'SYSFLV000097', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002020', 'SYSFLV000097', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002021', 'SYSFLV000097', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002022', 'SYSFLV000097', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002023', 'SYSFLV000097', 'SYSFPR047', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002024', 'SYSFLV000097', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002025', 'SYSFLV000097', 'SYSFPR029', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002026', 'SYSFLV000097', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002027', 'SYSFLV000097', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--GRADE 1 (SYSFLV000098)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002028', 'SYSFLV000098', 'SYSFPR001', 0, 14753.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002029', 'SYSFLV000098', 'SYSFPR002', 0, 339.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002030', 'SYSFLV000098', 'SYSFPR003', 0, 197.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002031', 'SYSFLV000098', 'SYSFPR011', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002032', 'SYSFLV000098', 'SYSFPR004', 0, 457.67, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002033', 'SYSFLV000098', 'SYSFPR005', 0, 131.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002034', 'SYSFLV000098', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002035', 'SYSFLV000098', 'SYSFPR007', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002036', 'SYSFLV000098', 'SYSFPR008', 0, 269.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002037', 'SYSFLV000098', 'SYSFPR012', 0, 34.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002038', 'SYSFLV000098', 'SYSFPR013', 0, 39.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002039', 'SYSFLV000098', 'SYSFPR010', 0, 102.74, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')


INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002040', 'SYSFLV000098', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002041', 'SYSFLV000098', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002042', 'SYSFLV000098', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002043', 'SYSFLV000098', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002044', 'SYSFLV000098', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002045', 'SYSFLV000098', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--GRADE 2 (SYSFLV000099)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002046', 'SYSFLV000099', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002047', 'SYSFLV000099', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002048', 'SYSFLV000099', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002049', 'SYSFLV000099', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002050', 'SYSFLV000099', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002051', 'SYSFLV000099', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002052', 'SYSFLV000099', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002053', 'SYSFLV000099', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002054', 'SYSFLV000099', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002055', 'SYSFLV000099', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002056', 'SYSFLV000099', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002057', 'SYSFLV000099', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')


INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002058', 'SYSFLV000099', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002059', 'SYSFLV000099', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002060', 'SYSFLV000099', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002061', 'SYSFLV000099', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002062', 'SYSFLV000099', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002063', 'SYSFLV000099', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--GRADE 3 (SYSFLV000100)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002064', 'SYSFLV000100', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002065', 'SYSFLV000100', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002066', 'SYSFLV000100', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002067', 'SYSFLV000100', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002068', 'SYSFLV000100', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002069', 'SYSFLV000100', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002070', 'SYSFLV000100', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002071', 'SYSFLV000100', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002072', 'SYSFLV000100', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002073', 'SYSFLV000100', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002074', 'SYSFLV000100', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002075', 'SYSFLV000100', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002076', 'SYSFLV000100', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002077', 'SYSFLV000100', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002078', 'SYSFLV000100', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002079', 'SYSFLV000100', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002080', 'SYSFLV000100', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002081', 'SYSFLV000100', 'SYSFPR027', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002082', 'SYSFLV000100', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002083', 'SYSFLV000100', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--GRADE 4 (SYSFLV000101)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002084', 'SYSFLV000101', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002085', 'SYSFLV000101', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002086', 'SYSFLV000101', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002087', 'SYSFLV000101', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002088', 'SYSFLV000101', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002089', 'SYSFLV000101', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002090', 'SYSFLV000101', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002091', 'SYSFLV000101', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002092', 'SYSFLV000101', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002093', 'SYSFLV000101', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002094', 'SYSFLV000101', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002095', 'SYSFLV000101', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002096', 'SYSFLV000101', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002097', 'SYSFLV000101', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002098', 'SYSFLV000101', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002099', 'SYSFLV000101', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002100', 'SYSFLV000101', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002101', 'SYSFLV000101', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002102', 'SYSFLV000101', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002103', 'SYSFLV000101', 'SYSFPR026', 0, 880.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002104', 'SYSFLV000101', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--GRADE 5 (SYSFLV000102)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002105', 'SYSFLV000102', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002106', 'SYSFLV000102', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002107', 'SYSFLV000102', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002108', 'SYSFLV000102', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002109', 'SYSFLV000102', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002110', 'SYSFLV000102', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002111', 'SYSFLV000102', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002112', 'SYSFLV000102', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002113', 'SYSFLV000102', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002114', 'SYSFLV000102', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002115', 'SYSFLV000102', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002116', 'SYSFLV000102', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002117', 'SYSFLV000102', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002118', 'SYSFLV000102', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002119', 'SYSFLV000102', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002120', 'SYSFLV000102', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002121', 'SYSFLV000102', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002122', 'SYSFLV000102', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002123', 'SYSFLV000102', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002124', 'SYSFLV000102', 'SYSFPR026', 0, 880.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002125', 'SYSFLV000102', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADE SCHOOL (CG01)
--GRADE 6 (SYSFLV000103)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002126', 'SYSFLV000103', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002127', 'SYSFLV000103', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002128', 'SYSFLV000103', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002129', 'SYSFLV000103', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002130', 'SYSFLV000103', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002131', 'SYSFLV000103', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002132', 'SYSFLV000103', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002133', 'SYSFLV000103', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002134', 'SYSFLV000103', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002135', 'SYSFLV000103', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002136', 'SYSFLV000103', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002137', 'SYSFLV000103', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002138', 'SYSFLV000103', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002139', 'SYSFLV000103', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002140', 'SYSFLV000103', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002141', 'SYSFLV000103', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002142', 'SYSFLV000103', 'SYSFPR019', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002143', 'SYSFLV000103', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002144', 'SYSFLV000103', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002145', 'SYSFLV000103', 'SYSFPR026', 0, 880.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002146', 'SYSFLV000103', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002147', 'SYSFLV000103', 'SYSFPR029', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002148', 'SYSFLV000103', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002149', 'SYSFLV000103', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002150', 'SYSFLV000103', 'SYSFPR032', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--HIGH SCHOOL (CG02)
--1ST YEAR (SYSFLV000104)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002151', 'SYSFLV000104', 'SYSFPR001', 0, 14753.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002152', 'SYSFLV000104', 'SYSFPR002', 0, 339.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002153', 'SYSFLV000104', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002154', 'SYSFLV000104', 'SYSFPR011', 0, 131.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002155', 'SYSFLV000104', 'SYSFPR004', 0, 366.25, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002156', 'SYSFLV000104', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002157', 'SYSFLV000104', 'SYSFPR012', 0, 98.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002158', 'SYSFLV000104', 'SYSFPR008', 0, 310.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002159', 'SYSFLV000104', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002160', 'SYSFLV000104', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002161', 'SYSFLV000104', 'SYSFPR014', 0, 2828.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002162', 'SYSFLV000104', 'SYSFPR007', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002163', 'SYSFLV000104', 'SYSFPR013', 0, 263.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002164', 'SYSFLV000104', 'SYSFPR015', 0, 622.63, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002165', 'SYSFLV000104', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002166', 'SYSFLV000104', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002167', 'SYSFLV000104', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002168', 'SYSFLV000104', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002169', 'SYSFLV000104', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002170', 'SYSFLV000104', 'SYSFPR047', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002171', 'SYSFLV000104', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002172', 'SYSFLV000104', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002173', 'SYSFLV000104', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002174', 'SYSFLV000104', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--HIGH SCHOOL (CG02)
--2ND YEAR (SYSFLV000105)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002175', 'SYSFLV000105', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002176', 'SYSFLV000105', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002177', 'SYSFLV000105', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002178', 'SYSFLV000105', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002179', 'SYSFLV000105', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002180', 'SYSFLV000105', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002181', 'SYSFLV000105', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002182', 'SYSFLV000105', 'SYSFPR008', 0, 290.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002183', 'SYSFLV000105', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002184', 'SYSFLV000105', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002185', 'SYSFLV000105', 'SYSFPR014', 0, 2643.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002186', 'SYSFLV000105', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002187', 'SYSFLV000105', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002188', 'SYSFLV000105', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002189', 'SYSFLV000105', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002190', 'SYSFLV000105', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002191', 'SYSFLV000105', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002192', 'SYSFLV000105', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002193', 'SYSFLV000105', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002194', 'SYSFLV000105', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--HIGH SCHOOL (CG02)
--3RD YEAR (SYSFLV000106)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002195', 'SYSFLV000106', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002196', 'SYSFLV000106', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002197', 'SYSFLV000106', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002198', 'SYSFLV000106', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002199', 'SYSFLV000106', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002200', 'SYSFLV000106', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002201', 'SYSFLV000106', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002202', 'SYSFLV000106', 'SYSFPR008', 0, 308.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002203', 'SYSFLV000106', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002204', 'SYSFLV000106', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002205', 'SYSFLV000106', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002206', 'SYSFLV000106', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002207', 'SYSFLV000106', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002208', 'SYSFLV000106', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002209', 'SYSFLV000106', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002210', 'SYSFLV000106', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002211', 'SYSFLV000106', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002212', 'SYSFLV000106', 'SYSFPR033', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002213', 'SYSFLV000106', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002214', 'SYSFLV000106', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--HIGH SCHOOL (CG02)
--4TH YEAR (SYSFLV000107)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002215', 'SYSFLV000107', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002216', 'SYSFLV000107', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002217', 'SYSFLV000107', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002218', 'SYSFLV000107', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002219', 'SYSFLV000107', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002220', 'SYSFLV000107', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002221', 'SYSFLV000107', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002222', 'SYSFLV000107', 'SYSFPR008', 0, 308.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002223', 'SYSFLV000107', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002224', 'SYSFLV000107', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002225', 'SYSFLV000107', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002226', 'SYSFLV000107', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002227', 'SYSFLV000107', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002228', 'SYSFLV000107', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002229', 'SYSFLV000107', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002230', 'SYSFLV000107', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002231', 'SYSFLV000107', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002232', 'SYSFLV000107', 'SYSFPR033', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002233', 'SYSFLV000107', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002234', 'SYSFLV000107', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002235', 'SYSFLV000107', 'SYSFPR029', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002236', 'SYSFLV000107', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002237', 'SYSFLV000107', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002238', 'SYSFLV000107', 'SYSFPR032', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002239', 'SYSFLV000107', 'SYSFPR049', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--COLLEGE (CG03)
--1ST YEAR (SYSFLV000108)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002240', 'SYSFLV000108', 'SYSFPR001', 0, 369.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002241', 'SYSFLV000108', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002242', 'SYSFLV000108', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002243', 'SYSFLV000108', 'SYSFPR011', 0, 122.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002244', 'SYSFLV000108', 'SYSFPR004', 0, 546.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002245', 'SYSFLV000108', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002246', 'SYSFLV000108', 'SYSFPR012', 0, 106.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002247', 'SYSFLV000108', 'SYSFPR008', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002248', 'SYSFLV000108', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002249', 'SYSFLV000108', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002250', 'SYSFLV000108', 'SYSFPR007', 0, 301.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002251', 'SYSFLV000108', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002252', 'SYSFLV000108', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002253', 'SYSFLV000108', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002254', 'SYSFLV000108', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002255', 'SYSFLV000108', 'SYSFPR035', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002256', 'SYSFLV000108', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002257', 'SYSFLV000108', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002258', 'SYSFLV000108', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002259', 'SYSFLV000108', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002260', 'SYSFLV000108', 'SYSFPR037', 0, 715.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002261', 'SYSFLV000108', 'SYSFPR050', 0, 988.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002262', 'SYSFLV000108', 'SYSFPR051', 0, 2966.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002263', 'SYSFLV000108', 'SYSFPR042', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002264', 'SYSFLV000108', 'SYSFPR043', 0, 753.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002265', 'SYSFLV000108', 'SYSFPR044', 0, 282.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000109)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002266', 'SYSFLV000109', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002267', 'SYSFLV000109', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002268', 'SYSFLV000109', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002269', 'SYSFLV000109', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002270', 'SYSFLV000109', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002271', 'SYSFLV000109', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002272', 'SYSFLV000109', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002273', 'SYSFLV000109', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002274', 'SYSFLV000109', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002275', 'SYSFLV000109', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002276', 'SYSFLV000109', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002277', 'SYSFLV000109', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002278', 'SYSFLV000109', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002279', 'SYSFLV000109', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002280', 'SYSFLV000109', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002281', 'SYSFLV000109', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002282', 'SYSFLV000109', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002283', 'SYSFLV000109', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002284', 'SYSFLV000109', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002285', 'SYSFLV000109', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002286', 'SYSFLV000109', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--COLLEGE (CG03)
--3RD YEAR (SYSFLV000110)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002287', 'SYSFLV000110', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002288', 'SYSFLV000110', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002289', 'SYSFLV000110', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002290', 'SYSFLV000110', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002291', 'SYSFLV000110', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002292', 'SYSFLV000110', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002293', 'SYSFLV000110', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002294', 'SYSFLV000110', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002295', 'SYSFLV000110', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002296', 'SYSFLV000110', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002297', 'SYSFLV000110', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002298', 'SYSFLV000110', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002299', 'SYSFLV000110', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002300', 'SYSFLV000110', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002301', 'SYSFLV000110', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002302', 'SYSFLV000110', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002303', 'SYSFLV000110', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002304', 'SYSFLV000110', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002305', 'SYSFLV000110', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002306', 'SYSFLV000110', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002307', 'SYSFLV000110', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--COLLEGE (CG03)
--4TH YEAR (SYSFLV000111)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002308', 'SYSFLV000111', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002309', 'SYSFLV000111', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002310', 'SYSFLV000111', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002311', 'SYSFLV000111', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002312', 'SYSFLV000111', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002313', 'SYSFLV000111', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002314', 'SYSFLV000111', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002315', 'SYSFLV000111', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002316', 'SYSFLV000111', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002317', 'SYSFLV000111', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002318', 'SYSFLV000111', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002319', 'SYSFLV000111', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002320', 'SYSFLV000111', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002321', 'SYSFLV000111', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002322', 'SYSFLV000111', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002323', 'SYSFLV000111', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002324', 'SYSFLV000111', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002325', 'SYSFLV000111', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002326', 'SYSFLV000111', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002327', 'SYSFLV000111', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002328', 'SYSFLV000111', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002329', 'SYSFLV000111', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002330', 'SYSFLV000111', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002331', 'SYSFLV000111', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002332', 'SYSFLV000111', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002333', 'SYSFLV000111', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADUATE SCHOOL (CG04)
--MASTERAL (SYSFLV000112)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002334', 'SYSFLV000112', 'SYSFPR001', 0, 478.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002335', 'SYSFLV000112', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002336', 'SYSFLV000112', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002337', 'SYSFLV000112', 'SYSFPR016', 0, 254.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007
--GRADUATE SCHOOL (CG04)
--DOCTORATE (SYSFLV000113)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002338', 'SYSFLV000113', 'SYSFPR001', 0, 535.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002339', 'SYSFLV000113', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002340', 'SYSFLV000113', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002341', 'SYSFLV000113', 'SYSFPR016', 0, 254.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--SY 20062007 (SUMMER)
--COLLEGE (CG03)
--1ST YEAR (SYSFLV000114)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002342', 'SYSFLV000114', 'SYSFPR001', 0, 369.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002343', 'SYSFLV000114', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002344', 'SYSFLV000114', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002345', 'SYSFLV000114', 'SYSFPR011', 0, 122.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002346', 'SYSFLV000114', 'SYSFPR004', 0, 546.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002347', 'SYSFLV000114', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002348', 'SYSFLV000114', 'SYSFPR012', 0, 106.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002349', 'SYSFLV000114', 'SYSFPR008', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002350', 'SYSFLV000114', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002351', 'SYSFLV000114', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002352', 'SYSFLV000114', 'SYSFPR007', 0, 301.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002353', 'SYSFLV000114', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002354', 'SYSFLV000114', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002355', 'SYSFLV000114', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002356', 'SYSFLV000114', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002357', 'SYSFLV000114', 'SYSFPR035', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002358', 'SYSFLV000114', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002359', 'SYSFLV000114', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002360', 'SYSFLV000114', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002361', 'SYSFLV000114', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002362', 'SYSFLV000114', 'SYSFPR037', 0, 715.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002363', 'SYSFLV000114', 'SYSFPR050', 0, 988.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002364', 'SYSFLV000114', 'SYSFPR051', 0, 2966.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002365', 'SYSFLV000114', 'SYSFPR042', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002366', 'SYSFLV000114', 'SYSFPR043', 0, 753.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002367', 'SYSFLV000114', 'SYSFPR044', 0, 282.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007 (SUMMER)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000115)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002368', 'SYSFLV000115', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002369', 'SYSFLV000115', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002370', 'SYSFLV000115', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002371', 'SYSFLV000115', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002372', 'SYSFLV000115', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002373', 'SYSFLV000115', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002374', 'SYSFLV000115', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002375', 'SYSFLV000115', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002376', 'SYSFLV000115', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002377', 'SYSFLV000115', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002378', 'SYSFLV000115', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002379', 'SYSFLV000115', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002380', 'SYSFLV000115', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002381', 'SYSFLV000115', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002382', 'SYSFLV000115', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002383', 'SYSFLV000115', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002384', 'SYSFLV000115', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002385', 'SYSFLV000115', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002386', 'SYSFLV000115', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002387', 'SYSFLV000115', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002388', 'SYSFLV000115', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007 (SUMMER)
--COLLEGE (CG03)
--3RD YEAR (SYSFLV000116)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002389', 'SYSFLV000116', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002390', 'SYSFLV000116', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002391', 'SYSFLV000116', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002392', 'SYSFLV000116', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002393', 'SYSFLV000116', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002394', 'SYSFLV000116', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002395', 'SYSFLV000116', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002396', 'SYSFLV000116', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002397', 'SYSFLV000116', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002398', 'SYSFLV000116', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002399', 'SYSFLV000116', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002400', 'SYSFLV000116', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002401', 'SYSFLV000116', 'SYSFPR019', 0, 400.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002402', 'SYSFLV000116', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002403', 'SYSFLV000116', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002404', 'SYSFLV000116', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002405', 'SYSFLV000116', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002406', 'SYSFLV000116', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002407', 'SYSFLV000116', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002408', 'SYSFLV000116', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002409', 'SYSFLV000116', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007 (SUMMER)
--COLLEGE (CG03)
--4TH YEAR (SYSFLV000117)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002410', 'SYSFLV000117', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002411', 'SYSFLV000117', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002412', 'SYSFLV000117', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002413', 'SYSFLV000117', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002414', 'SYSFLV000117', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002415', 'SYSFLV000117', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002416', 'SYSFLV000117', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002417', 'SYSFLV000117', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002418', 'SYSFLV000117', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002419', 'SYSFLV000117', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002420', 'SYSFLV000117', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002421', 'SYSFLV000117', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002422', 'SYSFLV000117', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002423', 'SYSFLV000117', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002424', 'SYSFLV000117', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002425', 'SYSFLV000117', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002426', 'SYSFLV000117', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002427', 'SYSFLV000117', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002428', 'SYSFLV000117', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002429', 'SYSFLV000117', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002430', 'SYSFLV000117', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002431', 'SYSFLV000117', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002432', 'SYSFLV000117', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002433', 'SYSFLV000117', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002434', 'SYSFLV000117', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002435', 'SYSFLV000117', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007 (SUMMER)
--GRADUATE SCHOOL (CG04)
--MASTERAL (SYSFLV000118)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002436', 'SYSFLV000118', 'SYSFPR001', 0, 478.59, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002437', 'SYSFLV000118', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002438', 'SYSFLV000118', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002439', 'SYSFLV000118', 'SYSFPR016', 0, 254.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007 (SUMMER)
--GRADUATE SCHOOL (CG04)
--DOCTORATE (SYSFLV000119)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002440', 'SYSFLV000119', 'SYSFPR001', 0, 535.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002441', 'SYSFLV000119', 'SYSFPR002', 0, 452.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002442', 'SYSFLV000119', 'SYSFPR004', 0, 621.54, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002443', 'SYSFLV000119', 'SYSFPR016', 0, 254.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details ========================================================================================================
--SY 20072008
--GRADE SCHOOL (CG01)
--NURSERY (SYSFLV000120)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002444', 'SYSFLV000120', 'SYSFPR001', 0, 14975.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002445', 'SYSFLV000120', 'SYSFPR002', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002446', 'SYSFLV000120', 'SYSFPR003', 0, 211.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002447', 'SYSFLV000120', 'SYSFPR004', 0, 532.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002448', 'SYSFLV000120', 'SYSFPR005', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002449', 'SYSFLV000120', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002450', 'SYSFLV000120', 'SYSFPR007', 0, 503.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002451', 'SYSFLV000120', 'SYSFPR008', 0, 310.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002452', 'SYSFLV000120', 'SYSFPR009', 0, 63.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002453', 'SYSFLV000120', 'SYSFPR011', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002454', 'SYSFLV000120', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002455', 'SYSFLV000120', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002456', 'SYSFLV000120', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002457', 'SYSFLV000120', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002458', 'SYSFLV000120', 'SYSFPR047', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002459', 'SYSFLV000120', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--KINDER 1 (SYSFLV000121)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002460', 'SYSFLV000121', 'SYSFPR001', 0, 14975.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002461', 'SYSFLV000121', 'SYSFPR002', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002462', 'SYSFLV000121', 'SYSFPR003', 0, 211.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002463', 'SYSFLV000121', 'SYSFPR004', 0, 532.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002464', 'SYSFLV000121', 'SYSFPR005', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002465', 'SYSFLV000121', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002466', 'SYSFLV000121', 'SYSFPR007', 0, 503.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002467', 'SYSFLV000121', 'SYSFPR008', 0, 310.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002468', 'SYSFLV000121', 'SYSFPR009', 0, 63.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002469', 'SYSFLV000121', 'SYSFPR011', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002470', 'SYSFLV000121', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002471', 'SYSFLV000121', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002472', 'SYSFLV000121', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002473', 'SYSFLV000121', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002474', 'SYSFLV000121', 'SYSFPR047', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002475', 'SYSFLV000121', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--KINDER 2 (SYSFLV000122)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002476', 'SYSFLV000122', 'SYSFPR001', 0, 14975.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002477', 'SYSFLV000122', 'SYSFPR002', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002478', 'SYSFLV000122', 'SYSFPR003', 0, 211.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002479', 'SYSFLV000122', 'SYSFPR004', 0, 532.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002480', 'SYSFLV000122', 'SYSFPR005', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002481', 'SYSFLV000122', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002482', 'SYSFLV000122', 'SYSFPR007', 0, 503.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002483', 'SYSFLV000122', 'SYSFPR008', 0, 310.36, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002484', 'SYSFLV000122', 'SYSFPR009', 0, 63.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002485', 'SYSFLV000122', 'SYSFPR011', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002486', 'SYSFLV000122', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002487', 'SYSFLV000122', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002488', 'SYSFLV000122', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002489', 'SYSFLV000122', 'SYSFPR021', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002490', 'SYSFLV000122', 'SYSFPR047', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002491', 'SYSFLV000122', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002492', 'SYSFLV000122', 'SYSFPR029', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002493', 'SYSFLV000122', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002494', 'SYSFLV000122', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--GRADE 1 (SYSFLV000123)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002495', 'SYSFLV000123', 'SYSFPR001', 0, 15786.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002496', 'SYSFLV000123', 'SYSFPR002', 0, 362.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002497', 'SYSFLV000123', 'SYSFPR003', 0, 211.60, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002498', 'SYSFLV000123', 'SYSFPR011', 0, 120.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002499', 'SYSFLV000123', 'SYSFPR004', 0, 489.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002500', 'SYSFLV000123', 'SYSFPR005', 0, 141.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002501', 'SYSFLV000123', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002502', 'SYSFLV000123', 'SYSFPR007', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002503', 'SYSFLV000123', 'SYSFPR008', 0, 288.18, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002504', 'SYSFLV000123', 'SYSFPR012', 0, 36.66, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002505', 'SYSFLV000123', 'SYSFPR013', 0, 42.14, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002506', 'SYSFLV000123', 'SYSFPR010', 0, 109.93, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002507', 'SYSFLV000123', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002508', 'SYSFLV000123', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002509', 'SYSFLV000123', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002510', 'SYSFLV000123', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002511', 'SYSFLV000123', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002512', 'SYSFLV000123', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002513', 'SYSFLV000123', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--GRADE 2 (SYSFLV000124)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002514', 'SYSFLV000124', 'SYSFPR001', 0, 14753.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002515', 'SYSFLV000124', 'SYSFPR002', 0, 339.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002516', 'SYSFLV000124', 'SYSFPR003', 0, 197.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002517', 'SYSFLV000124', 'SYSFPR011', 0, 113.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002518', 'SYSFLV000124', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002519', 'SYSFLV000124', 'SYSFPR005', 0, 131.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002520', 'SYSFLV000124', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002521', 'SYSFLV000124', 'SYSFPR007', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002522', 'SYSFLV000124', 'SYSFPR008', 0, 269.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002523', 'SYSFLV000124', 'SYSFPR012', 0, 34.26, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002524', 'SYSFLV000124', 'SYSFPR013', 0, 39.38, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002525', 'SYSFLV000124', 'SYSFPR010', 0, 102.74, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')


INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002526', 'SYSFLV000124', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002527', 'SYSFLV000124', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002528', 'SYSFLV000124', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002529', 'SYSFLV000124', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002530', 'SYSFLV000124', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002531', 'SYSFLV000124', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--GRADE 3 (SYSFLV000125)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002532', 'SYSFLV000125', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002533', 'SYSFLV000125', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002534', 'SYSFLV000125', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002535', 'SYSFLV000125', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002536', 'SYSFLV000125', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002537', 'SYSFLV000125', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002538', 'SYSFLV000125', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002539', 'SYSFLV000125', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002540', 'SYSFLV000125', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002541', 'SYSFLV000125', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002542', 'SYSFLV000125', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002543', 'SYSFLV000125', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002544', 'SYSFLV000125', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002545', 'SYSFLV000125', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002546', 'SYSFLV000125', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002547', 'SYSFLV000125', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002548', 'SYSFLV000125', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002549', 'SYSFLV000125', 'SYSFPR027', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002550', 'SYSFLV000125', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002551', 'SYSFLV000125', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--GRADE 4 (SYSFLV000126)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002552', 'SYSFLV000126', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002553', 'SYSFLV000126', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002554', 'SYSFLV000126', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002555', 'SYSFLV000126', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002556', 'SYSFLV000126', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002557', 'SYSFLV000126', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002558', 'SYSFLV000126', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002559', 'SYSFLV000126', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002560', 'SYSFLV000126', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002561', 'SYSFLV000126', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002562', 'SYSFLV000126', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002563', 'SYSFLV000126', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002564', 'SYSFLV000126', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002565', 'SYSFLV000126', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002566', 'SYSFLV000126', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002567', 'SYSFLV000126', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002568', 'SYSFLV000126', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002569', 'SYSFLV000126', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002570', 'SYSFLV000126', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002571', 'SYSFLV000126', 'SYSFPR026', 0, 880.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002572', 'SYSFLV000126', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--GRADE 5 (SYSFLV000127)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002573', 'SYSFLV000127', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002574', 'SYSFLV000127', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002575', 'SYSFLV000127', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002576', 'SYSFLV000127', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002577', 'SYSFLV000127', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002578', 'SYSFLV000127', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002579', 'SYSFLV000127', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002580', 'SYSFLV000127', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002581', 'SYSFLV000127', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002582', 'SYSFLV000127', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002583', 'SYSFLV000127', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002584', 'SYSFLV000127', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002585', 'SYSFLV000127', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002586', 'SYSFLV000127', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002587', 'SYSFLV000127', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002588', 'SYSFLV000127', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002589', 'SYSFLV000127', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002590', 'SYSFLV000127', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002591', 'SYSFLV000127', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002592', 'SYSFLV000127', 'SYSFPR026', 0, 880.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002593', 'SYSFLV000127', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADE SCHOOL (CG01)
--GRADE 6 (SYSFLV000128)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002594', 'SYSFLV000128', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002595', 'SYSFLV000128', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002596', 'SYSFLV000128', 'SYSFPR003', 0, 184.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002597', 'SYSFLV000128', 'SYSFPR011', 0, 105.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002598', 'SYSFLV000128', 'SYSFPR004', 0, 427.73, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002599', 'SYSFLV000128', 'SYSFPR005', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002600', 'SYSFLV000128', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002601', 'SYSFLV000128', 'SYSFPR007', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002602', 'SYSFLV000128', 'SYSFPR008', 0, 251.71, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002603', 'SYSFLV000128', 'SYSFPR012', 0, 32.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002604', 'SYSFLV000128', 'SYSFPR013', 0, 36.80, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002605', 'SYSFLV000128', 'SYSFPR014', 0, 2149.86, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002606', 'SYSFLV000128', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002607', 'SYSFLV000128', 'SYSFPR010', 0, 96.02, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002608', 'SYSFLV000128', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002609', 'SYSFLV000128', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002610', 'SYSFLV000128', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002611', 'SYSFLV000128', 'SYSFPR024', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002612', 'SYSFLV000128', 'SYSFPR025', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002613', 'SYSFLV000128', 'SYSFPR026', 0, 880.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002614', 'SYSFLV000128', 'SYSFPR028', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002615', 'SYSFLV000128', 'SYSFPR029', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002616', 'SYSFLV000128', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002617', 'SYSFLV000128', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002618', 'SYSFLV000128', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--HIGH SCHOOL (CG02)
--1ST YEAR (SYSFLV000129)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002619', 'SYSFLV000129', 'SYSFPR001', 0, 15786.33, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002620', 'SYSFLV000129', 'SYSFPR002', 0, 362.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002621', 'SYSFLV000129', 'SYSFPR003', 0, 221.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002622', 'SYSFLV000129', 'SYSFPR011', 0, 141.08, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002623', 'SYSFLV000129', 'SYSFPR004', 0, 391.89, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002624', 'SYSFLV000129', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002625', 'SYSFLV000129', 'SYSFPR012', 0, 105.34, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002626', 'SYSFLV000129', 'SYSFPR008', 0, 332.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002627', 'SYSFLV000129', 'SYSFPR010', 0, 84.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002628', 'SYSFLV000129', 'SYSFPR005', 0, 161.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002629', 'SYSFLV000129', 'SYSFPR014', 0, 2828.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002630', 'SYSFLV000129', 'SYSFPR007', 0, 302.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002631', 'SYSFLV000129', 'SYSFPR013', 0, 282.14, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002632', 'SYSFLV000129', 'SYSFPR015', 0, 666.21, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002633', 'SYSFLV000129', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002634', 'SYSFLV000129', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002635', 'SYSFLV000129', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002636', 'SYSFLV000129', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002637', 'SYSFLV000129', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002638', 'SYSFLV000129', 'SYSFPR047', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002639', 'SYSFLV000129', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002640', 'SYSFLV000129', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002641', 'SYSFLV000129', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002642', 'SYSFLV000129', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--HIGH SCHOOL (CG02)
--2ND YEAR (SYSFLV000130)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002643', 'SYSFLV000130', 'SYSFPR001', 0, 14753.58, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002644', 'SYSFLV000130', 'SYSFPR002', 0, 339.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002645', 'SYSFLV000130', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002646', 'SYSFLV000130', 'SYSFPR011', 0, 131.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002647', 'SYSFLV000130', 'SYSFPR004', 0, 366.25, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002648', 'SYSFLV000130', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002649', 'SYSFLV000130', 'SYSFPR012', 0, 98.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002650', 'SYSFLV000130', 'SYSFPR008', 0, 310.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002651', 'SYSFLV000130', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002652', 'SYSFLV000130', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002653', 'SYSFLV000130', 'SYSFPR014', 0, 2828.92, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002654', 'SYSFLV000130', 'SYSFPR007', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002655', 'SYSFLV000130', 'SYSFPR013', 0, 263.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002656', 'SYSFLV000130', 'SYSFPR015', 0, 622.63, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002657', 'SYSFLV000130', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002658', 'SYSFLV000130', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002659', 'SYSFLV000130', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002660', 'SYSFLV000130', 'SYSFPR033', 0, 75.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002661', 'SYSFLV000130', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002662', 'SYSFLV000130', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--HIGH SCHOOL (CG02)
--3RD YEAR (SYSFLV000131)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002663', 'SYSFLV000131', 'SYSFPR001', 0, 13788.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002664', 'SYSFLV000131', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002665', 'SYSFLV000131', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002666', 'SYSFLV000131', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002667', 'SYSFLV000131', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002668', 'SYSFLV000131', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002669', 'SYSFLV000131', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002670', 'SYSFLV000131', 'SYSFPR008', 0, 308.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002671', 'SYSFLV000131', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002672', 'SYSFLV000131', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002673', 'SYSFLV000131', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002674', 'SYSFLV000131', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002675', 'SYSFLV000131', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002676', 'SYSFLV000131', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002677', 'SYSFLV000131', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002678', 'SYSFLV000131', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002679', 'SYSFLV000131', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002680', 'SYSFLV000131', 'SYSFPR033', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002681', 'SYSFLV000131', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002682', 'SYSFLV000131', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--HIGH SCHOOL (CG02)
--4TH YEAR (SYSFLV000132)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002683', 'SYSFLV000132', 'SYSFPR001', 0, 12534.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002684', 'SYSFLV000132', 'SYSFPR002', 0, 316.85, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002685', 'SYSFLV000132', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002686', 'SYSFLV000132', 'SYSFPR011', 0, 123.22, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002687', 'SYSFLV000132', 'SYSFPR004', 0, 342.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002688', 'SYSFLV000132', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002689', 'SYSFLV000132', 'SYSFPR012', 0, 92.01, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002690', 'SYSFLV000132', 'SYSFPR008', 0, 308.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002691', 'SYSFLV000132', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002692', 'SYSFLV000132', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002693', 'SYSFLV000132', 'SYSFPR014', 0, 3478.75, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002694', 'SYSFLV000132', 'SYSFPR007', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002695', 'SYSFLV000132', 'SYSFPR013', 0, 246.43, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002696', 'SYSFLV000132', 'SYSFPR015', 0, 581.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002697', 'SYSFLV000132', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002698', 'SYSFLV000132', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002699', 'SYSFLV000132', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002700', 'SYSFLV000132', 'SYSFPR033', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002701', 'SYSFLV000132', 'SYSFPR034', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002702', 'SYSFLV000132', 'SYSFPR026', 0, 700.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002703', 'SYSFLV000132', 'SYSFPR029', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002704', 'SYSFLV000132', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002705', 'SYSFLV000132', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002706', 'SYSFLV000132', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002707', 'SYSFLV000132', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--COLLEGE (CG03)
--1ST YEAR (SYSFLV000133)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002708', 'SYSFLV000133', 'SYSFPR001', 0, 395.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002709', 'SYSFLV000133', 'SYSFPR002', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002710', 'SYSFLV000133', 'SYSFPR003', 0, 221.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002711', 'SYSFLV000133', 'SYSFPR011', 0, 130.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002712', 'SYSFLV000133', 'SYSFPR004', 0, 584.42, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002713', 'SYSFLV000133', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002714', 'SYSFLV000133', 'SYSFPR012', 0, 113.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002715', 'SYSFLV000133', 'SYSFPR008', 0, 302.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002716', 'SYSFLV000133', 'SYSFPR010', 0, 84.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002717', 'SYSFLV000133', 'SYSFPR005', 0, 161.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002718', 'SYSFLV000133', 'SYSFPR007', 0, 322.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002719', 'SYSFLV000133', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002720', 'SYSFLV000133', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002721', 'SYSFLV000133', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002722', 'SYSFLV000133', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002723', 'SYSFLV000133', 'SYSFPR035', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002724', 'SYSFLV000133', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002725', 'SYSFLV000133', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002726', 'SYSFLV000133', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002727', 'SYSFLV000133', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002728', 'SYSFLV000133', 'SYSFPR037', 0, 765.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002729', 'SYSFLV000133', 'SYSFPR050', 0, 1058.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002730', 'SYSFLV000133', 'SYSFPR051', 0, 3174.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002731', 'SYSFLV000133', 'SYSFPR042', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002732', 'SYSFLV000133', 'SYSFPR043', 0, 806.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002733', 'SYSFLV000133', 'SYSFPR044', 0, 302.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000134)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002734', 'SYSFLV000134', 'SYSFPR001', 0, 369.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002735', 'SYSFLV000134', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002736', 'SYSFLV000134', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002737', 'SYSFLV000134', 'SYSFPR011', 0, 122.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002738', 'SYSFLV000134', 'SYSFPR004', 0, 546.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002739', 'SYSFLV000134', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002740', 'SYSFLV000134', 'SYSFPR012', 0, 106.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002741', 'SYSFLV000134', 'SYSFPR008', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002742', 'SYSFLV000134', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002743', 'SYSFLV000134', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002744', 'SYSFLV000134', 'SYSFPR007', 0, 301.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002745', 'SYSFLV000134', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002746', 'SYSFLV000134', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002747', 'SYSFLV000134', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002748', 'SYSFLV000134', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002749', 'SYSFLV000134', 'SYSFPR037', 0, 715.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002750', 'SYSFLV000134', 'SYSFPR050', 0, 988.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002751', 'SYSFLV000134', 'SYSFPR051', 0, 2966.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002752', 'SYSFLV000134', 'SYSFPR042', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002753', 'SYSFLV000134', 'SYSFPR043', 0, 753.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002754', 'SYSFLV000134', 'SYSFPR044', 0, 282.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--COLLEGE (CG03)
--3RD YEAR (SYSFLV000135)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002755', 'SYSFLV000135', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002756', 'SYSFLV000135', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002757', 'SYSFLV000135', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002758', 'SYSFLV000135', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002759', 'SYSFLV000135', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002760', 'SYSFLV000135', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002761', 'SYSFLV000135', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002762', 'SYSFLV000135', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002763', 'SYSFLV000135', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002764', 'SYSFLV000135', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002765', 'SYSFLV000135', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002766', 'SYSFLV000135', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002767', 'SYSFLV000135', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002768', 'SYSFLV000135', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002769', 'SYSFLV000135', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002770', 'SYSFLV000135', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002771', 'SYSFLV000135', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002772', 'SYSFLV000135', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002773', 'SYSFLV000135', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002774', 'SYSFLV000135', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002775', 'SYSFLV000135', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--COLLEGE (CG03)
--4TH YEAR (SYSFLV000136)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002776', 'SYSFLV000136', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002777', 'SYSFLV000136', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002778', 'SYSFLV000136', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002779', 'SYSFLV000136', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002780', 'SYSFLV000136', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002781', 'SYSFLV000136', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002782', 'SYSFLV000136', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002783', 'SYSFLV000136', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002784', 'SYSFLV000136', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002785', 'SYSFLV000136', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002786', 'SYSFLV000136', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002787', 'SYSFLV000136', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002788', 'SYSFLV000136', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002789', 'SYSFLV000136', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002790', 'SYSFLV000136', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002791', 'SYSFLV000136', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002792', 'SYSFLV000136', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002793', 'SYSFLV000136', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002794', 'SYSFLV000136', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002795', 'SYSFLV000136', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002796', 'SYSFLV000136', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002797', 'SYSFLV000136', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002798', 'SYSFLV000136', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002799', 'SYSFLV000136', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002800', 'SYSFLV000136', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002801', 'SYSFLV000136', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADUATE SCHOOL (CG04)
--MASTERAL (SYSFLV000137)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002802', 'SYSFLV000137', 'SYSFPR001', 0, 512.09, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002803', 'SYSFLV000137', 'SYSFPR002', 0, 483.67, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002804', 'SYSFLV000137', 'SYSFPR004', 0, 665.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002805', 'SYSFLV000137', 'SYSFPR016', 0, 272.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008
--GRADUATE SCHOOL (CG04)
--DOCTORATE (SYSFLV000138)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002806', 'SYSFLV000138', 'SYSFPR001', 0, 572.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002807', 'SYSFLV000138', 'SYSFPR002', 0, 483.67, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002808', 'SYSFLV000138', 'SYSFPR004', 0, 665.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002809', 'SYSFLV000138', 'SYSFPR016', 0, 272.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--SY 20072008 (SUMMER)
--COLLEGE (CG03)
--1ST YEAR (SYSFLV000139)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002810', 'SYSFLV000139', 'SYSFPR001', 0, 395.70, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002811', 'SYSFLV000139', 'SYSFPR002', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002812', 'SYSFLV000139', 'SYSFPR003', 0, 221.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002813', 'SYSFLV000139', 'SYSFPR011', 0, 130.98, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002814', 'SYSFLV000139', 'SYSFPR004', 0, 584.42, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002815', 'SYSFLV000139', 'SYSFPR006', 0, 201.53, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002816', 'SYSFLV000139', 'SYSFPR012', 0, 113.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002817', 'SYSFLV000139', 'SYSFPR008', 0, 302.30, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002818', 'SYSFLV000139', 'SYSFPR010', 0, 84.27, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002819', 'SYSFLV000139', 'SYSFPR005', 0, 161.23, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002820', 'SYSFLV000139', 'SYSFPR007', 0, 322.44, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002821', 'SYSFLV000139', 'SYSFPR017', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002822', 'SYSFLV000139', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002823', 'SYSFLV000139', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002824', 'SYSFLV000139', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002825', 'SYSFLV000139', 'SYSFPR035', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002826', 'SYSFLV000139', 'SYSFPR021', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002827', 'SYSFLV000139', 'SYSFPR022', 0, 300.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002828', 'SYSFLV000139', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002829', 'SYSFLV000139', 'SYSFPR025', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002830', 'SYSFLV000139', 'SYSFPR037', 0, 765.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002831', 'SYSFLV000139', 'SYSFPR050', 0, 1058.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002832', 'SYSFLV000139', 'SYSFPR051', 0, 3174.11, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002833', 'SYSFLV000139', 'SYSFPR042', 0, 403.06, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002834', 'SYSFLV000139', 'SYSFPR043', 0, 806.13, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002835', 'SYSFLV000139', 'SYSFPR044', 0, 302.29, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008 (SUMMER)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000140)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002836', 'SYSFLV000140', 'SYSFPR001', 0, 369.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002837', 'SYSFLV000140', 'SYSFPR002', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002838', 'SYSFLV000140', 'SYSFPR003', 0, 207.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002839', 'SYSFLV000140', 'SYSFPR011', 0, 122.41, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002840', 'SYSFLV000140', 'SYSFPR004', 0, 546.19, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002841', 'SYSFLV000140', 'SYSFPR006', 0, 188.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002842', 'SYSFLV000140', 'SYSFPR012', 0, 106.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002843', 'SYSFLV000140', 'SYSFPR008', 0, 282.52, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002844', 'SYSFLV000140', 'SYSFPR010', 0, 78.76, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002845', 'SYSFLV000140', 'SYSFPR005', 0, 150.68, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002846', 'SYSFLV000140', 'SYSFPR007', 0, 301.35, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002847', 'SYSFLV000140', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002848', 'SYSFLV000140', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002849', 'SYSFLV000140', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002850', 'SYSFLV000140', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002851', 'SYSFLV000140', 'SYSFPR037', 0, 715.72, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002852', 'SYSFLV000140', 'SYSFPR050', 0, 988.81, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002853', 'SYSFLV000140', 'SYSFPR051', 0, 2966.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002854', 'SYSFLV000140', 'SYSFPR042', 0, 376.69, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002855', 'SYSFLV000140', 'SYSFPR043', 0, 753.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002856', 'SYSFLV000140', 'SYSFPR044', 0, 282.51, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008 (SUMMER)
--COLLEGE (CG03)
--3RD YEAR (SYSFLV000141)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002857', 'SYSFLV000141', 'SYSFPR001', 0, 345.62, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002858', 'SYSFLV000141', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002859', 'SYSFLV000141', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002860', 'SYSFLV000141', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002861', 'SYSFLV000141', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002862', 'SYSFLV000141', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002863', 'SYSFLV000141', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002864', 'SYSFLV000141', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002865', 'SYSFLV000141', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002866', 'SYSFLV000141', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002867', 'SYSFLV000141', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002868', 'SYSFLV000141', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002869', 'SYSFLV000141', 'SYSFPR019', 0, 500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002870', 'SYSFLV000141', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002871', 'SYSFLV000141', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002872', 'SYSFLV000141', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002873', 'SYSFLV000141', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002874', 'SYSFLV000141', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002875', 'SYSFLV000141', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002876', 'SYSFLV000141', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002877', 'SYSFLV000141', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008 (SUMMER)
--COLLEGE (CG03)
--4TH YEAR (SYSFLV000142)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002878', 'SYSFLV000142', 'SYSFPR001', 0, 314.20, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002879', 'SYSFLV000142', 'SYSFPR002', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002880', 'SYSFLV000142', 'SYSFPR003', 0, 193.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002881', 'SYSFLV000142', 'SYSFPR011', 0, 114.40, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002882', 'SYSFLV000142', 'SYSFPR004', 0, 510.46, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002883', 'SYSFLV000142', 'SYSFPR006', 0, 176.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002884', 'SYSFLV000142', 'SYSFPR012', 0, 99.49, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002885', 'SYSFLV000142', 'SYSFPR008', 0, 264.04, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002886', 'SYSFLV000142', 'SYSFPR010', 0, 73.61, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002887', 'SYSFLV000142', 'SYSFPR005', 0, 140.82, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002888', 'SYSFLV000142', 'SYSFPR007', 0, 281.64, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002889', 'SYSFLV000142', 'SYSFPR018', 0, 50.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002890', 'SYSFLV000142', 'SYSFPR019', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002891', 'SYSFLV000142', 'SYSFPR020', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002892', 'SYSFLV000142', 'SYSFPR036', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002893', 'SYSFLV000142', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002894', 'SYSFLV000142', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002895', 'SYSFLV000142', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002896', 'SYSFLV000142', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002897', 'SYSFLV000142', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002898', 'SYSFLV000142', 'SYSFPR037', 0, 668.90, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002899', 'SYSFLV000142', 'SYSFPR050', 0, 924.12, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002900', 'SYSFLV000142', 'SYSFPR051', 0, 2772.39, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002901', 'SYSFLV000142', 'SYSFPR042', 0, 352.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002902', 'SYSFLV000142', 'SYSFPR043', 0, 704.10, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002903', 'SYSFLV000142', 'SYSFPR044', 0, 264.03, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008 (SUMMER)
--GRADUATE SCHOOL (CG04)
--MASTERAL (SYSFLV000143)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002904', 'SYSFLV000143', 'SYSFPR001', 0, 512.09, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002905', 'SYSFLV000143', 'SYSFPR002', 0, 483.67, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002906', 'SYSFLV000143', 'SYSFPR004', 0, 665.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002907', 'SYSFLV000143', 'SYSFPR016', 0, 272.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008 (SUMMER)
--GRADUATE SCHOOL (CG04)
--DOCTORATE (SYSFLV000144)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002908', 'SYSFLV000144', 'SYSFPR001', 0, 572.45, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002909', 'SYSFLV000144', 'SYSFPR002', 0, 483.67, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002910', 'SYSFLV000144', 'SYSFPR004', 0, 665.05, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002911', 'SYSFLV000144', 'SYSFPR016', 0, 272.07, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--SY 20082009 (GRADUATION FEE)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000015)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002912', 'SYSFLV000015', 'SYSFPR029', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002913', 'SYSFLV000015', 'SYSFPR030', 0, 2000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002914', 'SYSFLV000015', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002915', 'SYSFLV000015', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--SY 20082009 (SUMMER) (GRADUATION FEE)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000146)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002916', 'SYSFLV000146', 'SYSFPR029', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002917', 'SYSFLV000146', 'SYSFPR030', 0, 2000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002918', 'SYSFLV000146', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002919', 'SYSFLV000146', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000034)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002920', 'SYSFLV000034', 'SYSFPR029', 0, 495.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002921', 'SYSFLV000034', 'SYSFPR030', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002922', 'SYSFLV000034', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002923', 'SYSFLV000034', 'SYSFPR032', 0, 60.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002924', 'SYSFLV000034', 'SYSFPR049', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 SUMMER (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000040)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002925', 'SYSFLV000040', 'SYSFPR029', 0, 495.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002926', 'SYSFLV000040', 'SYSFPR030', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002927', 'SYSFLV000040', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002928', 'SYSFLV000040', 'SYSFPR032', 0, 60.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002929', 'SYSFLV000040', 'SYSFPR049', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY 2003 - 2004 SUMMER (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000042)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002930', 'SYSFLV000042', 'SYSFPR029', 0, 495.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002931', 'SYSFLV000042', 'SYSFPR030', 0, 1000.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002932', 'SYSFLV000042', 'SYSFPR031', 0, 200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002933', 'SYSFLV000042', 'SYSFPR032', 0, 60.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002934', 'SYSFLV000042', 'SYSFPR049', 0, 120.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000059)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002935', 'SYSFLV000059', 'SYSFPR029', 0, 544.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002936', 'SYSFLV000059', 'SYSFPR030', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002937', 'SYSFLV000059', 'SYSFPR031', 0, 220.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002938', 'SYSFLV000059', 'SYSFPR032', 0, 66.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002939', 'SYSFLV000059', 'SYSFPR049', 0, 132.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 SUMMER (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000065)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002940', 'SYSFLV000065', 'SYSFPR029', 0, 544.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002941', 'SYSFLV000065', 'SYSFPR030', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002942', 'SYSFLV000065', 'SYSFPR031', 0, 220.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002943', 'SYSFLV000065', 'SYSFPR032', 0, 66.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002944', 'SYSFLV000065', 'SYSFPR049', 0, 132.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY  2004 - 2005 SUMMER
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000067)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002945', 'SYSFLV000067', 'SYSFPR029', 0, 544.50, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002946', 'SYSFLV000067', 'SYSFPR030', 0, 1200.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002947', 'SYSFLV000067', 'SYSFPR031', 0, 220.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002948', 'SYSFLV000067', 'SYSFPR032', 0, 66.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002949', 'SYSFLV000067', 'SYSFPR049', 0, 132.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006  (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000084)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002950', 'SYSFLV000084', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002951', 'SYSFLV000084', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002952', 'SYSFLV000084', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002953', 'SYSFLV000084', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002954', 'SYSFLV000084', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006 SUMMER (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--2ND YEAR (SYSFLV000090)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002955', 'SYSFLV000090', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002956', 'SYSFLV000090', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002957', 'SYSFLV000090', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002958', 'SYSFLV000090', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002959', 'SYSFLV000090', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--ums.school_fee_details
--SY   2005 - 2006 SUMMER (GRADUATION FEE)
--COLLEGE SCHOOL (CG03)
--4TH YEAR (SYSFLV000092)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002960', 'SYSFLV000092', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002961', 'SYSFLV000092', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002962', 'SYSFLV000092', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002963', 'SYSFLV000092', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by)
	VALUES ('SYSFDL000002964', 'SYSFLV000092', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
GO

--SY 20062007 (GRADUATION FEE)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000109)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002965', 'SYSFLV000109', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002966', 'SYSFLV000109', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002967', 'SYSFLV000109', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002968', 'SYSFLV000109', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002969', 'SYSFLV000109', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20062007 (SUMMER) (GRADUATION FEE)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000115)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002970', 'SYSFLV000115', 'SYSFPR029', 0, 800.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002971', 'SYSFLV000115', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002972', 'SYSFLV000115', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002973', 'SYSFLV000115', 'SYSFPR032', 0, 100.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002974', 'SYSFLV000115', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008 (GRADUATION FEE)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000134)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002975', 'SYSFLV000134', 'SYSFPR029', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002976', 'SYSFLV000134', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002977', 'SYSFLV000134', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002978', 'SYSFLV000134', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002979', 'SYSFLV000134', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')

--SY 20072008 (SUMMER) (GRADUATION FEE)
--COLLEGE (CG03)
--2ND YEAR (SYSFLV000140)
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002980', 'SYSFLV000140', 'SYSFPR029', 0, 750.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002981', 'SYSFLV000140', 'SYSFPR030', 0, 1500.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002982', 'SYSFLV000140', 'SYSFPR031', 0, 250.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002983', 'SYSFLV000140', 'SYSFPR032', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')
INSERT INTO ums.school_fee_details(sysid_feedetails, sysid_feelevel, sysid_feeparticular, is_level_increase, amount, created_by) 
	VALUES ('SYSFDL000002984', 'SYSFLV000140', 'SYSFPR049', 0, 150.00, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#')



--ums.chart_of_accounts
INSERT INTO ums.chart_of_accounts(sysid_account, accounting_category_id, account_code, account_name, summary_account, is_debit_side_increase, is_active_account, created_by)
	SELECT 'SYSCOA00001', 'ACID01', '1000-0000', 'ASSETS', NULL, 1, 1, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
	UNION
	SELECT 'SYSCOA00002', 'ACID02', '1100-0000', 'CURRENT ASSETS', 'SYSCOA00001', 1, 1, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
	UNION
	SELECT 'SYSCOA00003', 'ACID03', '1110-0000', 'CASH', 'SYSCOA00002', 1, 1, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
	UNION
	SELECT 'SYSCOA00004', 'ACID04', '1110-0001', 'Cash on Hand', 'SYSCOA00003', 1, 1, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
	UNION
	SELECT 'SYSCOA00005', 'ACID04', '1110-0002', 'Petty Cash Fund', 'SYSCOA00003', 1, 1, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
	UNION
	SELECT 'SYSCOA00006', 'ACID04', '1110-0003', 'Contingency Fund', 'SYSCOA00003', 1, 1, '#Tuy@i*2sz@kUw-2!us%WBxYzwP#'
	GO

-- ##########################################END INITIAL DATABASE INFORMATION#############################################################


-- ########################################FOR CODE DEBUGGING########################################################################
-- ########################################END FOR CODE DEBUGGING########################################################################
